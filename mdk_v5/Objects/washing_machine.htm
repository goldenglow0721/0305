<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\washing_machine.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\washing_machine.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Jul 30 18:47:35 2024
<BR><P>
<H3>Maximum Stack Usage =       1100 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
_gt_png_open &rArr; _common_png_open &rArr; lodepng_decode32 &rArr; lodepng_decode_memory &rArr; lodepng_decode &rArr; decodeGeneric &rArr; postProcessScanlines &rArr; Adam7_deinterlace &rArr; Adam7_getpassvalues
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">NMI_Handler</a><BR>
 <LI><a href="#[3]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">HardFault_Handler</a><BR>
 <LI><a href="#[4]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">BusFault_Handler</a><BR>
 <LI><a href="#[6]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">UsageFault_Handler</a><BR>
 <LI><a href="#[8]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">DebugMon_Handler</a><BR>
 <LI><a href="#[4f]">ACC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f]">ACC_IRQHandler</a><BR>
 <LI><a href="#[49e]">_free_event_recursive</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[49e]">_free_event_recursive</a><BR>
 <LI><a href="#[4cb]">_gt_event_send_kernel</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4cb]">_gt_event_send_kernel</a><BR>
 <LI><a href="#[45e]">_destroy_and_free_children</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[45e]">_destroy_and_free_children</a><BR>
 <LI><a href="#[4f6]">_gt_obj_move_child_by</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f6]">_gt_obj_move_child_by</a><BR>
 <LI><a href="#[41e]">_calc_max_area_recursive</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[41e]">_calc_max_area_recursive</a><BR>
 <LI><a href="#[428]">_check_and_copy_foreach</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[428]">_check_and_copy_foreach</a><BR>
 <LI><a href="#[534]">_row_grow_inside_invert</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[534]">_row_grow_inside_invert</a><BR>
 <LI><a href="#[533]">_row_grow_inside</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[533]">_row_grow_inside</a><BR>
 <LI><a href="#[3be]">gt_obj_child_set_prop</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3be]">gt_obj_child_set_prop</a><BR>
 <LI><a href="#[4f4]">_gt_obj_foreach_clicked</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f4]">_gt_obj_foreach_clicked</a><BR>
 <LI><a href="#[494]">_find_showing_recursive_by_type</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[494]">_find_showing_recursive_by_type</a><BR>
 <LI><a href="#[4f8]">_gt_obj_prev_focus_get</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f8]">_gt_obj_prev_focus_get</a><BR>
 <LI><a href="#[4f7]">_gt_obj_next_focus_get</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f7]">_gt_obj_next_focus_get</a><BR>
 <LI><a href="#[4f3]">_gt_obj_focus_clicked</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f3]">_gt_obj_focus_clicked</a><BR>
 <LI><a href="#[493]">_find_obj_recursive_by_type</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[493]">_find_obj_recursive_by_type</a><BR>
 <LI><a href="#[585]">color_tree_cleanup</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[585]">color_tree_cleanup</a><BR>
 <LI><a href="#[492]">_find_obj_recursive_by_id</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[492]">_find_obj_recursive_by_id</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4f]">ACC_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[164]">AD120</a> from activity_pressurecalibrate2.o(i.AD120) referenced 2 times from activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
 <LI><a href="#[1d]">ADC1_2_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[3a]">ADC3_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[185]">AD_U</a> from activity_sensormonitor.o(i.AD_U) referenced 2 times from activity_sensormonitor.o(i.gt_init_SensorMonitor)
 <LI><a href="#[145]">AccumBubble</a> from activity_paramsetting2.o(i.AccumBubble) referenced from activity_paramsetting2.o(i.gt_init_ParamSetting2)
 <LI><a href="#[103]">AccuracyCalibrate</a> from activity_maintenance1_1.o(i.AccuracyCalibrate) referenced from activity_maintenance1_1.o(i.gt_init_Maintenance1_1)
 <LI><a href="#[122]">AccuracyCalibrate</a> from activity_maintenance2_1.o(i.AccuracyCalibrate) referenced from activity_maintenance2_1.o(i.gt_init_Maintenance2_1)
 <LI><a href="#[19e]">Add</a> from activity_seqmode.o(i.Add) referenced from activity_seqmode.o(i.gt_init_SeqMode)
 <LI><a href="#[112]">AddBrand</a> from activity_maintenance1_3.o(i.AddBrand) referenced from activity_maintenance1_3.o(i.gt_init_Maintenance1_3)
 <LI><a href="#[118]">AddDrug</a> from activity_maintenance1_4.o(i.AddDrug) referenced from activity_maintenance1_4.o(i.gt_init_Maintenance1_4)
 <LI><a href="#[189]">AgainstRun</a> from activity_sensormonitor.o(i.AgainstRun) referenced from activity_sensormonitor.o(i.gt_init_SensorMonitor)
 <LI><a href="#[14c]">AutoLockTime</a> from activity_paramsetting3.o(i.AutoLockTime) referenced from activity_paramsetting3.o(i.gt_init_ParamSetting3)
 <LI><a href="#[14f]">AutoLockTime_state</a> from activity_paramsetting3.o(i.AutoLockTime_state) referenced from activity_paramsetting3.o(i.gt_init_ParamSetting3)
 <LI><a href="#[18c]">BEEP_detection</a> from activity_sensormonitor.o(i.BEEP_detection) referenced from activity_sensormonitor.o(i.gt_init_SensorMonitor)
 <LI><a href="#[a6]">Back</a> from activity_accuracycalibrate1.o(i.Back) referenced from activity_accuracycalibrate1.o(i.gt_init_AccuracyCalibrate1)
 <LI><a href="#[a8]">Back</a> from activity_accuracycalibrate2.o(i.Back) referenced from activity_accuracycalibrate2.o(i.gt_init_AccuracyCalibrate2)
 <LI><a href="#[b0]">Back</a> from activity_accuracycalibrate3.o(i.Back) referenced from activity_accuracycalibrate3.o(i.gt_init_AccuracyCalibrate3)
 <LI><a href="#[13b]">Back</a> from activity_paramsetting1.o(i.Back) referenced from activity_paramsetting1.o(i.gt_init_ParamSetting1)
 <LI><a href="#[179]">Back</a> from activity_restorefactory.o(i.Back) referenced from activity_restorefactory.o(i.gt_init_RestoreFactory)
 <LI><a href="#[17a]">Back</a> from activity_keyboard_int.o(i.Back) referenced from activity_keyboard_int.o(i.gt_init_Screen_KeyBoard_Int)
 <LI><a href="#[181]">Back</a> from activity_keyboard_soft.o(i.Back) referenced from activity_keyboard_soft.o(i.gt_init_Screen_KeyBoard_Soft)
 <LI><a href="#[20f]">Back</a> from activity_keyboard_password.o(i.Back) referenced from activity_keyboard_password.o(i.gt_init_screen_keyBoard_PassWord)
 <LI><a href="#[214]">Back</a> from activity_keyboard_float.o(i.Back) referenced from activity_keyboard_float.o(i.gt_init_screen_keyBoard_float)
 <LI><a href="#[13d]">BlockPressure</a> from activity_paramsetting1.o(i.BlockPressure) referenced from activity_paramsetting1.o(i.gt_init_ParamSetting1)
 <LI><a href="#[e8]">BolusModeQuantity</a> from activity_generalbolus.o(i.BolusModeQuantity) referenced 2 times from activity_generalbolus.o(i.gt_init_GeneralBolus)
 <LI><a href="#[192]">BolusModeQuantity</a> from activity_seqbolus.o(i.BolusModeQuantity) referenced 2 times from activity_seqbolus.o(i.gt_init_SeqBolus)
 <LI><a href="#[e7]">BolusModeSpeed</a> from activity_generalbolus.o(i.BolusModeSpeed) referenced 2 times from activity_generalbolus.o(i.gt_init_GeneralBolus)
 <LI><a href="#[191]">BolusModeSpeed</a> from activity_seqbolus.o(i.BolusModeSpeed) referenced from activity_seqbolus.o(i.gt_init_SeqBolus)
 <LI><a href="#[13c]">BrandChange</a> from activity_paramsetting1.o(i.BrandChange) referenced from activity_paramsetting1.o(i.gt_init_ParamSetting1)
 <LI><a href="#[b5]">BrandDown</a> from activity_brandchioce.o(i.BrandDown) referenced from activity_brandchioce.o(i.gt_init_BrandChoice)
 <LI><a href="#[b6]">BrandUp</a> from activity_brandchioce.o(i.BrandUp) referenced from activity_brandchioce.o(i.gt_init_BrandChoice)
 <LI><a href="#[77]">Brandaffirm</a> from activity_deletebrand.o(i.Brandaffirm) referenced from activity_deletebrand.o(i._dialog2_init)
 <LI><a href="#[144]">BubbleSize</a> from activity_paramsetting2.o(i.BubbleSize) referenced 2 times from activity_paramsetting2.o(i.gt_init_ParamSetting2)
 <LI><a href="#[5]">BusFault_Handler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[20]">CAN1_RX1_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[21]">CAN1_SE_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[4c]">CAN2_RX0_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[4d]">CAN2_RX1_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[4e]">CAN2_SE_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[4b]">CAN2_TX_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[10]">CRM_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[143]">ChangKVO</a> from activity_paramsetting2.o(i.ChangKVO) referenced 2 times from activity_paramsetting2.o(i.gt_init_ParamSetting2)
 <LI><a href="#[10c]">ChangeAlarm</a> from activity_maintenance1_2.o(i.ChangeAlarm) referenced from activity_maintenance1_2.o(i.gt_init_Maintenance1_2)
 <LI><a href="#[1f5]">ChangeBody</a> from activity_weightmode.o(i.ChangeBody) referenced 2 times from activity_weightmode.o(i.gt_init_WeightMode)
 <LI><a href="#[1ff]">ChangeDoseSpeed</a> from activity_weightmode2.o(i.ChangeDoseSpeed) referenced from activity_weightmode2.o(i.gt_init_WeightMode2)
 <LI><a href="#[20a]">ChangeDoseSpeed</a> from activity_weightmoderun.o(i.ChangeDoseSpeed) referenced from activity_weightmoderun.o(i.gt_init_WeightModeRun)
 <LI><a href="#[c9]">ChangeDrip</a> from activity_dripmode.o(i.ChangeDrip) referenced 2 times from activity_dripmode.o(i.gt_init_DripMode)
 <LI><a href="#[d2]">ChangeDrip</a> from activity_dripmoderun.o(i.ChangeDrip) referenced from activity_dripmoderun.o(i.gt_init_DripModeRun)
 <LI><a href="#[156]">ChangeDrips</a> from activity_paramsetting4.o(i.ChangeDrips) referenced from activity_paramsetting4.o(i.gt_init_ParamSetting4)
 <LI><a href="#[1f7]">ChangeLiquid</a> from activity_weightmode.o(i.ChangeLiquid) referenced 2 times from activity_weightmode.o(i.gt_init_WeightMode)
 <LI><a href="#[ac]">ChangeLiquid1</a> from activity_accuracycalibrate2_1.o(i.ChangeLiquid1) referenced from activity_accuracycalibrate2_1.o(i.gt_init_AccuracyCalibrate2_1)
 <LI><a href="#[ad]">ChangeLiquid2</a> from activity_accuracycalibrate2_1.o(i.ChangeLiquid2) referenced from activity_accuracycalibrate2_1.o(i.gt_init_AccuracyCalibrate2_1)
 <LI><a href="#[102]">ChangeMaxSpeed</a> from activity_maintenance1_1.o(i.ChangeMaxSpeed) referenced 2 times from activity_maintenance1_1.o(i.gt_init_Maintenance1_1)
 <LI><a href="#[1f6]">ChangeMedicine</a> from activity_weightmode.o(i.ChangeMedicine) referenced 2 times from activity_weightmode.o(i.gt_init_WeightMode)
 <LI><a href="#[60]">ChangeQuantity</a> from activity_seqmode.o(i.ChangeQuantity) referenced 2 times from activity_seqmode.o(i.CreatePage1)
 <LI><a href="#[60]">ChangeQuantity</a> from activity_seqmode.o(i.ChangeQuantity) referenced from activity_seqmode.o(i.CreatePage2)
 <LI><a href="#[ca]">ChangeQuantity</a> from activity_dripmode.o(i.ChangeQuantity) referenced 2 times from activity_dripmode.o(i.gt_init_DripMode)
 <LI><a href="#[1b5]">ChangeQuantity</a> from activity_speedmode.o(i.ChangeQuantity) referenced 2 times from activity_speedmode.o(i.gt_init_SpeedMode)
 <LI><a href="#[1ee]">ChangeQuantity</a> from activity_timemode.o(i.ChangeQuantity) referenced 2 times from activity_timemode.o(i.gt_init_TimeMode)
 <LI><a href="#[171]">ChangeRate</a> from activity_purge.o(i.ChangeRate) referenced from activity_purge.o(i.gt_init_Purge)
 <LI><a href="#[12c]">ChangeSeriesNumber</a> from activity_maintenance2_2.o(i.ChangeSeriesNumber) referenced from activity_maintenance2_2.o(i.gt_init_Maintenance2_2)
 <LI><a href="#[1ac]">ChangeSpeed</a> from activity_speedandtimemoderun.o(i.ChangeSpeed) referenced from activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
 <LI><a href="#[1bb]">ChangeTime</a> from activity_standby.o(i.ChangeTime) referenced from activity_standby.o(i.gt_init_Standby)
 <LI><a href="#[1ed]">ChangeTime</a> from activity_timemode.o(i.ChangeTime) referenced 2 times from activity_timemode.o(i.gt_init_TimeMode)
 <LI><a href="#[200]">ChangeWQuantity</a> from activity_weightmode2.o(i.ChangeWQuantity) referenced 2 times from activity_weightmode2.o(i.gt_init_WeightMode2)
 <LI><a href="#[b4]">Choice</a> from activity_brandchioce.o(i.Choice) referenced 2 times from activity_brandchioce.o(i.gt_init_BrandChoice)
 <LI><a href="#[b8]">Choice</a> from activity_brandchoice2.o(i.Choice) referenced 2 times from activity_brandchoice2.o(i.gt_init_BrandChoice2)
 <LI><a href="#[da]">Choice</a> from activity_drugchoice.o(i.Choice) referenced 2 times from activity_drugchoice.o(i.gt_init_DrugChoice)
 <LI><a href="#[ae]">Confirm</a> from activity_accuracycalibrate2_1.o(i.Confirm) referenced from activity_accuracycalibrate2_1.o(i.gt_init_AccuracyCalibrate2_1)
 <LI><a href="#[b1]">Confirm</a> from activity_accuracycalibrate3.o(i.Confirm) referenced from activity_accuracycalibrate3.o(i.gt_init_AccuracyCalibrate3)
 <LI><a href="#[e0]">Confirm</a> from activity_drugunit.o(i.Confirm) referenced from activity_drugunit.o(i.gt_init_DrugUnit)
 <LI><a href="#[13a]">Confirm</a> from activity_nightsetting.o(i.Confirm) referenced from activity_nightsetting.o(i.gt_init_NightSetting)
 <LI><a href="#[159]">Confirm</a> from activity_pressurecalibrate1.o(i.Confirm) referenced from activity_pressurecalibrate1.o(i.gt_init_PressureCalibrate1)
 <LI><a href="#[15c]">Confirm</a> from activity_pressurecalibrate2.o(i.Confirm) referenced from activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
 <LI><a href="#[177]">Confirm</a> from activity_purgesizesetting.o(i.Confirm) referenced from activity_purgesizesetting.o(i.gt_init_PurgeSizeSetting)
 <LI><a href="#[178]">Confirm</a> from activity_restorefactory.o(i.Confirm) referenced from activity_restorefactory.o(i.gt_init_RestoreFactory)
 <LI><a href="#[17e]">Confirm</a> from activity_keyboard_int.o(i.Confirm) referenced from activity_keyboard_int.o(i.gt_init_Screen_KeyBoard_Int)
 <LI><a href="#[180]">Confirm</a> from activity_keyboard_soft.o(i.Confirm) referenced from activity_keyboard_soft.o(i.gt_init_Screen_KeyBoard_Soft)
 <LI><a href="#[1c7]">Confirm</a> from activity_systemdatatimesetting.o(i.Confirm) referenced from activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting)
 <LI><a href="#[1e0]">Confirm</a> from activity_keyboard_time.o(i.Confirm) referenced from activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
 <LI><a href="#[213]">Confirm</a> from activity_keyboard_password.o(i.Confirm) referenced from activity_keyboard_password.o(i.gt_init_screen_keyBoard_PassWord)
 <LI><a href="#[218]">Confirm</a> from activity_keyboard_float.o(i.Confirm) referenced from activity_keyboard_float.o(i.gt_init_screen_keyBoard_float)
 <LI><a href="#[21a]">Confirm</a> from activity_shutdown.o(i.Confirm) referenced from activity_shutdown.o(i.gt_init_shutdown)
 <LI><a href="#[16]">DMA1_Channel1_IRQHandler</a> from battery_manage.o(i.DMA1_Channel1_IRQHandler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[17]">DMA1_Channel2_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[18]">DMA1_Channel3_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[19]">DMA1_Channel4_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel5_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel6_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel7_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[43]">DMA2_Channel1_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[44]">DMA2_Channel2_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[45]">DMA2_Channel3_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[46]">DMA2_Channel4_5_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[52]">DMA2_Channel6_7_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[1c6]">DataFormat</a> from activity_systemdatatimesetting.o(i.DataFormat) referenced from activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting)
 <LI><a href="#[1c5]">DataSetting</a> from activity_systemdatatimesetting.o(i.DataSetting) referenced from activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting)
 <LI><a href="#[11f]">DateAndTime</a> from activity_maintenance1_5.o(i.DateAndTime) referenced 2 times from activity_maintenance1_5.o(i.gt_init_Maintenance1_5)
 <LI><a href="#[8]">DebugMon_Handler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[19f]">Del</a> from activity_seqmode.o(i.Del) referenced from activity_seqmode.o(i.gt_init_SeqMode)
 <LI><a href="#[113]">DelBrand</a> from activity_maintenance1_3.o(i.DelBrand) referenced from activity_maintenance1_3.o(i.gt_init_Maintenance1_3)
 <LI><a href="#[17d]">DeleteAll</a> from activity_keyboard_int.o(i.DeleteAll) referenced from activity_keyboard_int.o(i.gt_init_Screen_KeyBoard_Int)
 <LI><a href="#[212]">DeleteAll</a> from activity_keyboard_password.o(i.DeleteAll) referenced from activity_keyboard_password.o(i.gt_init_screen_keyBoard_PassWord)
 <LI><a href="#[217]">DeleteAll</a> from activity_keyboard_float.o(i.DeleteAll) referenced from activity_keyboard_float.o(i.gt_init_screen_keyBoard_float)
 <LI><a href="#[119]">DeleteDrug</a> from activity_maintenance1_4.o(i.DeleteDrug) referenced from activity_maintenance1_4.o(i.gt_init_Maintenance1_4)
 <LI><a href="#[17c]">DeleteOne</a> from activity_keyboard_int.o(i.DeleteOne) referenced from activity_keyboard_int.o(i.gt_init_Screen_KeyBoard_Int)
 <LI><a href="#[182]">DeleteOne</a> from activity_keyboard_soft.o(i.DeleteOne) referenced from activity_keyboard_soft.o(i.gt_init_Screen_KeyBoard_Soft)
 <LI><a href="#[211]">DeleteOne</a> from activity_keyboard_password.o(i.DeleteOne) referenced from activity_keyboard_password.o(i.gt_init_screen_keyBoard_PassWord)
 <LI><a href="#[216]">DeleteOne</a> from activity_keyboard_float.o(i.DeleteOne) referenced from activity_keyboard_float.o(i.gt_init_screen_keyBoard_float)
 <LI><a href="#[12d]">Delete_History</a> from activity_maintenance2_2.o(i.Delete_History) referenced from activity_maintenance2_2.o(i.gt_init_Maintenance2_2)
 <LI><a href="#[204]">DoseUintChange</a> from activity_weightmode2.o(i.DoseUintChange) referenced from activity_weightmode2.o(i.gt_init_WeightMode2)
 <LI><a href="#[b9]">Down</a> from activity_brandchoice2.o(i.Down) referenced from activity_brandchoice2.o(i.gt_init_BrandChoice2)
 <LI><a href="#[c0]">Down</a> from activity_deletebrand.o(i.Down) referenced from activity_deletebrand.o(i.gt_init_DeleteBrand)
 <LI><a href="#[d9]">Down</a> from activity_drugchoice.o(i.Down) referenced from activity_drugchoice.o(i.gt_init_DrugChoice)
 <LI><a href="#[dd]">Down</a> from activity_drugdelete.o(i.Down) referenced from activity_drugdelete.o(i.gt_init_DrugDelete)
 <LI><a href="#[f1]">Down</a> from activity_historyview.o(i.Down) referenced from activity_historyview.o(i.gt_init_HistoryView)
 <LI><a href="#[140]">DownPage</a> from activity_paramsetting1.o(i.DownPage) referenced from activity_paramsetting1.o(i.gt_init_ParamSetting1)
 <LI><a href="#[147]">DownPage</a> from activity_paramsetting2.o(i.DownPage) referenced from activity_paramsetting2.o(i.gt_init_ParamSetting2)
 <LI><a href="#[14b]">DownPage</a> from activity_paramsetting3.o(i.DownPage) referenced from activity_paramsetting3.o(i.gt_init_ParamSetting3)
 <LI><a href="#[155]">DownPage</a> from activity_paramsetting4.o(i.DownPage) referenced from activity_paramsetting4.o(i.gt_init_ParamSetting4)
 <LI><a href="#[1da]">DownPage</a> from activity_systemsetting2.o(i.DownPage) referenced from activity_systemsetting2.o(i.gt_init_SystemSetting2)
 <LI><a href="#[79]">Drugaffirm</a> from activity_drugdelete.o(i.Drugaffirm) referenced from activity_drugdelete.o(i._dialog3_init)
 <LI><a href="#[56]">EMAC_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[57]">EMAC_WKUP_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[11]">EXINT0_IRQHandler</a> from gpio_manage.o(i.EXINT0_IRQHandler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[33]">EXINT15_10_IRQHandler</a> from ultrasonic.o(i.EXINT15_10_IRQHandler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[12]">EXINT1_IRQHandler</a> from main.o(i.EXINT1_IRQHandler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[13]">EXINT2_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[14]">EXINT3_IRQHandler</a> from battery_manage.o(i.EXINT3_IRQHandler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[15]">EXINT4_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[22]">EXINT9_5_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[139]">End_Time</a> from activity_nightsetting.o(i.End_Time) referenced from activity_nightsetting.o(i.gt_init_NightSetting)
 <LI><a href="#[131]">EnterBWMode</a> from activity_modeselect.o(i.EnterBWMode) referenced from activity_modeselect.o(i.gt_init_ModeSelect)
 <LI><a href="#[133]">EnterDripMode</a> from activity_modeselect.o(i.EnterDripMode) referenced from activity_modeselect.o(i.gt_init_ModeSelect)
 <LI><a href="#[134]">EnterDrugLibrary</a> from activity_modeselect.o(i.EnterDrugLibrary) referenced from activity_modeselect.o(i.gt_init_ModeSelect)
 <LI><a href="#[f9]">EnterParam</a> from activity_aaamainscreen.o(i.EnterParam) referenced 2 times from activity_aaamainscreen.o(i.gt_init_MainScreen)
 <LI><a href="#[170]">EnterPurgeRun</a> from activity_purge.o(i.EnterPurgeRun) referenced from activity_purge.o(i.gt_init_Purge)
 <LI><a href="#[12f]">EnterSpeedMode</a> from activity_modeselect.o(i.EnterSpeedMode) referenced from activity_modeselect.o(i.gt_init_ModeSelect)
 <LI><a href="#[132]">EnterSquenceMode</a> from activity_modeselect.o(i.EnterSquenceMode) referenced from activity_modeselect.o(i.gt_init_ModeSelect)
 <LI><a href="#[130]">EnterTimeMode</a> from activity_modeselect.o(i.EnterTimeMode) referenced from activity_modeselect.o(i.gt_init_ModeSelect)
 <LI><a href="#[aa]">EventUpdata</a> from activity_accuracycalibrate2_1.o(i.EventUpdata) referenced from activity_accuracycalibrate2_1.o(i.gt_init_AccuracyCalibrate2_1)
 <LI><a href="#[af]">EventUpdata</a> from activity_accuracycalibrate3.o(i.EventUpdata) referenced from activity_accuracycalibrate3.o(i.gt_init_AccuracyCalibrate3)
 <LI><a href="#[b7]">EventUpdata</a> from activity_brandchoice2.o(i.EventUpdata) referenced from activity_brandchoice2.o(i.gt_init_BrandChoice2)
 <LI><a href="#[c6]">EventUpdata</a> from activity_dripmode.o(i.EventUpdata) referenced from activity_dripmode.o(i.gt_init_DripMode)
 <LI><a href="#[ce]">EventUpdata</a> from activity_dripmoderun.o(i.EventUpdata) referenced from activity_dripmoderun.o(i.gt_init_DripModeRun)
 <LI><a href="#[e4]">EventUpdata</a> from activity_generalbolus.o(i.EventUpdata) referenced from activity_generalbolus.o(i.gt_init_GeneralBolus)
 <LI><a href="#[f8]">EventUpdata</a> from activity_aaamainscreen.o(i.EventUpdata) referenced from activity_aaamainscreen.o(i.gt_init_MainScreen)
 <LI><a href="#[100]">EventUpdata</a> from activity_maintenance1_1.o(i.EventUpdata) referenced from activity_maintenance1_1.o(i.gt_init_Maintenance1_1)
 <LI><a href="#[114]">EventUpdata</a> from activity_maintenance1_4.o(i.EventUpdata) referenced from activity_maintenance1_4.o(i.gt_init_Maintenance1_4)
 <LI><a href="#[127]">EventUpdata</a> from activity_maintenance2_2.o(i.EventUpdata) referenced from activity_maintenance2_2.o(i.gt_init_Maintenance2_2)
 <LI><a href="#[141]">EventUpdata</a> from activity_paramsetting2.o(i.EventUpdata) referenced from activity_paramsetting2.o(i.gt_init_ParamSetting2)
 <LI><a href="#[148]">EventUpdata</a> from activity_paramsetting3.o(i.EventUpdata) referenced from activity_paramsetting3.o(i.gt_init_ParamSetting3)
 <LI><a href="#[152]">EventUpdata</a> from activity_paramsetting4.o(i.EventUpdata) referenced from activity_paramsetting4.o(i.gt_init_ParamSetting4)
 <LI><a href="#[15a]">EventUpdata</a> from activity_pressurecalibrate2.o(i.EventUpdata) referenced from activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
 <LI><a href="#[16e]">EventUpdata</a> from activity_purge.o(i.EventUpdata) referenced from activity_purge.o(i.gt_init_Purge)
 <LI><a href="#[183]">EventUpdata</a> from activity_sensormonitor.o(i.EventUpdata) referenced from activity_sensormonitor.o(i.gt_init_SensorMonitor)
 <LI><a href="#[18f]">EventUpdata</a> from activity_seqbolus.o(i.EventUpdata) referenced from activity_seqbolus.o(i.gt_init_SeqBolus)
 <LI><a href="#[19a]">EventUpdata</a> from activity_seqmode.o(i.EventUpdata) referenced from activity_seqmode.o(i.gt_init_SeqMode)
 <LI><a href="#[1a8]">EventUpdata</a> from activity_speedandtimemoderun.o(i.EventUpdata) referenced from activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
 <LI><a href="#[1b1]">EventUpdata</a> from activity_speedmode.o(i.EventUpdata) referenced from activity_speedmode.o(i.gt_init_SpeedMode)
 <LI><a href="#[1b9]">EventUpdata</a> from activity_standby.o(i.EventUpdata) referenced from activity_standby.o(i.gt_init_Standby)
 <LI><a href="#[1c1]">EventUpdata</a> from activity_systemdatatimesetting.o(i.EventUpdata) referenced from activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting)
 <LI><a href="#[1cf]">EventUpdata</a> from activity_systemsetting1.o(i.EventUpdata) referenced from activity_systemsetting1.o(i.gt_init_SystemSetting1)
 <LI><a href="#[1de]">EventUpdata</a> from activity_keyboard_time.o(i.EventUpdata) referenced from activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
 <LI><a href="#[1ea]">EventUpdata</a> from activity_timemode.o(i.EventUpdata) referenced from activity_timemode.o(i.gt_init_TimeMode)
 <LI><a href="#[1f3]">EventUpdata</a> from activity_weightmode.o(i.EventUpdata) referenced from activity_weightmode.o(i.gt_init_WeightMode)
 <LI><a href="#[1fd]">EventUpdata</a> from activity_weightmode2.o(i.EventUpdata) referenced from activity_weightmode2.o(i.gt_init_WeightMode2)
 <LI><a href="#[206]">EventUpdata</a> from activity_weightmoderun.o(i.EventUpdata) referenced from activity_weightmoderun.o(i.gt_init_WeightModeRun)
 <LI><a href="#[11a]">ExportHistory</a> from activity_maintenance1_4.o(i.ExportHistory) referenced from activity_maintenance1_4.o(i.gt_init_Maintenance1_4)
 <LI><a href="#[f]">FLASH_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[2b0]">GT_GetASCII</a> from gt_gui_driver.o(.text) referenced 2 times from gt_gui_driver.o(.rodata.gt_get_font_func)
 <LI><a href="#[2af]">GT_GetChinese</a> from gt_gui_driver.o(.text) referenced 3 times from gt_gui_driver.o(.rodata.gt_get_font_func)
 <LI><a href="#[2b1]">GT_GetLatin</a> from gt_gui_driver.o(.text) referenced from gt_gui_driver.o(.rodata.gt_get_font_func)
 <LI><a href="#[3]">HardFault_Handler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[2b]">I2C1_ERR_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[2a]">I2C1_EVT_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[2d]">I2C2_ERR_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[2c]">I2C2_EVT_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[49]">I2C3_ERR_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[48]">I2C3_EVT_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[b2]">Input</a> from activity_accuracycalibrate3.o(i.Input) referenced from activity_accuracycalibrate3.o(i.gt_init_AccuracyCalibrate3)
 <LI><a href="#[17f]">Input</a> from activity_keyboard_soft.o(i.Input) referenced 5 times from activity_keyboard_soft.o(i.gt_init_Screen_KeyBoard_Soft)
 <LI><a href="#[17b]">InputValue</a> from activity_keyboard_int.o(i.InputValue) referenced 2 times from activity_keyboard_int.o(i.gt_init_Screen_KeyBoard_Int)
 <LI><a href="#[210]">InputValue</a> from activity_keyboard_password.o(i.InputValue) referenced 2 times from activity_keyboard_password.o(i.gt_init_screen_keyBoard_PassWord)
 <LI><a href="#[215]">InputValue</a> from activity_keyboard_float.o(i.InputValue) referenced 2 times from activity_keyboard_float.o(i.gt_init_screen_keyBoard_float)
 <LI><a href="#[e3]">KEY_EVENT</a> from activity_generalbolus.o(i.KEY_EVENT) referenced from activity_generalbolus.o(i.gt_init_GeneralBolus)
 <LI><a href="#[12e]">KEY_EVENT</a> from activity_modeselect.o(i.KEY_EVENT) referenced from activity_modeselect.o(i.gt_init_ModeSelect)
 <LI><a href="#[18e]">KEY_EVENT</a> from activity_seqbolus.o(i.KEY_EVENT) referenced from activity_seqbolus.o(i.gt_init_SeqBolus)
 <LI><a href="#[18b]">LED_detection</a> from activity_sensormonitor.o(i.LED_detection) referenced from activity_sensormonitor.o(i.gt_init_SensorMonitor)
 <LI><a href="#[4]">MemManage_Handler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[cf]">MotorRun</a> from activity_dripmoderun.o(i.MotorRun) referenced from activity_dripmoderun.o(i.gt_init_DripModeRun)
 <LI><a href="#[ea]">MotorRun</a> from activity_generalbolusrun.o(i.MotorRun) referenced from activity_generalbolusrun.o(i.gt_init_GeneralBolusRun)
 <LI><a href="#[f3]">MotorRun</a> from activity_kvorun.o(i.MotorRun) referenced from activity_kvorun.o(i.gt_init_KVORun)
 <LI><a href="#[173]">MotorRun</a> from activity_purgerun.o(i.MotorRun) referenced from activity_purgerun.o(i.gt_init_PurgeRun)
 <LI><a href="#[194]">MotorRun</a> from activity_seqbolusrun.o(i.MotorRun) referenced from activity_seqbolusrun.o(i.gt_init_SeqBolusRun)
 <LI><a href="#[1a1]">MotorRun</a> from activity_seqmoderun.o(i.MotorRun) referenced from activity_seqmoderun.o(i.gt_init_SeqModeRun)
 <LI><a href="#[1a9]">MotorRun</a> from activity_speedandtimemoderun.o(i.MotorRun) referenced from activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
 <LI><a href="#[207]">MotorRun</a> from activity_weightmoderun.o(i.MotorRun) referenced from activity_weightmoderun.o(i.gt_init_WeightModeRun)
 <LI><a href="#[2]">NMI_Handler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[14e]">NearFinishTime</a> from activity_paramsetting3.o(i.NearFinishTime) referenced from activity_paramsetting3.o(i.gt_init_ParamSetting3)
 <LI><a href="#[151]">NearFinishTime_state</a> from activity_paramsetting3.o(i.NearFinishTime_state) referenced from activity_paramsetting3.o(i.gt_init_ParamSetting3)
 <LI><a href="#[1fb]">Next</a> from activity_weightmode.o(i.Next) referenced from activity_weightmode.o(i.gt_init_WeightMode)
 <LI><a href="#[1d2]">NextPage</a> from activity_systemsetting1.o(i.NextPage) referenced from activity_systemsetting1.o(i.gt_init_SystemSetting1)
 <LI><a href="#[14d]">NoOperateTime</a> from activity_paramsetting3.o(i.NoOperateTime) referenced from activity_paramsetting3.o(i.gt_init_ParamSetting3)
 <LI><a href="#[150]">NoOperateTime_state</a> from activity_paramsetting3.o(i.NoOperateTime_state) referenced from activity_paramsetting3.o(i.gt_init_ParamSetting3)
 <LI><a href="#[88]">OneMin</a> from headbar_view.o(i.OneMin) referenced from headbar_view.o(i.create_headevent)
 <LI><a href="#[87]">OneSecond</a> from headbar_view.o(i.OneSecond) referenced from headbar_view.o(i.create_headevent)
 <LI><a href="#[165]">P120</a> from activity_pressurecalibrate2.o(i.P120) referenced 2 times from activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
 <LI><a href="#[161]">P40</a> from activity_pressurecalibrate2.o(i.P40) referenced 2 times from activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
 <LI><a href="#[163]">P70</a> from activity_pressurecalibrate2.o(i.P70) referenced 2 times from activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
 <LI><a href="#[c]">PVM_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[61]">Page_Down</a> from activity_seqmode.o(i.Page_Down) referenced from activity_seqmode.o(i.CreatePage1)
 <LI><a href="#[62]">Page_Up</a> from activity_seqmode.o(i.Page_Up) referenced from activity_seqmode.o(i.CreatePage2)
 <LI><a href="#[15e]">Pause</a> from activity_pressurecalibrate2.o(i.Pause) referenced from activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
 <LI><a href="#[188]">Pause</a> from activity_sensormonitor.o(i.Pause) referenced from activity_sensormonitor.o(i.gt_init_SensorMonitor)
 <LI><a href="#[20b]">Pause</a> from activity_weightmoderun.o(i.Pause) referenced from activity_weightmoderun.o(i.gt_init_WeightModeRun)
 <LI><a href="#[9]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[104]">PressureCalibrate</a> from activity_maintenance1_1.o(i.PressureCalibrate) referenced from activity_maintenance1_1.o(i.gt_init_Maintenance1_1)
 <LI><a href="#[123]">PressureCalibrate</a> from activity_maintenance2_1.o(i.PressureCalibrate) referenced from activity_maintenance2_1.o(i.gt_init_Maintenance2_1)
 <LI><a href="#[5e]">PressureLevelChange</a> from activity_pressurenumsel.o(i.PressureLevelChange) referenced from activity_pressurenumsel.o(i.CreatePage1)
 <LI><a href="#[13e]">PressureUnitChange</a> from activity_paramsetting1.o(i.PressureUnitChange) referenced from activity_paramsetting1.o(i.gt_init_ParamSetting1)
 <LI><a href="#[1f9]">Purge1</a> from activity_weightmode.o(i.Purge1) referenced from activity_weightmode.o(i.gt_init_WeightMode)
 <LI><a href="#[34]">RTCAlarm_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[e]">RTC_IRQHandler</a> from rtc.o(i.RTC_IRQHandler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[18a]">RTLrun</a> from activity_sensormonitor.o(i.RTLrun) referenced from activity_sensormonitor.o(i.gt_init_SensorMonitor)
 <LI><a href="#[1]">Reset_Handler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[a7]">Run</a> from activity_accuracycalibrate1.o(i.Run) referenced from activity_accuracycalibrate1.o(i.gt_init_AccuracyCalibrate1)
 <LI><a href="#[15d]">Run</a> from activity_pressurecalibrate2.o(i.Run) referenced from activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
 <LI><a href="#[19c]">Run</a> from activity_seqmode.o(i.Run) referenced from activity_seqmode.o(i.gt_init_SeqMode)
 <LI><a href="#[1ef]">Run</a> from activity_timemode.o(i.Run) referenced from activity_timemode.o(i.gt_init_TimeMode)
 <LI><a href="#[1f8]">Run</a> from activity_weightmode.o(i.Run) referenced from activity_weightmode.o(i.gt_init_WeightMode)
 <LI><a href="#[3c]">SDIO1_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[47]">SDIO2_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[2e]">SPI1_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[2f]">SPI2_I2S2EXT_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[3e]">SPI3_I2S3EXT_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[4a]">SPI4_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[1cb]">Select_Chinese</a> from activity_systemlanguagesetting.o(i.Select_Chinese) referenced from activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting)
 <LI><a href="#[1cd]">Select_Chinese2</a> from activity_systemlanguagesetting.o(i.Select_Chinese2) referenced from activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting)
 <LI><a href="#[1cc]">Select_English</a> from activity_systemlanguagesetting.o(i.Select_English) referenced from activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting)
 <LI><a href="#[1ce]">Select_Portuguese</a> from activity_systemlanguagesetting.o(i.Select_Portuguese) referenced from activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting)
 <LI><a href="#[1ca]">Select_Spanish</a> from activity_systemlanguagesetting.o(i.Select_Spanish) referenced from activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting)
 <LI><a href="#[16a]">Select_bar</a> from activity_pressureunit.o(i.Select_bar) referenced from activity_pressureunit.o(i.gt_init_PressureUnit)
 <LI><a href="#[16c]">Select_kpa</a> from activity_pressureunit.o(i.Select_kpa) referenced from activity_pressureunit.o(i.gt_init_PressureUnit)
 <LI><a href="#[16d]">Select_mmhg</a> from activity_pressureunit.o(i.Select_mmhg) referenced from activity_pressureunit.o(i.gt_init_PressureUnit)
 <LI><a href="#[16b]">Select_psi</a> from activity_pressureunit.o(i.Select_psi) referenced from activity_pressureunit.o(i.gt_init_PressureUnit)
 <LI><a href="#[129]">SensorAD</a> from activity_maintenance2_2.o(i.SensorAD) referenced from activity_maintenance2_2.o(i.gt_init_Maintenance2_2)
 <LI><a href="#[5f]">SpeedChange</a> from activity_seqmode.o(i.SpeedChange) referenced 2 times from activity_seqmode.o(i.CreatePage1)
 <LI><a href="#[5f]">SpeedChange</a> from activity_seqmode.o(i.SpeedChange) referenced from activity_seqmode.o(i.CreatePage2)
 <LI><a href="#[1b4]">SpeedChange</a> from activity_speedmode.o(i.SpeedChange) referenced 2 times from activity_speedmode.o(i.gt_init_SpeedMode)
 <LI><a href="#[21b]">StandbyBegin</a> from activity_shutdown.o(i.StandbyBegin) referenced from activity_shutdown.o(i.gt_init_shutdown)
 <LI><a href="#[138]">Start_Time</a> from activity_nightsetting.o(i.Start_Time) referenced from activity_nightsetting.o(i.gt_init_NightSetting)
 <LI><a href="#[174]">Stop</a> from activity_purgerun.o(i.Stop) referenced from activity_purgerun.o(i.gt_init_PurgeRun)
 <LI><a href="#[a]">SysTick_Handler</a> from port.o(i.SysTick_Handler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[124]">SystemCheck</a> from activity_maintenance2_1.o(i.SystemCheck) referenced from activity_maintenance2_1.o(i.gt_init_Maintenance2_1)
 <LI><a href="#[59]">SystemInit</a> from system_at32f403a_407.o(i.SystemInit) referenced from startup_at32f403a_407.o(.text)
 <LI><a href="#[d]">TAMPER_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[23]">TMR1_BRK_TMR9_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[26]">TMR1_CH_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[24]">TMR1_OVF_TMR10_IRQHandler</a> from ultrasonic.o(i.TMR1_OVF_TMR10_IRQHandler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[25]">TMR1_TRG_HALL_TMR11_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[27]">TMR2_GLOBAL_IRQHandler</a> from ultrasonic.o(i.TMR2_GLOBAL_IRQHandler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[28]">TMR3_GLOBAL_IRQHandler</a> from motor_manage.o(i.TMR3_GLOBAL_IRQHandler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[29]">TMR4_GLOBAL_IRQHandler</a> from battery_manage.o(i.TMR4_GLOBAL_IRQHandler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[3d]">TMR5_GLOBAL_IRQHandler</a> from ui.o(i.TMR5_GLOBAL_IRQHandler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[41]">TMR6_GLOBAL_IRQHandler</a> from ultrasonic.o(i.TMR6_GLOBAL_IRQHandler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[42]">TMR7_GLOBAL_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[36]">TMR8_BRK_TMR12_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[39]">TMR8_CH_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[37]">TMR8_OVF_TMR13_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[38]">TMR8_TRG_HALL_TMR14_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[1c4]">TimeFormatSetting</a> from activity_systemdatatimesetting.o(i.TimeFormatSetting) referenced from activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting)
 <LI><a href="#[1c3]">TimeSetting</a> from activity_systemdatatimesetting.o(i.TimeSetting) referenced from activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting)
 <LI><a href="#[cd]">Timer_300mSecond</a> from activity_dripmode.o(i.Timer_300mSecond) referenced from activity_dripmode.o(i.gt_init_DripMode)
 <LI><a href="#[d6]">Timer_300mSecond</a> from activity_dripmoderun.o(i.Timer_300mSecond) referenced from activity_dripmoderun.o(i.gt_init_DripModeRun)
 <LI><a href="#[ef]">Timer_300mSecond</a> from activity_generalbolusrun.o(i.Timer_300mSecond) referenced from activity_generalbolusrun.o(i.gt_init_GeneralBolusRun)
 <LI><a href="#[f6]">Timer_300mSecond</a> from activity_kvorun.o(i.Timer_300mSecond) referenced from activity_kvorun.o(i.gt_init_KVORun)
 <LI><a href="#[199]">Timer_300mSecond</a> from activity_seqbolusrun.o(i.Timer_300mSecond) referenced from activity_seqbolusrun.o(i.gt_init_SeqBolusRun)
 <LI><a href="#[1a0]">Timer_300mSecond</a> from activity_seqmode.o(i.Timer_300mSecond) referenced from activity_seqmode.o(i.gt_init_SeqMode)
 <LI><a href="#[1a7]">Timer_300mSecond</a> from activity_seqmoderun.o(i.Timer_300mSecond) referenced from activity_seqmoderun.o(i.gt_init_SeqModeRun)
 <LI><a href="#[1b0]">Timer_300mSecond</a> from activity_speedandtimemoderun.o(i.Timer_300mSecond) referenced from activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
 <LI><a href="#[1b8]">Timer_300mSecond</a> from activity_speedmode.o(i.Timer_300mSecond) referenced from activity_speedmode.o(i.gt_init_SpeedMode)
 <LI><a href="#[1f1]">Timer_300mSecond</a> from activity_timemode.o(i.Timer_300mSecond) referenced from activity_timemode.o(i.gt_init_TimeMode)
 <LI><a href="#[1fc]">Timer_300mSecond</a> from activity_weightmode.o(i.Timer_300mSecond) referenced from activity_weightmode.o(i.gt_init_WeightMode)
 <LI><a href="#[205]">Timer_300mSecond</a> from activity_weightmode2.o(i.Timer_300mSecond) referenced from activity_weightmode2.o(i.gt_init_WeightMode2)
 <LI><a href="#[20e]">Timer_300mSecond</a> from activity_weightmoderun.o(i.Timer_300mSecond) referenced from activity_weightmoderun.o(i.gt_init_WeightModeRun)
 <LI><a href="#[d0]">Timer_OneSecond</a> from activity_dripmoderun.o(i.Timer_OneSecond) referenced from activity_dripmoderun.o(i.gt_init_DripModeRun)
 <LI><a href="#[e5]">Timer_OneSecond</a> from activity_generalbolus.o(i.Timer_OneSecond) referenced from activity_generalbolus.o(i.gt_init_GeneralBolus)
 <LI><a href="#[eb]">Timer_OneSecond</a> from activity_generalbolusrun.o(i.Timer_OneSecond) referenced from activity_generalbolusrun.o(i.gt_init_GeneralBolusRun)
 <LI><a href="#[f4]">Timer_OneSecond</a> from activity_kvorun.o(i.Timer_OneSecond) referenced from activity_kvorun.o(i.gt_init_KVORun)
 <LI><a href="#[fe]">Timer_OneSecond</a> from activity_aaamainscreen.o(i.Timer_OneSecond) referenced from activity_aaamainscreen.o(i.gt_init_MainScreen)
 <LI><a href="#[172]">Timer_OneSecond</a> from activity_purgerun.o(i.Timer_OneSecond) referenced from activity_purgerun.o(i.gt_init_PurgeRun)
 <LI><a href="#[195]">Timer_OneSecond</a> from activity_seqbolusrun.o(i.Timer_OneSecond) referenced from activity_seqbolusrun.o(i.gt_init_SeqBolusRun)
 <LI><a href="#[1a2]">Timer_OneSecond</a> from activity_seqmoderun.o(i.Timer_OneSecond) referenced from activity_seqmoderun.o(i.gt_init_SeqModeRun)
 <LI><a href="#[1aa]">Timer_OneSecond</a> from activity_speedandtimemoderun.o(i.Timer_OneSecond) referenced from activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
 <LI><a href="#[208]">Timer_OneSecond</a> from activity_weightmoderun.o(i.Timer_OneSecond) referenced from activity_weightmoderun.o(i.gt_init_WeightModeRun)
 <LI><a href="#[ff]">Timer_ThirmSec</a> from activity_aaamainscreen.o(i.Timer_ThirmSec) referenced from activity_aaamainscreen.o(i.gt_init_MainScreen)
 <LI><a href="#[157]">Timer_ThirmSec</a> from activity_poweroff.o(i.Timer_ThirmSec) referenced from activity_poweroff.o(i.gt_init_PowerOff)
 <LI><a href="#[166]">Timer_ThirmSec</a> from activity_pressurecalibrate2.o(i.Timer_ThirmSec) referenced from activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
 <LI><a href="#[18d]">Timer_ThirmSec</a> from activity_sensormonitor.o(i.Timer_ThirmSec) referenced from activity_sensormonitor.o(i.gt_init_SensorMonitor)
 <LI><a href="#[3f]">UART4_IRQHandler</a> from at32f403a_407_board.o(i.UART4_IRQHandler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[40]">UART5_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[54]">UART7_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[55]">UART8_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[30]">USART1_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[31]">USART2_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[32]">USART3_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[53]">USART6_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[35]">USBFSWakeUp_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[1e]">USBFS_H_CAN1_TX_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[1f]">USBFS_L_CAN1_RX0_IRQHandler</a> from bsp_usb.o(i.USBFS_L_CAN1_RX0_IRQHandler) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[50]">USBFS_MAPH_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[51]">USBFS_MAPL_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[ba]">Up</a> from activity_brandchoice2.o(i.Up) referenced from activity_brandchoice2.o(i.gt_init_BrandChoice2)
 <LI><a href="#[c1]">Up</a> from activity_deletebrand.o(i.Up) referenced from activity_deletebrand.o(i.gt_init_DeleteBrand)
 <LI><a href="#[d8]">Up</a> from activity_drugchoice.o(i.Up) referenced from activity_drugchoice.o(i.gt_init_DrugChoice)
 <LI><a href="#[dc]">Up</a> from activity_drugdelete.o(i.Up) referenced from activity_drugdelete.o(i.gt_init_DrugDelete)
 <LI><a href="#[f2]">Up</a> from activity_historyview.o(i.Up) referenced from activity_historyview.o(i.gt_init_HistoryView)
 <LI><a href="#[13f]">UpPage</a> from activity_paramsetting1.o(i.UpPage) referenced from activity_paramsetting1.o(i.gt_init_ParamSetting1)
 <LI><a href="#[146]">UpPage</a> from activity_paramsetting2.o(i.UpPage) referenced from activity_paramsetting2.o(i.gt_init_ParamSetting2)
 <LI><a href="#[14a]">UpPage</a> from activity_paramsetting3.o(i.UpPage) referenced from activity_paramsetting3.o(i.gt_init_ParamSetting3)
 <LI><a href="#[154]">UpPage</a> from activity_paramsetting4.o(i.UpPage) referenced from activity_paramsetting4.o(i.gt_init_ParamSetting4)
 <LI><a href="#[1d1]">UpPage</a> from activity_systemsetting1.o(i.UpPage) referenced from activity_systemsetting1.o(i.gt_init_SystemSetting1)
 <LI><a href="#[1d9]">UpPage</a> from activity_systemsetting2.o(i.UpPage) referenced from activity_systemsetting2.o(i.gt_init_SystemSetting2)
 <LI><a href="#[203]">UpPage</a> from activity_weightmode2.o(i.UpPage) referenced from activity_weightmode2.o(i.gt_init_WeightMode2)
 <LI><a href="#[6]">UsageFault_Handler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[1db]">ViewHistory</a> from activity_systemsetting2.o(i.ViewHistory) referenced from activity_systemsetting2.o(i.gt_init_SystemSetting2)
 <LI><a href="#[1dc]">ViewVersion</a> from activity_systemsetting2.o(i.ViewVersion) referenced 2 times from activity_systemsetting2.o(i.gt_init_SystemSetting2)
 <LI><a href="#[b]">WWDT_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[3b]">XMC_IRQHandler</a> from startup_at32f403a_407.o(.text) referenced from startup_at32f403a_407.o(RESET)
 <LI><a href="#[5a]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_at32f403a_407.o(.text)
 <LI><a href="#[24b]">_btn_deinit_cb</a> from gt_btn.o(i._btn_deinit_cb) referenced from gt_btn.o(.constdata)
 <LI><a href="#[24c]">_btn_event_cb</a> from gt_btn.o(i._btn_event_cb) referenced from gt_btn.o(.constdata)
 <LI><a href="#[24a]">_btn_init_cb</a> from gt_btn.o(i._btn_init_cb) referenced from gt_btn.o(.constdata)
 <LI><a href="#[22f]">_close_cb</a> from gt_hal_src.o(i._close_cb) referenced from gt_hal_src.o(i.gt_src_init)
 <LI><a href="#[23b]">_close_cb</a> from gt_hal_vf.o(i._close_cb) referenced from gt_hal_vf.o(i.gt_vf_init)
 <LI><a href="#[75]">_close_release_cb</a> from gt_dialog.o(i._close_release_cb) referenced from gt_dialog.o(i._create_cancel_btn)
 <LI><a href="#[75]">_close_release_cb</a> from gt_dialog.o(i._close_release_cb) referenced from gt_dialog.o(i._create_close_btn)
 <LI><a href="#[75]">_close_release_cb</a> from gt_dialog.o(i._close_release_cb) referenced from gt_dialog.o(i.gt_dialog_create_issue)
 <LI><a href="#[9b]">_contents_equal_cb</a> from gt_btn.o(i._contents_equal_cb) referenced from gt_btn.o(i.gt_btn_create)
 <LI><a href="#[9c]">_contents_free_cb</a> from gt_btn.o(i._contents_free_cb) referenced from gt_btn.o(i.gt_btn_create)
 <LI><a href="#[80]">_default_equal_cb</a> from gt_vector.o(i._default_equal_cb) referenced from gt_vector.o(i._gt_vector_create)
 <LI><a href="#[24e]">_deinit_cb</a> from gt_checkbox.o(i._deinit_cb) referenced 9 times from gt_checkbox.o(.constdata)
 <LI><a href="#[bf]">_dialog2_init</a> from activity_deletebrand.o(i._dialog2_init) referenced 2 times from activity_deletebrand.o(i.gt_init_DeleteBrand)
 <LI><a href="#[de]">_dialog3_init</a> from activity_drugdelete.o(i._dialog3_init) referenced 2 times from activity_drugdelete.o(i.gt_init_DrugDelete)
 <LI><a href="#[72]">_dialog_anim_exec_cb</a> from gt_dialog.o(i._dialog_anim_exec_cb) referenced from gt_dialog.o(i._create_anim_handler)
 <LI><a href="#[74]">_dialog_close_anim_ready_cb</a> from gt_dialog.o(i._dialog_close_anim_ready_cb) referenced from gt_dialog.o(i._create_anim_handler)
 <LI><a href="#[73]">_dialog_show_anim_start_cb</a> from gt_dialog.o(i._dialog_show_anim_start_cb) referenced from gt_dialog.o(i._create_anim_handler)
 <LI><a href="#[229]">_equal_current_id_cb</a> from gt_scr_stack.o(i._equal_current_id_cb) referenced from gt_scr_stack.o(i.gt_scr_stack_has_before)
 <LI><a href="#[24f]">_event_cb</a> from gt_checkbox.o(i._event_cb) referenced 12 times from gt_checkbox.o(.constdata)
 <LI><a href="#[224]">_flush_cb</a> from main.o(i._flush_cb) referenced from gt_port_disp.o(i.gt_port_disp_init)
 <LI><a href="#[228]">_free_alive_scr_object_cb</a> from gt_scr_stack.o(i._free_alive_scr_object_cb) referenced from gt_scr_stack.o(i.gt_scr_stack_clear)
 <LI><a href="#[99]">_gt_anim_path_bounce</a> from gt_anim.o(i._gt_anim_path_bounce) referenced from gt_anim.o(i.gt_anim_set_path_type)
 <LI><a href="#[95]">_gt_anim_path_ease_in</a> from gt_anim.o(i._gt_anim_path_ease_in) referenced from gt_anim.o(i.gt_anim_set_path_type)
 <LI><a href="#[97]">_gt_anim_path_ease_in_out</a> from gt_anim.o(i._gt_anim_path_ease_in_out) referenced from gt_anim.o(i.gt_anim_set_path_type)
 <LI><a href="#[96]">_gt_anim_path_ease_out</a> from gt_anim.o(i._gt_anim_path_ease_out) referenced from gt_anim.o(i.gt_anim_set_path_type)
 <LI><a href="#[94]">_gt_anim_path_linear</a> from gt_anim.o(i._gt_anim_path_linear) referenced from gt_anim.o(i.gt_anim_init)
 <LI><a href="#[94]">_gt_anim_path_linear</a> from gt_anim.o(i._gt_anim_path_linear) referenced from gt_anim.o(i.gt_anim_set_path_type)
 <LI><a href="#[98]">_gt_anim_path_overshoot</a> from gt_anim.o(i._gt_anim_path_overshoot) referenced from gt_anim.o(i.gt_anim_set_path_type)
 <LI><a href="#[9a]">_gt_anim_path_step</a> from gt_anim.o(i._gt_anim_path_step) referenced from gt_anim.o(i.gt_anim_set_path_type)
 <LI><a href="#[7a]">_gt_anim_task_handler</a> from gt_anim.o(i._gt_anim_task_handler) referenced from gt_anim.o(i._gt_anim_core_init)
 <LI><a href="#[9d]">_gt_clock_timer_cb</a> from gt_clock.o(i._gt_clock_timer_cb) referenced from gt_clock.o(i.gt_clock_start)
 <LI><a href="#[9e]">_gt_disp_task_handler</a> from gt_hal_disp.o(i._gt_disp_task_handler) referenced from gt_hal_disp.o(i.gt_disp_drv_register)
 <LI><a href="#[7e]">_gt_img_decoder_built_in_close</a> from gt_img_decoder.o(i._gt_img_decoder_built_in_close) referenced from gt_img_decoder.o(i._gt_img_decoder_init)
 <LI><a href="#[7b]">_gt_img_decoder_built_in_info</a> from gt_img_decoder.o(i._gt_img_decoder_built_in_info) referenced from gt_img_decoder.o(i._gt_img_decoder_init)
 <LI><a href="#[7c]">_gt_img_decoder_built_in_open</a> from gt_img_decoder.o(i._gt_img_decoder_built_in_open) referenced from gt_img_decoder.o(i._gt_img_decoder_init)
 <LI><a href="#[7d]">_gt_img_decoder_built_in_read_line</a> from gt_img_decoder.o(i._gt_img_decoder_built_in_read_line) referenced from gt_img_decoder.o(i._gt_img_decoder_init)
 <LI><a href="#[21c]">_gt_obj_destroy_handler_cb</a> from gt_obj.o(i._gt_obj_destroy_handler_cb) referenced from gt_obj.o(i.gt_obj_destroy)
 <LI><a href="#[223]">_gt_png_close</a> from gt_png.o(i._gt_png_close) referenced from gt_png.o(i.gt_png_init)
 <LI><a href="#[220]">_gt_png_info</a> from gt_png.o(i._gt_png_info) referenced from gt_png.o(i.gt_png_init)
 <LI><a href="#[221]">_gt_png_open</a> from gt_png.o(i._gt_png_open) referenced from gt_png.o(i.gt_png_init)
 <LI><a href="#[222]">_gt_png_read_line</a> from gt_png.o(i._gt_png_read_line) referenced from gt_png.o(i.gt_png_init)
 <LI><a href="#[22d]">_gt_sjpg_close</a> from gt_sjpg.o(i._gt_sjpg_close) referenced from gt_sjpg.o(i.gt_sjpg_init)
 <LI><a href="#[22a]">_gt_sjpg_info</a> from gt_sjpg.o(i._gt_sjpg_info) referenced from gt_sjpg.o(i.gt_sjpg_init)
 <LI><a href="#[22b]">_gt_sjpg_open</a> from gt_sjpg.o(i._gt_sjpg_open) referenced from gt_sjpg.o(i.gt_sjpg_init)
 <LI><a href="#[22c]">_gt_sjpg_read_line</a> from gt_sjpg.o(i._gt_sjpg_read_line) referenced from gt_sjpg.o(i.gt_sjpg_init)
 <LI><a href="#[247]">_gt_vector_iterator_has_next</a> from gt_vector.o(i._gt_vector_iterator_has_next) referenced from gt_vector.o(.constdata)
 <LI><a href="#[249]">_gt_vector_iterator_index</a> from gt_vector.o(i._gt_vector_iterator_index) referenced from gt_vector.o(.constdata)
 <LI><a href="#[248]">_gt_vector_iterator_next</a> from gt_vector.o(i._gt_vector_iterator_next) referenced from gt_vector.o(.constdata)
 <LI><a href="#[81]">_indev_scroll_throw_exec_cb</a> from gt_indev.o(i._indev_scroll_throw_exec_cb) referenced from gt_indev.o(i._indev_scroll_throw_handler_anim_start)
 <LI><a href="#[82]">_indev_scroll_throw_ready_cb</a> from gt_indev.o(i._indev_scroll_throw_ready_cb) referenced from gt_indev.o(i._indev_scroll_throw_handler_anim_start)
 <LI><a href="#[24d]">_init_cb</a> from gt_checkbox.o(i._init_cb) referenced 12 times from gt_checkbox.o(.constdata)
 <LI><a href="#[261]">_obj_event_cb</a> from gt_obj.o(i._obj_event_cb) referenced from gt_obj.o(.constdata)
 <LI><a href="#[a0]">_old_scr_anim_ready_cb</a> from gt_disp.o(i._old_scr_anim_ready_cb) referenced from gt_disp.o(i.gt_disp_load_scr_anim)
 <LI><a href="#[22e]">_open_cb</a> from gt_hal_src.o(i._open_cb) referenced from gt_hal_src.o(i.gt_src_init)
 <LI><a href="#[23a]">_open_cb</a> from gt_hal_vf.o(i._open_cb) referenced from gt_hal_vf.o(i.gt_vf_init)
 <LI><a href="#[230]">_read_cb</a> from gt_hal_src.o(i._read_cb) referenced from gt_hal_src.o(i.gt_src_init)
 <LI><a href="#[23c]">_read_cb</a> from gt_hal_vf.o(i._read_cb) referenced from gt_hal_vf.o(i.gt_vf_init)
 <LI><a href="#[5c]">_sbackspace</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[9f]">_scr_anim_del_ready_cb</a> from gt_disp.o(i._scr_anim_del_ready_cb) referenced from gt_disp.o(i.gt_disp_load_scr_anim)
 <LI><a href="#[a3]">_scr_anim_exec_x_cb</a> from gt_disp.o(i._scr_anim_exec_x_cb) referenced from gt_disp.o(i.gt_disp_load_scr_anim)
 <LI><a href="#[a4]">_scr_anim_exec_y_cb</a> from gt_disp.o(i._scr_anim_exec_y_cb) referenced from gt_disp.o(i.gt_disp_load_scr_anim)
 <LI><a href="#[a2]">_scr_anim_ready_cb</a> from gt_disp.o(i._scr_anim_ready_cb) referenced from gt_disp.o(i.gt_disp_load_scr_anim)
 <LI><a href="#[a1]">_scr_anim_start_cb</a> from gt_disp.o(i._scr_anim_start_cb) referenced from gt_disp.o(i.gt_disp_load_scr_anim)
 <LI><a href="#[262]">_screen_event_cb</a> from gt_obj.o(i._screen_event_cb) referenced from gt_obj.o(.constdata)
 <LI><a href="#[21d]">_scroll_by_x</a> from gt_obj_scroll.o(i._scroll_by_x) referenced from gt_obj_scroll.o(i.gt_obj_scroll_to)
 <LI><a href="#[21e]">_scroll_by_y</a> from gt_obj_scroll.o(i._scroll_by_y) referenced from gt_obj_scroll.o(i.gt_obj_scroll_to)
 <LI><a href="#[21f]">_scroll_ready_cb</a> from gt_obj_scroll.o(i._scroll_ready_cb) referenced from gt_obj_scroll.o(i.gt_obj_scroll_to)
 <LI><a href="#[231]">_seek_cb</a> from gt_hal_src.o(i._seek_cb) referenced from gt_hal_src.o(i.gt_src_init)
 <LI><a href="#[23e]">_seek_cb</a> from gt_hal_vf.o(i._seek_cb) referenced from gt_hal_vf.o(i.gt_vf_init)
 <LI><a href="#[5b]">_sgetc</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[70]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0vsnprintf)
 <LI><a href="#[6f]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[232]">_tell_cb</a> from gt_hal_src.o(i._tell_cb) referenced from gt_hal_src.o(i.gt_src_init)
 <LI><a href="#[23f]">_tell_cb</a> from gt_hal_vf.o(i._tell_cb) referenced from gt_hal_vf.o(i.gt_vf_init)
 <LI><a href="#[242]">_touch_read_reg</a> from touch.o(i._touch_read_reg) referenced from touch.o(i.touch_init)
 <LI><a href="#[241]">_touch_write_reg</a> from touch.o(i._touch_write_reg) referenced from touch.o(i.touch_init)
 <LI><a href="#[23d]">_write_cb</a> from gt_hal_vf.o(i._write_cb) referenced from gt_hal_vf.o(i.gt_vf_init)
 <LI><a href="#[83]">_xpt2046_read_point</a> from bsp_xpt2046.o(i._xpt2046_read_point) referenced from bsp_xpt2046.o(i.bsp_xpt2046_init)
 <LI><a href="#[15f]">ad0</a> from activity_pressurecalibrate2.o(i.ad0) referenced 2 times from activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
 <LI><a href="#[187]">ad0_change</a> from activity_sensormonitor.o(i.ad0_change) referenced from activity_sensormonitor.o(i.gt_init_SensorMonitor)
 <LI><a href="#[160]">ad40</a> from activity_pressurecalibrate2.o(i.ad40) referenced 2 times from activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
 <LI><a href="#[162]">ad70</a> from activity_pressurecalibrate2.o(i.ad70) referenced 2 times from activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
 <LI><a href="#[8f]">at32_down_button_state</a> from vp_button.o(i.at32_down_button_state) referenced from main.o(i.fast_task_function)
 <LI><a href="#[91]">at32_power_button_state</a> from vp_button.o(i.at32_power_button_state) referenced from main.o(i.fast_task_function)
 <LI><a href="#[8b]">at32_up_button_state</a> from vp_button.o(i.at32_up_button_state) referenced from main.o(i.fast_task_function)
 <LI><a href="#[76]">back</a> from activity_deletebrand.o(i.back) referenced from activity_deletebrand.o(i._dialog2_init)
 <LI><a href="#[78]">back</a> from activity_drugdelete.o(i.back) referenced from activity_drugdelete.o(i._dialog3_init)
 <LI><a href="#[ab]">back</a> from activity_accuracycalibrate2_1.o(i.back) referenced from activity_accuracycalibrate2_1.o(i.gt_init_AccuracyCalibrate2_1)
 <LI><a href="#[bb]">back</a> from activity_brandchoice2.o(i.back) referenced from activity_brandchoice2.o(i.gt_init_BrandChoice2)
 <LI><a href="#[bc]">back</a> from activity_clearaccumvol.o(i.back) referenced from activity_clearaccumvol.o(i.gt_init_ClearAccumVol)
 <LI><a href="#[d3]">back</a> from activity_dripmoderun.o(i.back) referenced from activity_dripmoderun.o(i.gt_init_DripModeRun)
 <LI><a href="#[df]">back</a> from activity_drugunit.o(i.back) referenced from activity_drugunit.o(i.gt_init_DrugUnit)
 <LI><a href="#[f5]">back</a> from activity_kvorun.o(i.back) referenced from activity_kvorun.o(i.gt_init_KVORun)
 <LI><a href="#[101]">back</a> from activity_maintenance1_1.o(i.back) referenced from activity_maintenance1_1.o(i.gt_init_Maintenance1_1)
 <LI><a href="#[107]">back</a> from activity_maintenance1_2.o(i.back) referenced from activity_maintenance1_2.o(i.gt_init_Maintenance1_2)
 <LI><a href="#[121]">back</a> from activity_maintenance2_1.o(i.back) referenced from activity_maintenance2_1.o(i.gt_init_Maintenance2_1)
 <LI><a href="#[128]">back</a> from activity_maintenance2_2.o(i.back) referenced from activity_maintenance2_2.o(i.gt_init_Maintenance2_2)
 <LI><a href="#[135]">back</a> from activity_modeselect.o(i.back) referenced from activity_modeselect.o(i.gt_init_ModeSelect)
 <LI><a href="#[136]">back</a> from activity_nightsetting.o(i.back) referenced from activity_nightsetting.o(i.gt_init_NightSetting)
 <LI><a href="#[142]">back</a> from activity_paramsetting2.o(i.back) referenced from activity_paramsetting2.o(i.gt_init_ParamSetting2)
 <LI><a href="#[149]">back</a> from activity_paramsetting3.o(i.back) referenced from activity_paramsetting3.o(i.gt_init_ParamSetting3)
 <LI><a href="#[153]">back</a> from activity_paramsetting4.o(i.back) referenced from activity_paramsetting4.o(i.gt_init_ParamSetting4)
 <LI><a href="#[158]">back</a> from activity_pressurecalibrate1.o(i.back) referenced from activity_pressurecalibrate1.o(i.gt_init_PressureCalibrate1)
 <LI><a href="#[15b]">back</a> from activity_pressurecalibrate2.o(i.back) referenced from activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
 <LI><a href="#[167]">back</a> from activity_pressurenumsel.o(i.back) referenced from activity_pressurenumsel.o(i.gt_init_PressureNumSel)
 <LI><a href="#[16f]">back</a> from activity_purge.o(i.back) referenced from activity_purge.o(i.gt_init_Purge)
 <LI><a href="#[175]">back</a> from activity_purgesizesetting.o(i.back) referenced from activity_purgesizesetting.o(i.gt_init_PurgeSizeSetting)
 <LI><a href="#[186]">back</a> from activity_sensormonitor.o(i.back) referenced from activity_sensormonitor.o(i.gt_init_SensorMonitor)
 <LI><a href="#[1ad]">back</a> from activity_speedandtimemoderun.o(i.back) referenced from activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
 <LI><a href="#[1bc]">back</a> from activity_standby.o(i.back) referenced from activity_standby.o(i.gt_init_Standby)
 <LI><a href="#[1c2]">back</a> from activity_systemdatatimesetting.o(i.back) referenced from activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting)
 <LI><a href="#[1d0]">back</a> from activity_systemsetting1.o(i.back) referenced from activity_systemsetting1.o(i.gt_init_SystemSetting1)
 <LI><a href="#[1d8]">back</a> from activity_systemsetting2.o(i.back) referenced from activity_systemsetting2.o(i.gt_init_SystemSetting2)
 <LI><a href="#[1df]">back</a> from activity_keyboard_time.o(i.back) referenced from activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
 <LI><a href="#[219]">back</a> from activity_shutdown.o(i.back) referenced from activity_shutdown.o(i.gt_init_shutdown)
 <LI><a href="#[1d7]">bedchange</a> from activity_systemsetting1.o(i.bedchange) referenced from activity_systemsetting1.o(i.gt_init_SystemSetting1)
 <LI><a href="#[d1]">bolus</a> from activity_dripmoderun.o(i.bolus) referenced from activity_dripmoderun.o(i.gt_init_DripModeRun)
 <LI><a href="#[1a3]">bolus</a> from activity_seqmoderun.o(i.bolus) referenced from activity_seqmoderun.o(i.gt_init_SeqModeRun)
 <LI><a href="#[1ab]">bolus</a> from activity_speedandtimemoderun.o(i.bolus) referenced from activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
 <LI><a href="#[209]">bolus</a> from activity_weightmoderun.o(i.bolus) referenced from activity_weightmoderun.o(i.gt_init_WeightModeRun)
 <LI><a href="#[bd]">btn1_0_cb</a> from activity_clearaccumvol.o(i.btn1_0_cb) referenced from activity_clearaccumvol.o(i.gt_init_ClearAccumVol)
 <LI><a href="#[c2]">btn1_0_cb</a> from activity_deletehistory.o(i.btn1_0_cb) referenced from activity_deletehistory.o(i.gt_init_DeleteHistory)
 <LI><a href="#[c5]">btn1_0_cb</a> from activity_doseunit.o(i.btn1_0_cb) referenced from activity_doseunit.o(i.gt_init_DoseUnit)
 <LI><a href="#[cb]">btn1_0_cb</a> from activity_dripmode.o(i.btn1_0_cb) referenced from activity_dripmode.o(i.gt_init_DripMode)
 <LI><a href="#[e2]">btn1_0_cb</a> from activity_exporthistory.o(i.btn1_0_cb) referenced from activity_exporthistory.o(i.gt_init_ExportHistory)
 <LI><a href="#[e9]">btn1_0_cb</a> from activity_generalbolus.o(i.btn1_0_cb) referenced from activity_generalbolus.o(i.gt_init_GeneralBolus)
 <LI><a href="#[ed]">btn1_0_cb</a> from activity_generalbolusrun.o(i.btn1_0_cb) referenced from activity_generalbolusrun.o(i.gt_init_GeneralBolusRun)
 <LI><a href="#[169]">btn1_0_cb</a> from activity_pressureunit.o(i.btn1_0_cb) referenced from activity_pressureunit.o(i.gt_init_PressureUnit)
 <LI><a href="#[197]">btn1_0_cb</a> from activity_seqbolusrun.o(i.btn1_0_cb) referenced from activity_seqbolusrun.o(i.gt_init_SeqBolusRun)
 <LI><a href="#[1b6]">btn1_0_cb</a> from activity_speedmode.o(i.btn1_0_cb) referenced from activity_speedmode.o(i.gt_init_SpeedMode)
 <LI><a href="#[1bd]">btn1_0_cb</a> from activity_systemcheck.o(i.btn1_0_cb) referenced from activity_systemcheck.o(i.gt_init_SystemCheck)
 <LI><a href="#[1c9]">btn1_0_cb</a> from activity_systemlanguagesetting.o(i.btn1_0_cb) referenced from activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting)
 <LI><a href="#[1d3]">btn1_0_cb</a> from activity_systemsetting1.o(i.btn1_0_cb) referenced from activity_systemsetting1.o(i.gt_init_SystemSetting1)
 <LI><a href="#[201]">btn1_0_cb</a> from activity_weightmode2.o(i.btn1_0_cb) referenced from activity_weightmode2.o(i.gt_init_WeightMode2)
 <LI><a href="#[1be]">btn1_1_cb</a> from activity_systemcheck.o(i.btn1_1_cb) referenced from activity_systemcheck.o(i.gt_init_SystemCheck)
 <LI><a href="#[1bf]">btn1_2_cb</a> from activity_systemcheck.o(i.btn1_2_cb) referenced from activity_systemcheck.o(i.gt_init_SystemCheck)
 <LI><a href="#[c3]">btn2_0_cb</a> from activity_deletehistory.o(i.btn2_0_cb) referenced from activity_deletehistory.o(i.gt_init_DeleteHistory)
 <LI><a href="#[cc]">btn2_0_cb</a> from activity_dripmode.o(i.btn2_0_cb) referenced from activity_dripmode.o(i.gt_init_DripMode)
 <LI><a href="#[ee]">btn2_0_cb</a> from activity_generalbolusrun.o(i.btn2_0_cb) referenced from activity_generalbolusrun.o(i.gt_init_GeneralBolusRun)
 <LI><a href="#[198]">btn2_0_cb</a> from activity_seqbolusrun.o(i.btn2_0_cb) referenced from activity_seqbolusrun.o(i.gt_init_SeqBolusRun)
 <LI><a href="#[1a4]">btn2_0_cb</a> from activity_seqmoderun.o(i.btn2_0_cb) referenced from activity_seqmoderun.o(i.gt_init_SeqModeRun)
 <LI><a href="#[1c0]">btn2_0_cb</a> from activity_systemcheck.o(i.btn2_0_cb) referenced from activity_systemcheck.o(i.gt_init_SystemCheck)
 <LI><a href="#[1d4]">btn2_0_cb</a> from activity_systemsetting1.o(i.btn2_0_cb) referenced from activity_systemsetting1.o(i.gt_init_SystemSetting1)
 <LI><a href="#[202]">btn2_0_cb</a> from activity_weightmode2.o(i.btn2_0_cb) referenced from activity_weightmode2.o(i.gt_init_WeightMode2)
 <LI><a href="#[1d5]">btn3_0_cb</a> from activity_systemsetting1.o(i.btn3_0_cb) referenced from activity_systemsetting1.o(i.gt_init_SystemSetting1)
 <LI><a href="#[1fa]">btn3_0_cb</a> from activity_weightmode.o(i.btn3_0_cb) referenced from activity_weightmode.o(i.gt_init_WeightMode)
 <LI><a href="#[1d6]">btn4_0_cb</a> from activity_systemsetting1.o(i.btn4_0_cb) referenced from activity_systemsetting1.o(i.gt_init_SystemSetting1)
 <LI><a href="#[89]">btn_callback</a> from dialog1.o(i.btn_callback) referenced from dialog1.o(i.dialog1_create)
 <LI><a href="#[8a]">btn_callback</a> from activity_logo.o(i.btn_callback) referenced from activity_logo.o(i.exitlogo)
 <LI><a href="#[a9]">clock1_0_cb</a> from activity_accuracycalibrate2.o(i.clock1_0_cb) referenced from activity_accuracycalibrate2.o(i.gt_init_AccuracyCalibrate2)
 <LI><a href="#[106]">down</a> from activity_maintenance1_1.o(i.down) referenced from activity_maintenance1_1.o(i.gt_init_Maintenance1_1)
 <LI><a href="#[126]">down</a> from activity_maintenance2_1.o(i.down) referenced from activity_maintenance2_1.o(i.gt_init_Maintenance2_1)
 <LI><a href="#[12b]">down</a> from activity_maintenance2_2.o(i.down) referenced from activity_maintenance2_2.o(i.gt_init_Maintenance2_2)
 <LI><a href="#[f7]">exitlogo</a> from activity_logo.o(i.exitlogo) referenced from activity_logo.o(i.gt_init_Logo)
 <LI><a href="#[246]">fast_task_function</a> from main.o(i.fast_task_function) referenced from main.o(i.weak_up)
 <LI><a href="#[6e]">fputc</a> from at32f403a_407_board.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[a5]">gt_indev_handler</a> from gt_indev.o(i.gt_indev_handler) referenced from gt_hal_indev.o(i.gt_indev_drv_register)
 <LI><a href="#[28a]">gt_init_AccuracyCalibrate1</a> from activity_accuracycalibrate1.o(i.gt_init_AccuracyCalibrate1) referenced from activity_logo.o(.constdata)
 <LI><a href="#[28b]">gt_init_AccuracyCalibrate2</a> from activity_accuracycalibrate2.o(i.gt_init_AccuracyCalibrate2) referenced from activity_logo.o(.constdata)
 <LI><a href="#[295]">gt_init_AccuracyCalibrate2_1</a> from activity_accuracycalibrate2_1.o(i.gt_init_AccuracyCalibrate2_1) referenced from activity_logo.o(.constdata)
 <LI><a href="#[28c]">gt_init_AccuracyCalibrate3</a> from activity_accuracycalibrate3.o(i.gt_init_AccuracyCalibrate3) referenced from activity_logo.o(.constdata)
 <LI><a href="#[28d]">gt_init_AccuracyCalibrate4</a> from activity_accuracycalibrate4.o(i.gt_init_AccuracyCalibrate4) referenced from activity_logo.o(.constdata)
 <LI><a href="#[298]">gt_init_BootUp</a> from bootup.o(i.gt_init_BootUp) referenced from activity_logo.o(.constdata)
 <LI><a href="#[2a1]">gt_init_BrandChoice</a> from activity_brandchioce.o(i.gt_init_BrandChoice) referenced from activity_logo.o(.constdata)
 <LI><a href="#[2a2]">gt_init_BrandChoice2</a> from activity_brandchoice2.o(i.gt_init_BrandChoice2) referenced from activity_logo.o(.constdata)
 <LI><a href="#[275]">gt_init_ClearAccumVol</a> from activity_clearaccumvol.o(i.gt_init_ClearAccumVol) referenced from activity_logo.o(.constdata)
 <LI><a href="#[289]">gt_init_DeleteBrand</a> from activity_deletebrand.o(i.gt_init_DeleteBrand) referenced from activity_logo.o(.constdata)
 <LI><a href="#[297]">gt_init_DeleteHistory</a> from activity_deletehistory.o(i.gt_init_DeleteHistory) referenced from activity_logo.o(.constdata)
 <LI><a href="#[2a3]">gt_init_DoseUnit</a> from activity_doseunit.o(i.gt_init_DoseUnit) referenced from activity_logo.o(.constdata)
 <LI><a href="#[84]">gt_init_DripMode</a> from activity_dripmode.o(i.gt_init_DripMode) referenced from activity_logo.o(.constdata)
 <LI><a href="#[84]">gt_init_DripMode</a> from activity_dripmode.o(i.gt_init_DripMode) referenced from activity_dripmode.o(i.btn1_0_cb)
 <LI><a href="#[2ad]">gt_init_DripModeRun</a> from activity_dripmoderun.o(i.gt_init_DripModeRun) referenced from activity_logo.o(.constdata)
 <LI><a href="#[276]">gt_init_DrugChoice</a> from activity_drugchoice.o(i.gt_init_DrugChoice) referenced from activity_logo.o(.constdata)
 <LI><a href="#[288]">gt_init_DrugDelete</a> from activity_drugdelete.o(i.gt_init_DrugDelete) referenced from activity_logo.o(.constdata)
 <LI><a href="#[2a5]">gt_init_DrugUnit</a> from activity_drugunit.o(i.gt_init_DrugUnit) referenced from activity_logo.o(.constdata)
 <LI><a href="#[290]">gt_init_ExportHistory</a> from activity_exporthistory.o(i.gt_init_ExportHistory) referenced from activity_logo.o(.constdata)
 <LI><a href="#[2a6]">gt_init_GeneralBolus</a> from activity_generalbolus.o(i.gt_init_GeneralBolus) referenced from activity_logo.o(.constdata)
 <LI><a href="#[2a7]">gt_init_GeneralBolusRun</a> from activity_generalbolusrun.o(i.gt_init_GeneralBolusRun) referenced from activity_logo.o(.constdata)
 <LI><a href="#[27e]">gt_init_HistoryView</a> from activity_historyview.o(i.gt_init_HistoryView) referenced from activity_logo.o(.constdata)
 <LI><a href="#[2a4]">gt_init_KVORun</a> from activity_kvorun.o(i.gt_init_KVORun) referenced from activity_logo.o(.constdata)
 <LI><a href="#[270]">gt_init_MainScreen</a> from activity_aaamainscreen.o(i.gt_init_MainScreen) referenced from activity_logo.o(.constdata)
 <LI><a href="#[281]">gt_init_Maintenance1_1</a> from activity_maintenance1_1.o(i.gt_init_Maintenance1_1) referenced from activity_logo.o(.constdata)
 <LI><a href="#[282]">gt_init_Maintenance1_2</a> from activity_maintenance1_2.o(i.gt_init_Maintenance1_2) referenced from activity_logo.o(.constdata)
 <LI><a href="#[283]">gt_init_Maintenance1_3</a> from activity_maintenance1_3.o(i.gt_init_Maintenance1_3) referenced from activity_logo.o(.constdata)
 <LI><a href="#[284]">gt_init_Maintenance1_4</a> from activity_maintenance1_4.o(i.gt_init_Maintenance1_4) referenced from activity_logo.o(.constdata)
 <LI><a href="#[285]">gt_init_Maintenance1_5</a> from activity_maintenance1_5.o(i.gt_init_Maintenance1_5) referenced from activity_logo.o(.constdata)
 <LI><a href="#[286]">gt_init_Maintenance2_1</a> from activity_maintenance2_1.o(i.gt_init_Maintenance2_1) referenced from activity_logo.o(.constdata)
 <LI><a href="#[287]">gt_init_Maintenance2_2</a> from activity_maintenance2_2.o(i.gt_init_Maintenance2_2) referenced from activity_logo.o(.constdata)
 <LI><a href="#[271]">gt_init_ModeSelect</a> from activity_modeselect.o(i.gt_init_ModeSelect) referenced from activity_logo.o(.constdata)
 <LI><a href="#[280]">gt_init_NightSetting</a> from activity_nightsetting.o(i.gt_init_NightSetting) referenced from activity_logo.o(.constdata)
 <LI><a href="#[272]">gt_init_ParamSetting1</a> from activity_paramsetting1.o(i.gt_init_ParamSetting1) referenced from activity_logo.o(.constdata)
 <LI><a href="#[277]">gt_init_ParamSetting2</a> from activity_paramsetting2.o(i.gt_init_ParamSetting2) referenced from activity_logo.o(.constdata)
 <LI><a href="#[278]">gt_init_ParamSetting3</a> from activity_paramsetting3.o(i.gt_init_ParamSetting3) referenced from activity_logo.o(.constdata)
 <LI><a href="#[279]">gt_init_ParamSetting4</a> from activity_paramsetting4.o(i.gt_init_ParamSetting4) referenced from activity_logo.o(.constdata)
 <LI><a href="#[299]">gt_init_PowerOff</a> from activity_poweroff.o(i.gt_init_PowerOff) referenced from activity_logo.o(.constdata)
 <LI><a href="#[28e]">gt_init_PressureCalibrate1</a> from activity_pressurecalibrate1.o(i.gt_init_PressureCalibrate1) referenced from activity_logo.o(.constdata)
 <LI><a href="#[28f]">gt_init_PressureCalibrate2</a> from activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2) referenced from activity_logo.o(.constdata)
 <LI><a href="#[27a]">gt_init_PressureNumSel</a> from activity_pressurenumsel.o(i.gt_init_PressureNumSel) referenced from activity_logo.o(.constdata)
 <LI><a href="#[27b]">gt_init_PressureUnit</a> from activity_pressureunit.o(i.gt_init_PressureUnit) referenced from activity_logo.o(.constdata)
 <LI><a href="#[29f]">gt_init_Purge</a> from activity_purge.o(i.gt_init_Purge) referenced from activity_logo.o(.constdata)
 <LI><a href="#[2a0]">gt_init_PurgeRun</a> from activity_purgerun.o(i.gt_init_PurgeRun) referenced from activity_logo.o(.constdata)
 <LI><a href="#[27c]">gt_init_PurgeSizeSetting</a> from activity_purgesizesetting.o(i.gt_init_PurgeSizeSetting) referenced from activity_logo.o(.constdata)
 <LI><a href="#[291]">gt_init_RestoreFactory</a> from activity_restorefactory.o(i.gt_init_RestoreFactory) referenced from activity_logo.o(.constdata)
 <LI><a href="#[29a]">gt_init_Screen_KeyBoard_Int</a> from activity_keyboard_int.o(i.gt_init_Screen_KeyBoard_Int) referenced from activity_logo.o(.constdata)
 <LI><a href="#[29d]">gt_init_Screen_KeyBoard_Soft</a> from activity_keyboard_soft.o(i.gt_init_Screen_KeyBoard_Soft) referenced from activity_logo.o(.constdata)
 <LI><a href="#[296]">gt_init_SensorMonitor</a> from activity_sensormonitor.o(i.gt_init_SensorMonitor) referenced from activity_logo.o(.constdata)
 <LI><a href="#[2a8]">gt_init_SeqBolus</a> from activity_seqbolus.o(i.gt_init_SeqBolus) referenced from activity_logo.o(.constdata)
 <LI><a href="#[2a9]">gt_init_SeqBolusRun</a> from activity_seqbolusrun.o(i.gt_init_SeqBolusRun) referenced from activity_logo.o(.constdata)
 <LI><a href="#[6b]">gt_init_SeqMode</a> from activity_seqmode.o(i.gt_init_SeqMode) referenced from activity_logo.o(.constdata)
 <LI><a href="#[6b]">gt_init_SeqMode</a> from activity_seqmode.o(i.gt_init_SeqMode) referenced from activity_seqmode.o(i.Run)
 <LI><a href="#[2ac]">gt_init_SeqModeRun</a> from activity_seqmoderun.o(i.gt_init_SeqModeRun) referenced from activity_logo.o(.constdata)
 <LI><a href="#[2aa]">gt_init_SpeedAndTimeModeRun</a> from activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun) referenced from activity_logo.o(.constdata)
 <LI><a href="#[85]">gt_init_SpeedMode</a> from activity_speedmode.o(i.gt_init_SpeedMode) referenced from activity_logo.o(.constdata)
 <LI><a href="#[85]">gt_init_SpeedMode</a> from activity_speedmode.o(i.gt_init_SpeedMode) referenced from activity_speedmode.o(i.btn1_0_cb)
 <LI><a href="#[29e]">gt_init_Standby</a> from activity_standby.o(i.gt_init_Standby) referenced from activity_logo.o(.constdata)
 <LI><a href="#[294]">gt_init_SystemCheck</a> from activity_systemcheck.o(i.gt_init_SystemCheck) referenced from activity_logo.o(.constdata)
 <LI><a href="#[293]">gt_init_SystemDataTimeSetting</a> from activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting) referenced from activity_logo.o(.constdata)
 <LI><a href="#[292]">gt_init_SystemLanguageSetting</a> from activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting) referenced from activity_logo.o(.constdata)
 <LI><a href="#[273]">gt_init_SystemSetting1</a> from activity_systemsetting1.o(i.gt_init_SystemSetting1) referenced from activity_logo.o(.constdata)
 <LI><a href="#[27d]">gt_init_SystemSetting2</a> from activity_systemsetting2.o(i.gt_init_SystemSetting2) referenced from activity_logo.o(.constdata)
 <LI><a href="#[29c]">gt_init_TimeKeyBoard</a> from activity_keyboard_time.o(i.gt_init_TimeKeyBoard) referenced from activity_logo.o(.constdata)
 <LI><a href="#[6c]">gt_init_TimeMode</a> from activity_timemode.o(i.gt_init_TimeMode) referenced from activity_logo.o(.constdata)
 <LI><a href="#[6c]">gt_init_TimeMode</a> from activity_timemode.o(i.gt_init_TimeMode) referenced from activity_timemode.o(i.Run)
 <LI><a href="#[27f]">gt_init_Version</a> from activity_version.o(i.gt_init_Version) referenced from activity_logo.o(.constdata)
 <LI><a href="#[6d]">gt_init_WeightMode</a> from activity_weightmode.o(i.gt_init_WeightMode) referenced from activity_logo.o(.constdata)
 <LI><a href="#[6d]">gt_init_WeightMode</a> from activity_weightmode.o(i.gt_init_WeightMode) referenced from activity_weightmode.o(i.Run)
 <LI><a href="#[86]">gt_init_WeightMode2</a> from activity_weightmode2.o(i.gt_init_WeightMode2) referenced from activity_logo.o(.constdata)
 <LI><a href="#[86]">gt_init_WeightMode2</a> from activity_weightmode2.o(i.gt_init_WeightMode2) referenced from activity_weightmode2.o(i.btn1_0_cb)
 <LI><a href="#[2ab]">gt_init_WeightModeRun</a> from activity_weightmoderun.o(i.gt_init_WeightModeRun) referenced from activity_logo.o(.constdata)
 <LI><a href="#[274]">gt_init_screen_keyBoard_PassWord</a> from activity_keyboard_password.o(i.gt_init_screen_keyBoard_PassWord) referenced from activity_logo.o(.constdata)
 <LI><a href="#[29b]">gt_init_screen_keyBoard_float</a> from activity_keyboard_float.o(i.gt_init_screen_keyBoard_float) referenced from activity_logo.o(.constdata)
 <LI><a href="#[2ae]">gt_init_shutdown</a> from activity_shutdown.o(i.gt_init_shutdown) referenced from activity_logo.o(.constdata)
 <LI><a href="#[233]">gt_label_set_font_color</a> from gt_label.o(i.gt_label_set_font_color) referenced from gt_status_bar.o(i.gt_status_bar_set_font_color)
 <LI><a href="#[234]">gt_label_set_font_family_cn</a> from gt_label.o(i.gt_label_set_font_family_cn) referenced from gt_status_bar.o(i.gt_status_bar_set_font_family_cn)
 <LI><a href="#[235]">gt_label_set_font_family_fl</a> from gt_label.o(i.gt_label_set_font_family_fl) referenced from gt_status_bar.o(i.gt_status_bar_set_font_family_fl)
 <LI><a href="#[236]">gt_label_set_font_gray</a> from gt_label.o(i.gt_label_set_font_gray) referenced from gt_status_bar.o(i.gt_status_bar_set_font_gray)
 <LI><a href="#[237]">gt_label_set_font_size</a> from gt_label.o(i.gt_label_set_font_size) referenced from gt_status_bar.o(i.gt_status_bar_set_font_size)
 <LI><a href="#[238]">gt_label_set_font_thick_cn</a> from gt_label.o(i.gt_label_set_font_thick_cn) referenced from gt_status_bar.o(i.gt_status_bar_set_font_thick_cn)
 <LI><a href="#[239]">gt_label_set_font_thick_en</a> from gt_label.o(i.gt_label_set_font_thick_en) referenced from gt_status_bar.o(i.gt_status_bar_set_font_thick_en)
 <LI><a href="#[244]">hardware_task_function</a> from main.o(i.hardware_task_function) referenced from main.o(i.weak_up)
 <LI><a href="#[b3]">img1_0_cb</a> from activity_accuracycalibrate4.o(i.img1_0_cb) referenced from activity_accuracycalibrate4.o(i.gt_init_AccuracyCalibrate4)
 <LI><a href="#[be]">img1_0_cb</a> from activity_deletebrand.o(i.img1_0_cb) referenced from activity_deletebrand.o(i.gt_init_DeleteBrand)
 <LI><a href="#[c4]">img1_0_cb</a> from activity_doseunit.o(i.img1_0_cb) referenced from activity_doseunit.o(i.gt_init_DoseUnit)
 <LI><a href="#[c8]">img1_0_cb</a> from activity_dripmode.o(i.img1_0_cb) referenced from activity_dripmode.o(i.gt_init_DripMode)
 <LI><a href="#[d7]">img1_0_cb</a> from activity_drugchoice.o(i.img1_0_cb) referenced from activity_drugchoice.o(i.gt_init_DrugChoice)
 <LI><a href="#[db]">img1_0_cb</a> from activity_drugdelete.o(i.img1_0_cb) referenced from activity_drugdelete.o(i.gt_init_DrugDelete)
 <LI><a href="#[e1]">img1_0_cb</a> from activity_exporthistory.o(i.img1_0_cb) referenced from activity_exporthistory.o(i.gt_init_ExportHistory)
 <LI><a href="#[e6]">img1_0_cb</a> from activity_generalbolus.o(i.img1_0_cb) referenced from activity_generalbolus.o(i.gt_init_GeneralBolus)
 <LI><a href="#[f0]">img1_0_cb</a> from activity_historyview.o(i.img1_0_cb) referenced from activity_historyview.o(i.gt_init_HistoryView)
 <LI><a href="#[10e]">img1_0_cb</a> from activity_maintenance1_3.o(i.img1_0_cb) referenced from activity_maintenance1_3.o(i.gt_init_Maintenance1_3)
 <LI><a href="#[115]">img1_0_cb</a> from activity_maintenance1_4.o(i.img1_0_cb) referenced from activity_maintenance1_4.o(i.gt_init_Maintenance1_4)
 <LI><a href="#[11b]">img1_0_cb</a> from activity_maintenance1_5.o(i.img1_0_cb) referenced from activity_maintenance1_5.o(i.gt_init_Maintenance1_5)
 <LI><a href="#[168]">img1_0_cb</a> from activity_pressureunit.o(i.img1_0_cb) referenced from activity_pressureunit.o(i.gt_init_PressureUnit)
 <LI><a href="#[190]">img1_0_cb</a> from activity_seqbolus.o(i.img1_0_cb) referenced from activity_seqbolus.o(i.gt_init_SeqBolus)
 <LI><a href="#[19b]">img1_0_cb</a> from activity_seqmode.o(i.img1_0_cb) referenced from activity_seqmode.o(i.gt_init_SeqMode)
 <LI><a href="#[1b3]">img1_0_cb</a> from activity_speedmode.o(i.img1_0_cb) referenced from activity_speedmode.o(i.gt_init_SpeedMode)
 <LI><a href="#[1c8]">img1_0_cb</a> from activity_systemlanguagesetting.o(i.img1_0_cb) referenced from activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting)
 <LI><a href="#[1ec]">img1_0_cb</a> from activity_timemode.o(i.img1_0_cb) referenced from activity_timemode.o(i.gt_init_TimeMode)
 <LI><a href="#[1f2]">img1_0_cb</a> from activity_version.o(i.img1_0_cb) referenced from activity_version.o(i.gt_init_Version)
 <LI><a href="#[1f4]">img1_0_cb</a> from activity_weightmode.o(i.img1_0_cb) referenced from activity_weightmode.o(i.gt_init_WeightMode)
 <LI><a href="#[1fe]">img1_0_cb</a> from activity_weightmode2.o(i.img1_0_cb) referenced from activity_weightmode2.o(i.gt_init_WeightMode2)
 <LI><a href="#[71]">input_func</a> from gt_sjpg.o(i.input_func) referenced from gt_sjpg.o(i._common_sjpg_info)
 <LI><a href="#[71]">input_func</a> from gt_sjpg.o(i.input_func) referenced from gt_sjpg.o(i._common_sjpg_open)
 <LI><a href="#[71]">input_func</a> from gt_sjpg.o(i.input_func) referenced from gt_sjpg.o(i._gt_sjpg_read_line)
 <LI><a href="#[5d]">isspace</a> from isspace_o.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[120]">language</a> from activity_maintenance1_5.o(i.language) referenced from activity_maintenance1_5.o(i.gt_init_Maintenance1_5)
 <LI><a href="#[245]">lvgl_task_function</a> from main.o(i.lvgl_task_function) referenced from main.o(i.weak_up)
 <LI><a href="#[58]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[fb]">mode_select</a> from activity_aaamainscreen.o(i.mode_select) referenced from activity_aaamainscreen.o(i.gt_init_MainScreen)
 <LI><a href="#[1dd]">nightmode</a> from activity_systemsetting2.o(i.nightmode) referenced from activity_systemsetting2.o(i.gt_init_SystemSetting2)
 <LI><a href="#[c7]">one_sec_timer</a> from activity_dripmode.o(i.one_sec_timer) referenced from activity_dripmode.o(i.gt_init_DripMode)
 <LI><a href="#[1b2]">one_sec_timer</a> from activity_speedmode.o(i.one_sec_timer) referenced from activity_speedmode.o(i.gt_init_SpeedMode)
 <LI><a href="#[1ba]">one_sec_timer</a> from activity_standby.o(i.one_sec_timer) referenced from activity_standby.o(i.gt_init_Standby)
 <LI><a href="#[1eb]">one_sec_timer</a> from activity_timemode.o(i.one_sec_timer) referenced from activity_timemode.o(i.gt_init_TimeMode)
 <LI><a href="#[137]">openflag</a> from activity_nightsetting.o(i.openflag) referenced from activity_nightsetting.o(i.gt_init_NightSetting)
 <LI><a href="#[7f]">output_func</a> from gt_sjpg.o(i.output_func) referenced from gt_sjpg.o(i._gt_sjpg_read_line)
 <LI><a href="#[243]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[240]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
 <LI><a href="#[19d]">purge</a> from activity_seqmode.o(i.purge) referenced from activity_seqmode.o(i.gt_init_SeqMode)
 <LI><a href="#[1b7]">purge</a> from activity_speedmode.o(i.purge) referenced from activity_speedmode.o(i.gt_init_SpeedMode)
 <LI><a href="#[1f0]">purge</a> from activity_timemode.o(i.purge) referenced from activity_timemode.o(i.gt_init_TimeMode)
 <LI><a href="#[176]">purgesizechange</a> from activity_purgesizesetting.o(i.purgesizechange) referenced from activity_purgesizesetting.o(i.gt_init_PurgeSizeSetting)
 <LI><a href="#[225]">read_cb</a> from main.o(i.read_cb) referenced from gt_port_indev.o(i.gt_port_indev_init)
 <LI><a href="#[226]">read_cb_btn</a> from main.o(i.read_cb_btn) referenced from gt_port_indev.o(i.gt_port_indev_init)
 <LI><a href="#[1e9]">rect10_0_cb</a> from activity_keyboard_time.o(i.rect10_0_cb) referenced from activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
 <LI><a href="#[111]">rect2_0_cb</a> from activity_maintenance1_3.o(i.rect2_0_cb) referenced from activity_maintenance1_3.o(i.gt_init_Maintenance1_3)
 <LI><a href="#[11e]">rect2_0_cb</a> from activity_maintenance1_5.o(i.rect2_0_cb) referenced from activity_maintenance1_5.o(i.gt_init_Maintenance1_5)
 <LI><a href="#[184]">rect2_0_cb</a> from activity_sensormonitor.o(i.rect2_0_cb) referenced from activity_sensormonitor.o(i.gt_init_SensorMonitor)
 <LI><a href="#[1e1]">rect2_0_cb</a> from activity_keyboard_time.o(i.rect2_0_cb) referenced from activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
 <LI><a href="#[1e2]">rect3_0_cb</a> from activity_keyboard_time.o(i.rect3_0_cb) referenced from activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
 <LI><a href="#[fc]">rect4_0_cb</a> from activity_aaamainscreen.o(i.rect4_0_cb) referenced 2 times from activity_aaamainscreen.o(i.gt_init_MainScreen)
 <LI><a href="#[108]">rect4_0_cb</a> from activity_maintenance1_2.o(i.rect4_0_cb) referenced from activity_maintenance1_2.o(i.gt_init_Maintenance1_2)
 <LI><a href="#[1e3]">rect4_0_cb</a> from activity_keyboard_time.o(i.rect4_0_cb) referenced from activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
 <LI><a href="#[fd]">rect5_0_cb</a> from activity_aaamainscreen.o(i.rect5_0_cb) referenced 2 times from activity_aaamainscreen.o(i.gt_init_MainScreen)
 <LI><a href="#[109]">rect5_0_cb</a> from activity_maintenance1_2.o(i.rect5_0_cb) referenced from activity_maintenance1_2.o(i.gt_init_Maintenance1_2)
 <LI><a href="#[1e4]">rect5_0_cb</a> from activity_keyboard_time.o(i.rect5_0_cb) referenced from activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
 <LI><a href="#[fa]">rect6_0_cb</a> from activity_aaamainscreen.o(i.rect6_0_cb) referenced 2 times from activity_aaamainscreen.o(i.gt_init_MainScreen)
 <LI><a href="#[1e5]">rect6_0_cb</a> from activity_keyboard_time.o(i.rect6_0_cb) referenced from activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
 <LI><a href="#[1e6]">rect7_0_cb</a> from activity_keyboard_time.o(i.rect7_0_cb) referenced from activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
 <LI><a href="#[1e7]">rect8_0_cb</a> from activity_keyboard_time.o(i.rect8_0_cb) referenced from activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
 <LI><a href="#[1e8]">rect9_0_cb</a> from activity_keyboard_time.o(i.rect9_0_cb) referenced from activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
 <LI><a href="#[193]">run</a> from activity_seqbolus.o(i.run) referenced from activity_seqbolus.o(i.gt_init_SeqBolus)
 <LI><a href="#[63]">run_progress_func</a> from activity_generalbolusrun.o(i.run_progress_func) referenced 8 times from activity_generalbolusrun.o(i.MotorRun)
 <LI><a href="#[90]">sendDownKeyDownMessageToLvgl</a> from key_manage.o(i.sendDownKeyDownMessageToLvgl) referenced from main.o(i.fast_task_function)
 <LI><a href="#[92]">sendPowerKeyDownMessageToLvgl</a> from key_manage.o(i.sendPowerKeyDownMessageToLvgl) referenced from main.o(i.fast_task_function)
 <LI><a href="#[93]">sendPowerKeyLongDownMessageToLvgl</a> from key_manage.o(i.sendPowerKeyLongDownMessageToLvgl) referenced from main.o(i.fast_task_function)
 <LI><a href="#[8c]">sendUpkeyDownMessageToLvgl</a> from key_manage.o(i.sendUpkeyDownMessageToLvgl) referenced from main.o(i.fast_task_function)
 <LI><a href="#[8d]">sendUpkeyLongDownMessageToLvgl</a> from key_manage.o(i.sendUpkeyLongDownMessageToLvgl) referenced from main.o(i.fast_task_function)
 <LI><a href="#[8e]">sendUpkeyUpMessageToLvgl</a> from key_manage.o(i.sendUpkeyUpMessageToLvgl) referenced from main.o(i.fast_task_function)
 <LI><a href="#[227]">spi_wr</a> from main.o(i.spi_wr) referenced from gt_port_vf.o(i.gt_port_vf_init)
 <LI><a href="#[d4]">svg1_0_cb</a> from activity_dripmoderun.o(i.svg1_0_cb) referenced from activity_dripmoderun.o(i.gt_init_DripModeRun)
 <LI><a href="#[10a]">svg1_0_cb</a> from activity_maintenance1_2.o(i.svg1_0_cb) referenced from activity_maintenance1_2.o(i.gt_init_Maintenance1_2)
 <LI><a href="#[10f]">svg1_0_cb</a> from activity_maintenance1_3.o(i.svg1_0_cb) referenced from activity_maintenance1_3.o(i.gt_init_Maintenance1_3)
 <LI><a href="#[116]">svg1_0_cb</a> from activity_maintenance1_4.o(i.svg1_0_cb) referenced from activity_maintenance1_4.o(i.gt_init_Maintenance1_4)
 <LI><a href="#[11c]">svg1_0_cb</a> from activity_maintenance1_5.o(i.svg1_0_cb) referenced from activity_maintenance1_5.o(i.gt_init_Maintenance1_5)
 <LI><a href="#[1a5]">svg1_0_cb</a> from activity_seqmoderun.o(i.svg1_0_cb) referenced from activity_seqmoderun.o(i.gt_init_SeqModeRun)
 <LI><a href="#[1ae]">svg1_0_cb</a> from activity_speedandtimemoderun.o(i.svg1_0_cb) referenced from activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
 <LI><a href="#[20c]">svg1_0_cb</a> from activity_weightmoderun.o(i.svg1_0_cb) referenced from activity_weightmoderun.o(i.gt_init_WeightModeRun)
 <LI><a href="#[d5]">svg2_0_cb</a> from activity_dripmoderun.o(i.svg2_0_cb) referenced from activity_dripmoderun.o(i.gt_init_DripModeRun)
 <LI><a href="#[10b]">svg2_0_cb</a> from activity_maintenance1_2.o(i.svg2_0_cb) referenced from activity_maintenance1_2.o(i.gt_init_Maintenance1_2)
 <LI><a href="#[110]">svg2_0_cb</a> from activity_maintenance1_3.o(i.svg2_0_cb) referenced from activity_maintenance1_3.o(i.gt_init_Maintenance1_3)
 <LI><a href="#[117]">svg2_0_cb</a> from activity_maintenance1_4.o(i.svg2_0_cb) referenced from activity_maintenance1_4.o(i.gt_init_Maintenance1_4)
 <LI><a href="#[11d]">svg2_0_cb</a> from activity_maintenance1_5.o(i.svg2_0_cb) referenced from activity_maintenance1_5.o(i.gt_init_Maintenance1_5)
 <LI><a href="#[1a6]">svg2_0_cb</a> from activity_seqmoderun.o(i.svg2_0_cb) referenced from activity_seqmoderun.o(i.gt_init_SeqModeRun)
 <LI><a href="#[1af]">svg2_0_cb</a> from activity_speedandtimemoderun.o(i.svg2_0_cb) referenced from activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
 <LI><a href="#[20d]">svg2_0_cb</a> from activity_weightmoderun.o(i.svg2_0_cb) referenced from activity_weightmoderun.o(i.gt_init_WeightModeRun)
 <LI><a href="#[105]">up</a> from activity_maintenance1_1.o(i.up) referenced from activity_maintenance1_1.o(i.gt_init_Maintenance1_1)
 <LI><a href="#[125]">up</a> from activity_maintenance2_1.o(i.up) referenced from activity_maintenance2_1.o(i.gt_init_Maintenance2_1)
 <LI><a href="#[12a]">up</a> from activity_maintenance2_2.o(i.up) referenced from activity_maintenance2_2.o(i.gt_init_Maintenance2_2)
 <LI><a href="#[ec]">updata_EVENT</a> from activity_generalbolusrun.o(i.updata_EVENT) referenced from activity_generalbolusrun.o(i.gt_init_GeneralBolusRun)
 <LI><a href="#[196]">updata_EVENT</a> from activity_seqbolusrun.o(i.updata_EVENT) referenced from activity_seqbolusrun.o(i.gt_init_SeqBolusRun)
 <LI><a href="#[10d]">update</a> from activity_maintenance1_3.o(i.update) referenced from activity_maintenance1_3.o(i.gt_init_Maintenance1_3)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5a]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(.text)
</UL>
<P><STRONG><a name="[7c5]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2b2]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2e5]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7c6]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[7c7]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[7c8]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[7c9]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[7ca]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[7cb]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[7c3]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[7c2]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[7cc]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text), UNUSED)

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>ACC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CAN1_SE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>CAN2_SE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>CRM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA2_Channel6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>EMAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>EMAC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXINT9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C2_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>I2C3_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>I2C3_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SDIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SDIO2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SPI2_I2S2EXT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SPI3_I2S3EXT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TMR1_BRK_TMR9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TMR1_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TMR1_TRG_HALL_TMR11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TMR7_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TMR8_BRK_TMR12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TMR8_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TMR8_OVF_TMR13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TMR8_TRG_HALL_TMR14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>USBFSWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USBFS_H_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>USBFS_MAPH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USBFS_MAPL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>XMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f403a_407.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[2b5]"></a>GT_Font_Init</STRONG> (Thumb, 376 bytes, Stack size 184 bytes, gt_gui_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = GT_Font_Init &rArr; MD5Final &rArr; MD5Update &rArr; MD5Transform
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_read_data
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Update
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Init
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Final
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_task_function
</UL>

<P><STRONG><a name="[653]"></a>GT_Set_Chinese_Charset_Type</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_gui_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_one_char_code_len_get
</UL>

<P><STRONG><a name="[2bf]"></a>GT_Get_Chinese_Charset_Type</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_gui_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_GetChinese
</UL>

<P><STRONG><a name="[2af]"></a>GT_GetChinese</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, gt_gui_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GT_GetChinese &rArr; UnicodeToGBK &rArr; r_dat_bat &rArr; spiflash_read &rArr; spi_bytes_read
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnicodeToGBK
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_dat_bat
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Get_Chinese_Charset_Type
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GBKOffset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_gui_driver.o(.rodata.gt_get_font_func)
</UL>
<P><STRONG><a name="[2b0]"></a>GT_GetASCII</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gt_gui_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GT_GetASCII &rArr; r_dat_bat &rArr; spiflash_read &rArr; spi_bytes_read
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_dat_bat
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ASCIIOffset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_gui_driver.o(.rodata.gt_get_font_func)
</UL>
<P><STRONG><a name="[2b1]"></a>GT_GetLatin</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gt_gui_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GT_GetLatin &rArr; r_dat_bat &rArr; spiflash_read &rArr; spi_bytes_read
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_dat_bat
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LatinUnicodeALL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_gui_driver.o(.rodata.gt_get_font_func)
</UL>
<P><STRONG><a name="[2c1]"></a>UnicodeToGBK</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, gt_gui_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UnicodeToGBK &rArr; r_dat_bat &rArr; spiflash_read &rArr; spi_bytes_read
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_dat_bat
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_GetChinese
</UL>

<P><STRONG><a name="[2c5]"></a>GBKToUnicode</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, gt_gui_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_dat_bat
</UL>

<P><STRONG><a name="[652]"></a>GT_Get_Font_Width</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, gt_gui_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_one_word_width
</UL>

<P><STRONG><a name="[7cd]"></a>GT_Get_Font_Height</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, gt_gui_driver.o(.text), UNUSED)

<P><STRONG><a name="[64f]"></a>GT_Check_Is_Vec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_gui_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_one_word_width
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_dot
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_code_transform
</UL>

<P><STRONG><a name="[2c7]"></a>GT_Get_Font_Func_S</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gt_gui_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_dot
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_code_transform
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Get_Font_Type
</UL>

<P><STRONG><a name="[2c6]"></a>GT_Get_Font_Type</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gt_gui_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GT_Get_Font_Type
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Get_Font_Func_S
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_type_get
</UL>

<P><STRONG><a name="[650]"></a>GT_Font_Code_Transform</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gt_gui_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_code_transform
</UL>

<P><STRONG><a name="[651]"></a>GT_Get_Font_Convertor_Data</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gt_gui_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_convertor_data_get
</UL>

<P><STRONG><a name="[656]"></a>tolower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tolower.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_get_src_type
</UL>

<P><STRONG><a name="[7ce]"></a>____aeabi_memcpy8$ret$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[7cf]"></a>___aeabi_memmove$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[7d0]"></a>___aeabi_memmove4$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[7d1]"></a>___aeabi_memmove8$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[2bc]"></a>__aeabi_memcpy</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_split
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_convertor_string_width
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_init_cb
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_init_widget
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radio_init_widget
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Update
</UL>

<P><STRONG><a name="[32b]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_push_scr_only_st
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_ref_area
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_convertor_string_width
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_zTXt
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_iTXt
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_iCCP
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_path_bounce
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_xpt2046_calibrate_or_get_touch_para_with_flash
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createInfusionLib
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createDrugLib
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSurplusTime
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[6c5]"></a>memcpy</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
</UL>

<P><STRONG><a name="[6c6]"></a>memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memmove
</UL>

<P><STRONG><a name="[2c9]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[7d2]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[7d3]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2b7]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Font_Init
</UL>

<P><STRONG><a name="[322]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_judge_obj_exists
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_load
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jd_prepare
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_open
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_info
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_convertor_string_width
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_init_cb
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_init_widget
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_label_value
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radio_init_widget
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_read_adc_smooth_xy
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Freq_to_Pr_Div
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr5_init
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Create
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
</UL>

<P><STRONG><a name="[7d4]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2ca]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memset
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset_0
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
</UL>

<P><STRONG><a name="[417]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_get_ext
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_png_file_ext
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_utf8_check_char
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_gb_check_char
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gb_font_one_char_code_len_get
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_ins
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_cut
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_string_del
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_text
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_init_cb
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_init_widget
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_format
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_time_str
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_value
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_placeholder
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_move_right_pos_cursor
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_del_value
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_append_value
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_text
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_create
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radio_init_widget
</UL>

<P><STRONG><a name="[372]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_png_file_ext
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_open_cb
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_open_cb
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_contents_equal_cb
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_by_str
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeInfusionNodeByName
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeDrugNodeById
</UL>

<P><STRONG><a name="[2bb]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcmp
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Font_Init
</UL>

<P><STRONG><a name="[2eb]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BolusModeSpeed
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BolusModeQuantity
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDrip
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfusionNodelangue
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createInfusionLib
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createDrugLib
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect4_0_cb
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect3_0_cb
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect2_0_cb
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;history_info_langue
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BolusModeSpeed
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BolusModeQuantity
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeRate
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoOperateTime
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NearFinishTime
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoLockTime
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangKVO
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccumBubble
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Time
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;End_Time
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSetting
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedChange
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedChange
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeLiquid2
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeLiquid1
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeTime
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bedchange
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeSeriesNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDrug
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddBrand
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrugNodelangue
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeMaxSpeed
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDrip
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad70
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad40
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad0
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;P70
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;P40
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;P120
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD120
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeWQuantity
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDoseSpeed
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDoseSpeed
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeMedicine
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeLiquid
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeBody
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect2_0_cb
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad0_change
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_U
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDrips
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeSpeed
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeTime
</UL>

<P><STRONG><a name="[2cb]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_EVENT
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_EVENT
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_EVENT
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_EVENT
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;purgesizechange
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureLevelChange
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedChange
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updata_EVENT
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brandaffirm
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drugaffirm
</UL>

<P><STRONG><a name="[2ce]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_increase
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_GLOBAL_IRQHandler
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calpressureADandValue
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTimeModeTheDisplay
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSpeedModeTheDisplay
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDripModeTheDisplay
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSpeed
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgmentUPAndLowerLimit
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutSpeed
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn4_0_cb
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn3_0_cb
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ThirmSec
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2d3]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_decrease
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getVoltageADCValue
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutSpeed
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn4_0_cb
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn3_0_cb
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>

<P><STRONG><a name="[2d4]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2d5]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr13_init
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getVoltageADCValue
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calpressureADandValue
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWeightModeTheDisplay
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTimeModeTheDisplay
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSpeedModeTheDisplay
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDripModeTheDisplay
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MedicineUintComeToConversion
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOSEUintComeToConversion
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSurplusTime
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSpeed
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn4_0_cb
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn3_0_cb
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDoseSpeed
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ThirmSec
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2d6]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getVoltageADCValue
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calpressureADandValue
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWeightModeTheDisplay
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTimeModeTheDisplay
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSpeedModeTheDisplay
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDripModeTheDisplay
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MedicineUintComeToConversion
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOSEUintComeToConversion
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSurplusTime
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSpeed
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalCumulant
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDoseSpeed
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ThirmSec
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2d7]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getVoltageADCValue
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calpressureADandValue
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWeightModeTheDisplay
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTimeModeTheDisplay
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDripModeTheDisplay
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeINjection
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureLevelChange
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ThirmSec
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[2d8]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr13_init
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calpressureADandValue
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWeightModeTheDisplay
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalAccumulativeBubble
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
</UL>

<P><STRONG><a name="[2d9]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getVoltageADCValue
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWeightModeTheDisplay
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTimeModeTheDisplay
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSpeedModeTheDisplay
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDripModeTheDisplay
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgressRunSpeed
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSurplusTime
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ThirmSec
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[2db]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr13_init
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calpressureADandValue
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWeightModeTheDisplay
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn4_0_cb
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn3_0_cb
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
</UL>

<P><STRONG><a name="[358]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_GLOBAL_IRQHandler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
</UL>

<P><STRONG><a name="[357]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWeightModeTheDisplay
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTimeModeTheDisplay
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSpeedModeTheDisplay
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDripModeTheDisplay
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>

<P><STRONG><a name="[33c]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_value
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_min
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_decrease
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calpressureADandValue
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWeightModeTheDisplay
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTimeModeTheDisplay
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSpeedModeTheDisplay
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDripModeTheDisplay
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutSpeed
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>

<P><STRONG><a name="[327]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_value
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_max
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_increase
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calpressureADandValue
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWeightModeTheDisplay
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTimeModeTheDisplay
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSpeedModeTheDisplay
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDripModeTheDisplay
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeINjection
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSpeed
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalCumulant
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalAccumulativeBubble
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgmentUPAndLowerLimit
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2dc]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[7d5]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[52d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2de]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2cf]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[7d6]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[2da]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[7d7]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[2d0]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[7d8]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[2e1]"></a>__strtod_int</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[2cd]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[7d9]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[2dd]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[7da]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[2d2]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[2d1]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>

<P><STRONG><a name="[2e4]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2b3]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[7db]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2e2]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[5d]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace_o.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[2e0]"></a>_scanf_real</STRONG> (Thumb, 0 bytes, Stack size 104 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>

<P><STRONG><a name="[2e8]"></a>_scanf_really_real</STRONG> (Thumb, 556 bytes, Stack size 104 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[5b]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[5c]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[2e3]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[2ea]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[2e7]"></a>__aeabi_ul2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[7dc]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[7dd]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[2f4]"></a>AddAlarm</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, alarm.o(i.AddAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = AddAlarm &rArr; GetNowAlarmLeve1l
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmLeve1l
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addAlarmFlag
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentAlarm
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BattetyStatusAlarm
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BattetyLowAndDepleteAlarm
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>

<P><STRONG><a name="[2fc]"></a>AddDrugNode</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, library_drug.o(i.AddDrugNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = AddDrugNode &rArr; WriteParamSettingMessageToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowDrugListNum
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAddDrugListToFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[2ff]"></a>AddInfusionNode</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, library_infusion.o(i.AddInfusionNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = AddInfusionNode &rArr; WriteParamSettingMessageToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowInfusionListNum
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeAddInfusionTubeListToFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>

<P><STRONG><a name="[55b]"></a>AddLockNewAFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, alarm.o(i.AddLockNewAFlag))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addAlarmFlag
</UL>

<P><STRONG><a name="[55a]"></a>AddNewSoundAFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, alarm.o(i.AddNewSoundAFlag))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addAlarmFlag
</UL>

<P><STRONG><a name="[582]"></a>AlarmSoundSwitch</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, alarm.o(i.AlarmSoundSwitch))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_callback
</UL>

<P><STRONG><a name="[3da]"></a>AlarmSoundTimeCountDown</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, alarm.o(i.AlarmSoundTimeCountDown))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[30c]"></a>BatteryManagement</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, battery_manage.o(i.BatteryManagement))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BatteryManagement
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_turn
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_on
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_off
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[311]"></a>BatteryManagement_PD</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, battery_manage.o(i.BatteryManagement_PD))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BatteryManagement_PD
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_turn
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_on
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_off
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[312]"></a>BattetyLowAndDepleteAlarm</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, infusion.o(i.BattetyLowAndDepleteAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = BattetyLowAndDepleteAlarm &rArr; judgeIsRunScreen &rArr; my_judge_obj_exists &rArr; gt_scr_stack_has_before &rArr; gt_stack_search_item_from_bottom
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judgeIsRunScreen
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDEPLETEFlag
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[316]"></a>BattetyStatusAlarm</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, infusion.o(i.BattetyStatusAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = BattetyStatusAlarm &rArr; AddAlarm &rArr; GetNowAlarmLeve1l
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[306]"></a>BeepStart</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, audio_manage.o(i.BeepStart))
<BR><BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_EVENT
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEEP_detection
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_weak_up_process
</UL>

<P><STRONG><a name="[305]"></a>BeepStop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, audio_manage.o(i.BeepStop))
<BR><BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_EVENT
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEEP_detection
</UL>

<P><STRONG><a name="[318]"></a>BeepWork</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, audio_manage.o(i.BeepWork))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BeepWork
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[77]"></a>Brandaffirm</STRONG> (Thumb, 274 bytes, Stack size 64 bytes, activity_deletebrand.o(i.Brandaffirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = Brandaffirm &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineInfusionNode_six_ById
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineInfusionNodeByPosit
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowInfusionListNum
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeInfusionNodeByName
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_deletebrand.o(i._dialog2_init)
</UL>
<P><STRONG><a name="[5d5]"></a>Button_Attach</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, vp_button.o(i.Button_Attach))
<BR><BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_task_function
</UL>

<P><STRONG><a name="[321]"></a>Button_Create</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, vp_button.o(i.Button_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Button_Create
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Search_Button
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_task_function
</UL>

<P><STRONG><a name="[325]"></a>Button_Cycle_Process</STRONG> (Thumb, 408 bytes, Stack size 16 bytes, vp_button.o(i.Button_Cycle_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Button_Cycle_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Process
</UL>

<P><STRONG><a name="[324]"></a>Button_Process</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, vp_button.o(i.Button_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Button_Process &rArr; Button_Cycle_Process
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Cycle_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weak_up
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_task_function
</UL>

<P><STRONG><a name="[326]"></a>CalAccumulativeBubble</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, infusion.o(i.CalAccumulativeBubble))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CalAccumulativeBubble &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>

<P><STRONG><a name="[328]"></a>CalCumulant</STRONG> (Thumb, 324 bytes, Stack size 32 bytes, infusion.o(i.CalCumulant))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CalCumulant &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>

<P><STRONG><a name="[329]"></a>CalSpeed</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, infusion.o(i.CalSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CalSpeed &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
</UL>

<P><STRONG><a name="[32a]"></a>CalSurplusTime</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, infusion.o(i.CalSurplusTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = CalSurplusTime &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[314]"></a>ClearAlarm</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, alarm.o(i.ClearAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClearAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarmFlag
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDrip
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearLowAlarm
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearHighAlarm
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BattetyStatusAlarm
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BattetyLowAndDepleteAlarm
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stop
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;purge
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedChange
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;purge
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedChange
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;purge
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeTime
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_callback
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Purge1
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
</UL>

<P><STRONG><a name="[335]"></a>ClearAlarmFlag</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, alarm.o(i.ClearAlarmFlag))
<BR><BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>

<P><STRONG><a name="[3de]"></a>ClearAllAlarm</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, alarm.o(i.ClearAllAlarm))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[336]"></a>ClearHighAlarm</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, alarm.o(i.ClearHighAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ClearHighAlarm &rArr; ClearAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
</UL>

<P><STRONG><a name="[337]"></a>ClearLowAlarm</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, alarm.o(i.ClearLowAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ClearLowAlarm &rArr; ClearAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_callback
</UL>

<P><STRONG><a name="[57f]"></a>ClearNowcumulant</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, infusion.o(i.ClearNowcumulant))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
</UL>

<P><STRONG><a name="[307]"></a>CleargHintAlarm</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, alarm.o(i.CleargHintAlarm))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_callback
</UL>

<P><STRONG><a name="[35c]"></a>CutSpeed</STRONG> (Thumb, 496 bytes, Stack size 24 bytes, activity_seqmoderun.o(i.CutSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CutSpeed &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
</UL>

<P><STRONG><a name="[3dd]"></a>DEPLETETimeCountDown</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, alarm.o(i.DEPLETETimeCountDown))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[16]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, battery_manage.o(i.DMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_get
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[35f]"></a>DOSEUintComeToConversion</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, infusion.o(i.DOSEUintComeToConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DOSEUintComeToConversion &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWeightModeTheDisplay
</UL>

<P><STRONG><a name="[38e]"></a>DownBlockTimeCountDown</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, infusion.o(i.DownBlockTimeCountDown))
<BR><BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedInfusionDownBlock_AD
</UL>

<P><STRONG><a name="[369]"></a>DrugNodelangue</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, library_drug.o(i.DrugNodelangue))
<BR><BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineDrugNode_four_ById
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
</UL>

<P><STRONG><a name="[79]"></a>Drugaffirm</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, activity_drugdelete.o(i.Drugaffirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = Drugaffirm &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowDrugListNum
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineDrugNode_four_ById
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineDrugNodeByPosit
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeDrugNodeById
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_drugdelete.o(i._dialog3_init)
</UL>
<P><STRONG><a name="[11]"></a>EXINT0_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio_manage.o(i.EXINT0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>EXINT15_10_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ultrasonic.o(i.EXINT15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXINT15_10_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_flag_get
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXINT1_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, main.o(i.EXINT1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = EXINT1_IRQHandler &rArr; vtaskmanage &rArr; save_infusion_and_drug_to_flash &rArr; writeInfusionTubeListToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vtaskmanage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXINT3_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, battery_manage.o(i.EXINT3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXINT3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_flag_get
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_flag_clear
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[37f]"></a>GetAlarmLevel</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, alarm.o(i.GetAlarmLevel))
<BR><BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmLeve1l
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneSecond
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundManage
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmLeve12
</UL>

<P><STRONG><a name="[3d8]"></a>GetAlarmSoundFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, alarm.o(i.GetAlarmSoundFlag))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[2f8]"></a>GetCurrentAlarm</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, alarm.o(i.GetCurrentAlarm))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
</UL>

<P><STRONG><a name="[6be]"></a>GetDoseUintString</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, infusion.o(i.GetDoseUintString))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
</UL>

<P><STRONG><a name="[32d]"></a>GetLockFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, alarm.o(i.GetLockFlag))
<BR><BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockTimeCountDown
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDrip
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDoseSpeed
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeSpeed
</UL>

<P><STRONG><a name="[3e7]"></a>GetLockNewAFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, alarm.o(i.GetLockNewAFlag))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[6bc]"></a>GetMedicineUintString</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, infusion.o(i.GetMedicineUintString))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
</UL>

<P><STRONG><a name="[3e4]"></a>GetNerDoneFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, alarm.o(i.GetNerDoneFlag))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
</UL>

<P><STRONG><a name="[3db]"></a>GetNewSoundAFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, alarm.o(i.GetNewSoundAFlag))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[32f]"></a>GetNowAlarmLeve12</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, infusion.o(i.GetNowAlarmLeve12))
<BR><BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAlarmLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundManage
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDrip
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDoseSpeed
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeSpeed
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>

<P><STRONG><a name="[2f7]"></a>GetNowAlarmLeve1l</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, alarm.o(i.GetNowAlarmLeve1l))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetNowAlarmLeve1l
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAlarmLevel
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_task_function
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
</UL>

<P><STRONG><a name="[3c8]"></a>GetNowAlarmMessage</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, alarm.o(i.GetNowAlarmMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetNowAlarmMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundManage
</UL>

<P><STRONG><a name="[380]"></a>GetNowcumulant</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, infusion.o(i.GetNowcumulant))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetNowcumulant &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
</UL>

<P><STRONG><a name="[580]"></a>GetPressUintString</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, infusion.o(i.GetPressUintString))
<BR><BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
</UL>

<P><STRONG><a name="[389]"></a>InfusionNodelangue</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, library_infusion.o(i.InfusionNodelangue))
<BR><BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineInfusionNode_six_ById
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
</UL>

<P><STRONG><a name="[38b]"></a>JudgeINjection</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, infusion.o(i.JudgeINjection))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = JudgeINjection &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>

<P><STRONG><a name="[38c]"></a>JudgeInstallTube</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, infusion.o(i.JudgeInstallTube))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = JudgeInstallTube &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_judge_obj_exists
</UL>
<BR>[Called By]<UL><LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infusion_apparatus_detection
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ThirmSec
</UL>

<P><STRONG><a name="[38d]"></a>JudgedInfusionDownBlock_AD</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, infusion.o(i.JudgedInfusionDownBlock_AD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = JudgedInfusionDownBlock_AD
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownBlockTimeCountDown
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>

<P><STRONG><a name="[38f]"></a>JudgedInfusionTubeFallOff_P</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, infusion.o(i.JudgedInfusionTubeFallOff_P))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = JudgedInfusionTubeFallOff_P
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TubeFallTimeCountDown
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[391]"></a>JudgedInfusionUpBlock</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, infusion.o(i.JudgedInfusionUpBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = JudgedInfusionUpBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpBlockTimeCountDown
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[2f5]"></a>JudgedYesNoAlarm</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, alarm.o(i.JudgedYesNoAlarm))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneSecond
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedInfusionUpBlock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedInfusionTubeFallOff_P
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedInfusionDownBlock_AD
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BattetyLowAndDepleteAlarm
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_callback
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>

<P><STRONG><a name="[3e3]"></a>JudgedinfusionNeaeTimeAlarm</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, infusion.o(i.JudgedinfusionNeaeTimeAlarm))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
</UL>

<P><STRONG><a name="[33a]"></a>JudgmentUPAndLowerLimit</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, activity_keyboard_float.o(i.JudgmentUPAndLowerLimit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = JudgmentUPAndLowerLimit &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
</UL>

<P><STRONG><a name="[3e6]"></a>Lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, alarm.o(i.Lock))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg1_0_cb
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg1_0_cb
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg1_0_cb
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg1_0_cb
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[393]"></a>LockTimeCountDown</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, infusion.o(i.LockTimeCountDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LockTimeCountDown
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[398]"></a>MedicineUintComeToConversion</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, infusion.o(i.MedicineUintComeToConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MedicineUintComeToConversion &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWeightModeTheDisplay
</UL>

<P><STRONG><a name="[399]"></a>MotorCALIBRRun</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, motor_manage.o(i.MotorCALIBRRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = MotorCALIBRRun &rArr; Freq_to_Pr_Div &rArr; crm_clocks_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_base_init
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_set_subdivide
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_set_force
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Freq_to_Pr_Div
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
</UL>

<P><STRONG><a name="[742]"></a>NoOperFunctionTimeCountDown</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, alarm.o(i.NoOperFunctionTimeCountDown))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
</UL>

<P><STRONG><a name="[7c0]"></a>NowAlarmMessageinit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, alarm.o(i.NowAlarmMessageinit))
<BR><BR>[Called By]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weak_up
</UL>

<P><STRONG><a name="[3a2]"></a>ObDefValue</STRONG> (Thumb, 316 bytes, Stack size 32 bytes, infusion.o(i.ObDefValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = ObDefValue &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_period_value_get
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_channel_value_set
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createInfusionLib
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createDrugLib
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readInfusionTubeListFromFlash
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDrugListFromFlash
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWeightModeMessageToFlash
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteTimeModeMessageToFlash
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemSettingMessageToFlash
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemMaintainMessageToFlash
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpeedModeMessageToFlash
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSeqModeMessageToFlash
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDripModeMessageToFlash
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWeightModeMessageFromFlash
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTimeModeMessageFromFlash
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSystemSettingMessageFromFlash
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSystemMaintainMessageFromFlash
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpeedModeMessageFromFlash
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSeqModeMessageFromFlash
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadParamSettingMessageFromFlash
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDripModeMessageFromFlash
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
</UL>

<P><STRONG><a name="[3bf]"></a>PressureConversion</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, infusion.o(i.PressureConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = PressureConversion &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureLevelChange
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[e]"></a>RTC_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, rtc.o(i.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RTC_IRQHandler &rArr; BatteryManagement
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_flag_get
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_flag_clear
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryManagement_PD
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryManagement
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepWork
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[3b3]"></a>ReadDripModeMessageFromFlash</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, infusion.o(i.ReadDripModeMessageFromFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadDripModeMessageFromFlash &rArr; flash_read &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
</UL>

<P><STRONG><a name="[3a8]"></a>ReadParamSettingMessageFromFlash</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, infusion.o(i.ReadParamSettingMessageFromFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadParamSettingMessageFromFlash &rArr; flash_read &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
</UL>

<P><STRONG><a name="[3b2]"></a>ReadSeqModeMessageFromFlash</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, infusion.o(i.ReadSeqModeMessageFromFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadSeqModeMessageFromFlash &rArr; flash_read &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
</UL>

<P><STRONG><a name="[3af]"></a>ReadSpeedModeMessageFromFlash</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, infusion.o(i.ReadSpeedModeMessageFromFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadSpeedModeMessageFromFlash &rArr; flash_read &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
</UL>

<P><STRONG><a name="[3aa]"></a>ReadSystemMaintainMessageFromFlash</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, infusion.o(i.ReadSystemMaintainMessageFromFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadSystemMaintainMessageFromFlash &rArr; flash_read &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
</UL>

<P><STRONG><a name="[3a9]"></a>ReadSystemSettingMessageFromFlash</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, infusion.o(i.ReadSystemSettingMessageFromFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadSystemSettingMessageFromFlash &rArr; flash_read &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
</UL>

<P><STRONG><a name="[3b0]"></a>ReadTimeModeMessageFromFlash</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, infusion.o(i.ReadTimeModeMessageFromFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadTimeModeMessageFromFlash &rArr; flash_read &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
</UL>

<P><STRONG><a name="[3b1]"></a>ReadWeightModeMessageFromFlash</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, infusion.o(i.ReadWeightModeMessageFromFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ReadWeightModeMessageFromFlash &rArr; flash_read &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
</UL>

<P><STRONG><a name="[3c2]"></a>Read_HX712_A</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, hx711.o(i.Read_HX712_A))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Read_HX712_A &rArr; delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_write
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_task_function
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pressure
</UL>

<P><STRONG><a name="[3c5]"></a>Read_HX712_B</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, hx711.o(i.Read_HX712_B))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Read_HX712_B &rArr; delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_write
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_task_function
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pressure
</UL>

<P><STRONG><a name="[323]"></a>Search_Button</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, vp_button.o(i.Search_Button))
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Create
</UL>

<P><STRONG><a name="[3d7]"></a>SetAlarmSoundFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, alarm.o(i.SetAlarmSoundFlag))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[32e]"></a>SetAutoLockTime</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, alarm.o(i.SetAutoLockTime))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDrip
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDoseSpeed
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeSpeed
</UL>

<P><STRONG><a name="[315]"></a>SetDEPLETEFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, alarm.o(i.SetDEPLETEFlag))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BattetyLowAndDepleteAlarm
</UL>

<P><STRONG><a name="[39e]"></a>SetNerDoneFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, alarm.o(i.SetNerDoneFlag))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
</UL>

<P><STRONG><a name="[3dc]"></a>SetNewSoundAFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, alarm.o(i.SetNewSoundAFlag))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[330]"></a>SetNoOperFunctionTimeAlarm</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, alarm.o(i.SetNoOperFunctionTimeAlarm))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDrip
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;purge
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedChange
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;purge
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedChange
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;purge
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeTime
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_callback
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Purge1
</UL>

<P><STRONG><a name="[378]"></a>SetNowcumulant</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, infusion.o(i.SetNowcumulant))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SetNowcumulant &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_EVENT
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_EVENT
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
</UL>

<P><STRONG><a name="[3a0]"></a>SetProgressRunSpeed</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, infusion.o(i.SetProgressRunSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetProgressRunSpeed &rArr; __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
</UL>

<P><STRONG><a name="[3c7]"></a>SoundManage</STRONG> (Thumb, 400 bytes, Stack size 32 bytes, infusion.o(i.SoundManage))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SoundManage &rArr; WT588F_Send_Data &rArr; delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588F_Send_Data
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmMessage
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAlarmLevel
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmLeve12
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, port.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTick_Handler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SystemInit</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, system_at32f403a_407.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(.text)
</UL>
<P><STRONG><a name="[301]"></a>TMC2226_MotorRun</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, motor_manage.o(i.TMC2226_MotorRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TMC2226_MotorRun &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_base_init
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_speed2subdivide
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_speed2force
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_set_subdivide
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_set_force
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Freq_to_Pr_Div
</UL>
<BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detection_motor_start_point_and_update_pressure
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTLrun
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgainstRun
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
</UL>

<P><STRONG><a name="[30b]"></a>TMC2226_MotorStop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, motor_manage.o(i.TMC2226_MotorStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TMC2226_MotorStop &rArr; motor_init &rArr; delay_ms &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detection_motor_start_point_and_update_pressure
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BattetyLowAndDepleteAlarm
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stop
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock1_0_cb
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>

<P><STRONG><a name="[39b]"></a>TMC2226_set_force</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, motor_manage.o(i.TMC2226_set_force))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TMC2226_set_force &rArr; UART_writeInt &rArr; tmc_CRC8
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_writeInt
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorCALIBRRun
</UL>

<P><STRONG><a name="[39a]"></a>TMC2226_set_subdivide</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, motor_manage.o(i.TMC2226_set_subdivide))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TMC2226_set_subdivide &rArr; UART_writeInt &rArr; tmc_CRC8
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_writeInt
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorCALIBRRun
</UL>

<P><STRONG><a name="[37c]"></a>TMC2226_speed2force</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, motor_manage.o(i.TMC2226_speed2force))
<BR><BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[3cc]"></a>TMC2226_speed2subdivide</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, motor_manage.o(i.TMC2226_speed2subdivide))
<BR><BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
</UL>

<P><STRONG><a name="[24]"></a>TMR1_OVF_TMR10_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ultrasonic.o(i.TMR1_OVF_TMR10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR1_OVF_TMR10_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_interrupt_enable
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_interrupt_enable
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_flag_get
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_flag_clear
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TMR2_GLOBAL_IRQHandler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, ultrasonic.o(i.TMR2_GLOBAL_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR2_GLOBAL_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_interrupt_enable
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_interrupt_enable
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_flag_get
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_flag_clear
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, motor_manage.o(i.TMR3_GLOBAL_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TMR3_GLOBAL_IRQHandler &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_flag_get
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_flag_clear
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TMR4_GLOBAL_IRQHandler</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, battery_manage.o(i.TMR4_GLOBAL_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR4_GLOBAL_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_flag_get
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TMR5_GLOBAL_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ui.o(i.TMR5_GLOBAL_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR5_GLOBAL_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tick_inc
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_flag_get
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TMR6_GLOBAL_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ultrasonic.o(i.TMR6_GLOBAL_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR6_GLOBAL_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_interrupt_enable
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_flag_get
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_flag_clear
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[390]"></a>TubeFallTimeCountDown</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, infusion.o(i.TubeFallTimeCountDown))
<BR><BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedInfusionTubeFallOff_P
</UL>

<P><STRONG><a name="[3f]"></a>UART4_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, at32f403a_407_board.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[3cf]"></a>UART_writeInt</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, motor_manage.o(i.UART_writeInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_writeInt &rArr; tmc_CRC8
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmc_CRC8
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_set_subdivide
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_set_force
</UL>

<P><STRONG><a name="[1f]"></a>USBFS_L_CAN1_RX0_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_usb.o(i.USBFS_L_CAN1_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = USBFS_L_CAN1_RX0_IRQHandler &rArr; usbd_irq_handler &rArr; usbd_ept_loop_handler &rArr; usbd_eptn_handler &rArr; usbd_core_setup_handler &rArr; usbd_device_request &rArr; usbd_set_configuration &rArr; usbd_ctrl_send_status &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f403a_407.o(RESET)
</UL>
<P><STRONG><a name="[3d5]"></a>UnLock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, alarm.o(i.UnLock))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>

<P><STRONG><a name="[392]"></a>UpBlockTimeCountDown</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, infusion.o(i.UpBlockTimeCountDown))
<BR><BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedInfusionUpBlock
</UL>

<P><STRONG><a name="[36f]"></a>UpdateDripModeTheDisplay</STRONG> (Thumb, 312 bytes, Stack size 64 bytes, infusion.o(i.UpdateDripModeTheDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = UpdateDripModeTheDisplay &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[370]"></a>UpdateSpeedModeTheDisplay</STRONG> (Thumb, 318 bytes, Stack size 72 bytes, infusion.o(i.UpdateSpeedModeTheDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = UpdateSpeedModeTheDisplay &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[374]"></a>UpdateTimeModeTheDisplay</STRONG> (Thumb, 1324 bytes, Stack size 104 bytes, infusion.o(i.UpdateTimeModeTheDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = UpdateTimeModeTheDisplay &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[376]"></a>UpdateWeightModeTheDisplay</STRONG> (Thumb, 2104 bytes, Stack size 88 bytes, infusion.o(i.UpdateWeightModeTheDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = UpdateWeightModeTheDisplay &rArr; DOSEUintComeToConversion &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MedicineUintComeToConversion
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DOSEUintComeToConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[3c9]"></a>WT588F_Send_Data</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, audio_manage.o(i.WT588F_Send_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = WT588F_Send_Data &rArr; delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundManage
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[2fe]"></a>WriteAddDrugListToFlash</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, infusion.o(i.WriteAddDrugListToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = WriteAddDrugListToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getThefirstDrugNode
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowDrugListNum
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDrugNode
</UL>

<P><STRONG><a name="[379]"></a>WriteDripModeMessageToFlash</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, infusion.o(i.WriteDripModeMessageToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = WriteDripModeMessageToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[3f6]"></a>WriteDrugListToFlash</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, infusion.o(i.WriteDrugListToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = WriteDrugListToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getThefirstDrugNode
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_infusion_and_drug_to_flash
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addDrugNode
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeDrugNodeById
</UL>

<P><STRONG><a name="[2fd]"></a>WriteParamSettingMessageToFlash</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, infusion.o(i.WriteParamSettingMessageToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = WriteParamSettingMessageToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_infusion_and_drug_to_flash
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addInfusionNode
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addDrugNode
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureLevelChange
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDrugNode
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddInfusionNode
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeInfusionNodeByName
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeDrugNodeById
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[3a7]"></a>WriteSeqModeMessageToFlash</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, infusion.o(i.WriteSeqModeMessageToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = WriteSeqModeMessageToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
</UL>

<P><STRONG><a name="[37a]"></a>WriteSpeedModeMessageToFlash</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, infusion.o(i.WriteSpeedModeMessageToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = WriteSpeedModeMessageToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[32c]"></a>WriteSystemMaintainMessageToFlash</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, infusion.o(i.WriteSystemMaintainMessageToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = WriteSystemMaintainMessageToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect5_0_cb
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect4_0_cb
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeAlarm
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[33f]"></a>WriteSystemSettingMessageToFlash</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, infusion.o(i.WriteSystemSettingMessageToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = WriteSystemSettingMessageToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn4_0_cb
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn3_0_cb
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[37b]"></a>WriteTimeModeMessageToFlash</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, infusion.o(i.WriteTimeModeMessageToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = WriteTimeModeMessageToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[377]"></a>WriteWeightModeMessageToFlash</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, infusion.o(i.WriteWeightModeMessageToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = WriteWeightModeMessageToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
</UL>

<P><STRONG><a name="[3f9]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7de]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[364]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_push_scr_only_st
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_scr_by_id
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_right_to_left_handler
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_get_radius_mask
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_png_open
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_hal_fp_init
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_create
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_convertor_string_width
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_create
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_add_pool
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getVoltageADCValue
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeInfusionTubeListToFlash
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDrugListToFlash
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_infusion_and_drug_to_flash
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createDrugLib
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDrugListFromFlash
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock1_0_cb
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineDrugNode_four_ById
</UL>

<P><STRONG><a name="[7df]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[7e0]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[3fb]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7e1]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[303]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_time_str
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_label_value
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrandUp
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrandDown
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneSecond
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneMin
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect9_0_cb
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect8_0_cb
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect7_0_cb
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect6_0_cb
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect5_0_cb
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect10_0_cb
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;history_info_langue
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureLevelChange
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoOperateTime_state
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NearFinishTime_state
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoLockTime_state
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFormat
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn4_0_cb
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn3_0_cb
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect5_0_cb
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect4_0_cb
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeAlarm
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ThirmSec
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ThirmSec
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brandaffirm
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drugaffirm
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
</UL>

<P><STRONG><a name="[7e2]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[7e3]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[3fc]"></a>__0vsnprintf</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7e4]"></a>__1vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[7e5]"></a>__2vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[7e6]"></a>__c89vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[617]"></a>vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_text
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_value
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_text
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_print
</UL>

<P><STRONG><a name="[2cc]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[7e7]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[339]"></a>__hardfp_atof</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, atof.o(i.__hardfp_atof))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[3fd]"></a>__read_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__read_errno))
<BR><BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[7e8]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[7e9]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[7ea]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[3fe]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[bf]"></a>_dialog2_init</STRONG> (Thumb, 510 bytes, Stack size 32 bytes, activity_deletebrand.o(i._dialog2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = _dialog2_init &rArr; gt_dialog_create &rArr; _create_close_btn &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_show
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_border_width
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_border_radius
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_border_color
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_bgcolor
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_deletebrand.o(i.gt_init_DeleteBrand)
</UL>
<P><STRONG><a name="[de]"></a>_dialog3_init</STRONG> (Thumb, 510 bytes, Stack size 32 bytes, activity_drugdelete.o(i._dialog3_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = _dialog3_init &rArr; gt_dialog_create &rArr; _create_close_btn &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_show
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_border_width
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_border_radius
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_border_color
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_bgcolor
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_drugdelete.o(i.gt_init_DrugDelete)
</UL>
<P><STRONG><a name="[224]"></a>_flush_cb</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, main.o(i._flush_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _flush_cb &rArr; bsp_lcd_set_block
</UL>
<BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_write_2_data
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_set_block
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_port_disp.o(i.gt_port_disp_init)
</UL>
<P><STRONG><a name="[4b2]"></a>_gt_anim_core_init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gt_anim.o(i._gt_anim_core_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _gt_anim_core_init &rArr; _gt_timer_create &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_change_list
</UL>
<BR>[Called By]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init
</UL>

<P><STRONG><a name="[4be]"></a>_gt_disp_hided_layer_top_widgets</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gt_hal_disp.o(i._gt_disp_hided_layer_top_widgets))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _gt_disp_hided_layer_top_widgets &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_visible
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_search_active_obj_from_all_layers
</UL>

<P><STRONG><a name="[4bf]"></a>_gt_disp_refr_append_area</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, gt_hal_disp.o(i._gt_disp_refr_append_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_copy
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_join
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_is_on
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_disp
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_area_push
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_area_get_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_scroll_area_act
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_size_change
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_pos_change
</UL>

<P><STRONG><a name="[4c6]"></a>_gt_disp_refr_area_pop</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gt_hal_disp.o(i._gt_disp_refr_area_pop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _gt_disp_refr_area_pop
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_area_get_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_get_area
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_refr_timer
</UL>

<P><STRONG><a name="[4c5]"></a>_gt_disp_refr_area_push</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gt_hal_disp.o(i._gt_disp_refr_area_push))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _gt_disp_refr_area_push
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_area_get_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_append_area
</UL>

<P><STRONG><a name="[6dd]"></a>_gt_disp_refr_check</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gt_hal_disp.o(i._gt_disp_refr_check))
<BR><BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_refr_timer
</UL>

<P><STRONG><a name="[4c7]"></a>_gt_disp_refr_get_area</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gt_hal_disp.o(i._gt_disp_refr_get_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _gt_disp_refr_get_area &rArr; _gt_disp_refr_area_pop
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_area_pop
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_area_get_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_refr_timer
</UL>

<P><STRONG><a name="[4c8]"></a>_gt_disp_refr_reset_areas</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gt_hal_disp.o(i._gt_disp_refr_reset_areas))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _gt_disp_refr_reset_areas &rArr; gt_memset &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_disp
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_scroll_area_act
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
</UL>

<P><STRONG><a name="[4c9]"></a>_gt_disp_reload_max_area</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gt_hal_disp.o(i._gt_disp_reload_max_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _gt_disp_reload_max_area &rArr; _calc_max_area_recursive &rArr;  _calc_max_area_recursive (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_ver
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_hor
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_disp
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calc_max_area_recursive
</UL>
<BR>[Called By]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scr_anim_ready_cb
</UL>

<P><STRONG><a name="[422]"></a>_gt_disp_update_max_area</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, gt_hal_disp.o(i._gt_disp_update_max_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _gt_disp_update_max_area
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_disp
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_area
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_layer_top_widget_area
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calc_max_area_recursive
</UL>

<P><STRONG><a name="[4ce]"></a>_gt_extra_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gt_extra.o(i._gt_extra_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _gt_extra_init &rArr; gt_sjpg_init &rArr; gt_img_decoder_create &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_sjpg_init
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_png_init
</UL>
<BR>[Called By]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init
</UL>

<P><STRONG><a name="[5be]"></a>_gt_font_get_type_group_offset_y</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gt_font.o(i._gt_font_get_type_group_offset_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _gt_font_get_type_group_offset_y
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
</UL>

<P><STRONG><a name="[5c2]"></a>_gt_font_is_convertor_language</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gt_font.o(i._gt_font_is_convertor_language))
<BR><BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_split
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
</UL>

<P><STRONG><a name="[4d4]"></a>_gt_gb_font_one_char_code_len_get</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, gt_font.o(i._gt_gb_font_one_char_code_len_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _gt_gb_font_one_char_code_len_get
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_one_char_code_len_get
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_gb_check_char
</UL>

<P><STRONG><a name="[4c0]"></a>_gt_gc_get_disp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gt_gc.o(i._gt_gc_get_disp))
<BR><BR>[Called By]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_ver
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_hor
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_reload_max_area
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_reset_areas
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_append_area
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_drv_register
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_update_max_area
</UL>

<P><STRONG><a name="[6de]"></a>_gt_gc_get_scr_info</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_gc.o(i._gt_gc_get_scr_info))
<BR><BR>[Called By]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_set_home_scr
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_push
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_pop
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_peek
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_is_home_scr_alive
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_is_empty
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_has_before
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_init_func
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_home_scr_id
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_home_scr
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_clear
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_get_now_scr_id
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_set_home_scr_id
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_set_depth
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_register_id_list
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_prev_scr
</UL>

<P><STRONG><a name="[4ba]"></a>_gt_gc_set_disp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gt_gc.o(i._gt_gc_set_disp))
<BR><BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_create
</UL>

<P><STRONG><a name="[4d8]"></a>_gt_hal_fp_init</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gt_hal_fs.o(i._gt_hal_fp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _gt_hal_fp_init &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset_0
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_open_cb
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_open_cb
</UL>

<P><STRONG><a name="[4da]"></a>_gt_img_decoder_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gt_img_decoder.o(i._gt_img_decoder_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _gt_img_decoder_init &rArr; gt_img_decoder_create &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_register
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_create
</UL>
<BR>[Called By]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init
</UL>

<P><STRONG><a name="[4e5]"></a>_gt_indev_remove_want_delate_target</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, gt_indev.o(i._gt_indev_remove_want_delate_target))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _gt_indev_remove_want_delate_target
</UL>
<BR>[Calls]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_get_dev_count
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_get_dev_by_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy_self
</UL>

<P><STRONG><a name="[4a6]"></a>_gt_is_style_cn_or_en</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, gt_font.o(i._gt_is_style_cn_or_en))
<BR><BR>[Called By]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_dot
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_font_language_split
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_font_lang_and_punctuation_split
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_font_style
</UL>

<P><STRONG><a name="[49c]"></a>_gt_obj_class_destroy</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gt_obj_class.o(i._gt_obj_class_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _gt_obj_class_destroy &rArr; _gt_obj_class_destroy_screen &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy_self
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy_screen
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy_from_parent
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_destroy_and_free_children
</UL>
<BR>[Called By]<UL><LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_pop
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scr_anim_ready_cb
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scr_anim_del_ready_cb
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_alive_scr_object_cb
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_destroy_handler_cb
</UL>

<P><STRONG><a name="[4ef]"></a>_gt_obj_class_inherent_attr_from_parent</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gt_obj_class.o(i._gt_obj_class_inherent_attr_from_parent))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = _gt_obj_class_inherent_attr_from_parent &rArr; gt_obj_child_set_prop &rArr;  gt_obj_child_set_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_overflow
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
</UL>

<P><STRONG><a name="[21c]"></a>_gt_obj_destroy_handler_cb</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, gt_obj.o(i._gt_obj_destroy_handler_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _gt_obj_destroy_handler_cb &rArr; _gt_obj_class_destroy &rArr; _gt_obj_class_destroy_screen &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_set_user_data
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_set_repeat_count
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_get_user_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_obj.o(i.gt_obj_destroy)
</UL>
<P><STRONG><a name="[4f3]"></a>_gt_obj_focus_clicked</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, gt_obj_pos.o(i._gt_obj_focus_clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 20 + In Cycle
<LI>Call Chain = _gt_obj_focus_clicked &rArr;  _gt_obj_focus_clicked (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_focus_clicked
</UL>
<BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_focus_clicked
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_find_clicked_obj_by_focus
</UL>

<P><STRONG><a name="[421]"></a>_gt_obj_is_ignore_calc_max_area</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gt_style.o(i._gt_obj_is_ignore_calc_max_area))
<BR><BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_area
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_layer_top_widget_area
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calc_max_area_recursive
</UL>

<P><STRONG><a name="[4f6]"></a>_gt_obj_move_child_by</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, gt_style.o(i._gt_obj_move_child_by))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = _gt_obj_move_child_by &rArr;  _gt_obj_move_child_by (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_move_child_by
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_move_child_by
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_layer_top_widget_area
</UL>

<P><STRONG><a name="[50c]"></a>_gt_obj_set_process_point</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gt_obj_scroll.o(i._gt_obj_set_process_point))
<BR><BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_pressed_handle
</UL>

<P><STRONG><a name="[53f]"></a>_gt_obj_set_process_scroll_xy</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_obj_scroll.o(i._gt_obj_set_process_scroll_xy))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scroll_by_y
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scroll_by_x
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to
</UL>

<P><STRONG><a name="[660]"></a>_gt_timer_core_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_timer.o(i._gt_timer_core_init))
<BR><BR>[Called By]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init
</UL>

<P><STRONG><a name="[3a1]"></a>_gt_timer_create</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, gt_timer.o(i._gt_timer_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _gt_timer_create &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tick_get
</UL>
<BR>[Called By]<UL><LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_drv_register
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_drv_register
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_core_init
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_start
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_destroy
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PowerOff
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
</UL>

<P><STRONG><a name="[39f]"></a>_gt_timer_del</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gt_timer.o(i._gt_timer_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _gt_timer_del &rArr; _gt_timer_set_paused
</UL>
<BR>[Calls]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_set_repeat_count
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_set_paused
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deinit_cb
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stop
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
</UL>

<P><STRONG><a name="[4b7]"></a>_gt_timer_get_user_data</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_timer.o(i._gt_timer_get_user_data))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_clock_timer_cb
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_destroy_handler_cb
</UL>

<P><STRONG><a name="[503]"></a>_gt_timer_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_timer.o(i._gt_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _gt_timer_handler &rArr; _gt_timer_for_each_exec &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_for_each_exec
</UL>
<BR>[Called By]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_task_handler
</UL>

<P><STRONG><a name="[4b1]"></a>_gt_timer_set_paused</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gt_timer.o(i._gt_timer_set_paused))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _gt_timer_set_paused
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tick_get
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_change_list
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_start
</UL>

<P><STRONG><a name="[4f1]"></a>_gt_timer_set_repeat_count</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_timer.o(i._gt_timer_set_repeat_count))
<BR><BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_destroy
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_destroy_handler_cb
</UL>

<P><STRONG><a name="[4f2]"></a>_gt_timer_set_user_data</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_timer.o(i._gt_timer_set_user_data))
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_destroy_handler_cb
</UL>

<P><STRONG><a name="[654]"></a>_gt_utf8_to_unicode</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, gt_font.o(i._gt_utf8_to_unicode))
<BR><BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_one_char_code_len_get
</UL>

<P><STRONG><a name="[508]"></a>_gt_vector_add_equal_item_cb</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gt_vector.o(i._gt_vector_add_equal_item_cb))
<BR><BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_create
</UL>

<P><STRONG><a name="[507]"></a>_gt_vector_add_free_item_cb</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gt_vector.o(i._gt_vector_add_free_item_cb))
<BR><BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_create
</UL>

<P><STRONG><a name="[504]"></a>_gt_vector_add_item</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gt_vector.o(i._gt_vector_add_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _gt_vector_add_item &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
</UL>

<P><STRONG><a name="[505]"></a>_gt_vector_clear_all_items</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gt_vector.o(i._gt_vector_clear_all_items))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _gt_vector_clear_all_items &rArr; _free_item_obj &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_item_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_free
</UL>

<P><STRONG><a name="[506]"></a>_gt_vector_create</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gt_vector.o(i._gt_vector_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _gt_vector_create &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_add_free_item_cb
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_add_equal_item_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
</UL>

<P><STRONG><a name="[40e]"></a>_gt_vector_free</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gt_vector.o(i._gt_vector_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _gt_vector_free &rArr; _gt_vector_clear_all_items &rArr; _free_item_obj &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_clear_all_items
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_deinit_cb
</UL>

<P><STRONG><a name="[618]"></a>_gt_vector_get_count</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_vector.o(i._gt_vector_get_count))
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
</UL>

<P><STRONG><a name="[415]"></a>_gt_vector_get_index</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gt_vector.o(i._gt_vector_get_index))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_init_cb
</UL>

<P><STRONG><a name="[416]"></a>_gt_vector_get_item</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gt_vector.o(i._gt_vector_get_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _gt_vector_get_item
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_init_cb
</UL>

<P><STRONG><a name="[619]"></a>_gt_vector_replace_item</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gt_vector.o(i._gt_vector_replace_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _gt_vector_replace_item
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
</UL>

<P><STRONG><a name="[413]"></a>_gt_vector_turn_next</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, gt_vector.o(i._gt_vector_turn_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _gt_vector_turn_next
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_event_cb
</UL>

<P><STRONG><a name="[2e9]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scanf_fp.o(i._is_digit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[42e]"></a>_mem_free</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gt_mem.o(i._mem_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_event_recursive
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_right_to_left_handler
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radius_mask_deinit
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_get_radius_mask
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_filling_by_sjpg_file
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_filling_by_default_line_mode
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_destroy
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_create
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_for_each_exec
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_png_open
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_png_close
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_png_open
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sjpg_free
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_open
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_info
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_close_cb
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_close_cb
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_convertor_string_width
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_free_task
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deinit_cb
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_contents_free_cb
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_free
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_clear_all_items
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_item_obj
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deinit_cb
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deinit_cb
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_remove_all_next_day_cb
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_remove_all_alert_cb
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deinit_cb
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_auto_scroll_st
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deinit_cb
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_del_value
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy_self
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_destroy_and_free_children
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deinit_cb
</UL>

<P><STRONG><a name="[401]"></a>_mem_malloc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gt_mem.o(i._mem_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_start
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_vf_init
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_src_init
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_drv_register
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_right_to_left_handler
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_get_radius_mask
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_filling_by_sjpg_file
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_filling_by_default_line_mode
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_create
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_create
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_png_open
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_sjpg_st
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_open
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_info
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_hal_fp_init
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_create
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_convertor_string_width
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_realloc
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_text
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_create
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_create
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_add_item
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_format
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_alert_cb
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_time_str
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_value
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_placeholder
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_append_value
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_new_screen_obj
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_add_obj_to_parent
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_text
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_create
</UL>

<P><STRONG><a name="[400]"></a>_mem_realloc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_mem.o(i._mem_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_realloc
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_ins
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_string_del
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_text
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_format
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_alert_cb
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_value
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_placeholder
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy_screen
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy_from_parent
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_new_screen_obj
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_add_obj_to_parent
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_text
</UL>

<P><STRONG><a name="[21f]"></a>_scroll_ready_cb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gt_obj_scroll.o(i._scroll_ready_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _scroll_ready_cb &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_obj_scroll.o(i.gt_obj_scroll_to)
</UL>
<P><STRONG><a name="[604]"></a>adc_base_config</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, at32f403a_407_adc.o(i.adc_base_config))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[603]"></a>adc_base_default_para_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at32f403a_407_adc.o(i.adc_base_default_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[609]"></a>adc_calibration_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_adc.o(i.adc_calibration_init))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[60a]"></a>adc_calibration_init_status_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at32f403a_407_adc.o(i.adc_calibration_init_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[60b]"></a>adc_calibration_start</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_adc.o(i.adc_calibration_start))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[60c]"></a>adc_calibration_status_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at32f403a_407_adc.o(i.adc_calibration_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[602]"></a>adc_combine_mode_select</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_adc.o(i.adc_combine_mode_select))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[607]"></a>adc_dma_mode_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_adc.o(i.adc_dma_mode_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[608]"></a>adc_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_adc.o(i.adc_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[605]"></a>adc_ordinary_channel_set</STRONG> (Thumb, 334 bytes, Stack size 8 bytes, at32f403a_407_adc.o(i.adc_ordinary_channel_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_ordinary_channel_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[5eb]"></a>adc_ordinary_conversion_data_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f403a_407_adc.o(i.adc_ordinary_conversion_data_get))
<BR><BR>[Called By]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getVoltageADCValue
</UL>

<P><STRONG><a name="[606]"></a>adc_ordinary_conversion_trigger_set</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, at32f403a_407_adc.o(i.adc_ordinary_conversion_trigger_set))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[60d]"></a>adc_ordinary_software_trigger_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_adc.o(i.adc_ordinary_software_trigger_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[2f6]"></a>addAlarmFlag</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, alarm.o(i.addAlarmFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = addAlarmFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddNewSoundAFlag
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddLockNewAFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
</UL>

<P><STRONG><a name="[55c]"></a>addDrugNode</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, library_drug.o(i.addDrugNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = addDrugNode &rArr; WriteDrugListToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDrugListToFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createDrugLib
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDrugListFromFlash
</UL>

<P><STRONG><a name="[55d]"></a>addInfusionNode</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, library_infusion.o(i.addInfusionNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = addInfusionNode &rArr; writeInfusionTubeListToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeInfusionTubeListToFlash
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createInfusionLib
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readInfusionTubeListFromFlash
</UL>

<P><STRONG><a name="[8f]"></a>at32_down_button_state</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, vp_button.o(i.at32_down_button_state))
<BR><BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.fast_task_function)
</UL>
<P><STRONG><a name="[91]"></a>at32_power_button_state</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, vp_button.o(i.at32_power_button_state))
<BR><BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.fast_task_function)
</UL>
<P><STRONG><a name="[8b]"></a>at32_up_button_state</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, vp_button.o(i.at32_up_button_state))
<BR><BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.fast_task_function)
</UL>
<P><STRONG><a name="[562]"></a>audio_gpio_init</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, audio_manage.o(i.audio_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = audio_gpio_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_write
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[563]"></a>beep_init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, audio_manage.o(i.beep_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = beep_init &rArr; tmr12_init &rArr; tmr_output_channel_config
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr12_init
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_weak_up_process
</UL>

<P><STRONG><a name="[763]"></a>bpr_data_read</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_bpr.o(i.bpr_data_read))
<BR><BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[765]"></a>bpr_data_write</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_bpr.o(i.bpr_data_write))
<BR><BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[5f6]"></a>bpr_interrupt_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_bpr.o(i.bpr_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[343]"></a>bpr_reset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, at32f403a_407_bpr.o(i.bpr_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bpr_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_battery_powered_domain_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config_
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
</UL>

<P><STRONG><a name="[5f5]"></a>bpr_tamper_pin_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_bpr.o(i.bpr_tamper_pin_enable))
<BR><BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[553]"></a>bsp_lcd_clear</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, bsp_lcd_xmc.o(i.bsp_lcd_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_lcd_clear &rArr; bsp_lcd_set_block
</UL>
<BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_write_2_data
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_set_block
</UL>
<BR>[Called By]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt2046_touch_calibrate
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_xmc_init
</UL>

<P><STRONG><a name="[554]"></a>bsp_lcd_draw_line</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, bsp_lcd_xmc.o(i.bsp_lcd_draw_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = bsp_lcd_draw_line &rArr; bsp_lcd_draw_point &rArr; bsp_lcd_set_block
</UL>
<BR>[Calls]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_draw_point
</UL>
<BR>[Called By]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt2046_touch_calibrate
</UL>

<P><STRONG><a name="[576]"></a>bsp_lcd_draw_point</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_lcd_xmc.o(i.bsp_lcd_draw_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = bsp_lcd_draw_point &rArr; bsp_lcd_set_block
</UL>
<BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_write_2_data
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_set_block
</UL>
<BR>[Called By]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_draw_line
</UL>

<P><STRONG><a name="[495]"></a>bsp_lcd_set_block</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, bsp_lcd_xmc.o(i.bsp_lcd_set_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bsp_lcd_set_block
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_cb
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_draw_point
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_clear
</UL>

<P><STRONG><a name="[496]"></a>bsp_lcd_write_2_data</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_lcd_xmc.o(i.bsp_lcd_write_2_data))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_cb
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_draw_point
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_clear
</UL>

<P><STRONG><a name="[577]"></a>bsp_lcd_xmc_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_lcd_xmc.o(i.bsp_lcd_xmc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bsp_lcd_xmc_init &rArr; _xmc_init &rArr; tmr13_init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_clear
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xmc_init
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lcd_init
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_task_function
</UL>

<P><STRONG><a name="[578]"></a>bsp_xpt2046_calibrate_or_get_touch_para_with_flash</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, bsp_xpt2046.o(i.bsp_xpt2046_calibrate_or_get_touch_para_with_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = bsp_xpt2046_calibrate_or_get_touch_para_with_flash &rArr; _xpt2046_touch_calibrate &rArr; _xpt_read_adc_smooth_xy &rArr; _xpt_read_adc &rArr; delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_lock
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_flag_clear
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_byte_program
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt2046_touch_calibrate
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_xpt2046_init
</UL>

<P><STRONG><a name="[57e]"></a>bsp_xpt2046_init</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, bsp_xpt2046.o(i.bsp_xpt2046_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = bsp_xpt2046_init &rArr; bsp_xpt2046_calibrate_or_get_touch_para_with_flash &rArr; _xpt2046_touch_calibrate &rArr; _xpt_read_adc_smooth_xy &rArr; _xpt_read_adc &rArr; delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_xpt2046_calibrate_or_get_touch_para_with_flash
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_pin_set
</UL>
<BR>[Called By]<UL><LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init
</UL>

<P><STRONG><a name="[3ed]"></a>calpressureADandValue</STRONG> (Thumb, 858 bytes, Stack size 72 bytes, infusion.o(i.calpressureADandValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = calpressureADandValue &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infusion_apparatus_detection
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ThirmSec
</UL>

<P><STRONG><a name="[3a6]"></a>createDrugLib</STRONG> (Thumb, 5598 bytes, Stack size 416 bytes, library_drug.o(i.createDrugLib))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = createDrugLib &rArr; addDrugNode &rArr; WriteDrugListToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDrugList
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addDrugNode
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
</UL>

<P><STRONG><a name="[3a5]"></a>createInfusionLib</STRONG> (Thumb, 356 bytes, Stack size 304 bytes, library_infusion.o(i.createInfusionLib))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = createInfusionLib &rArr; addInfusionNode &rArr; writeInfusionTubeListToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initInfusionList
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addInfusionNode
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
</UL>

<P><STRONG><a name="[589]"></a>create_headevent</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, headbar_view.o(i.create_headevent))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = create_headevent &rArr; gt_obj_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_register_id
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
</UL>

<P><STRONG><a name="[601]"></a>crm_adc_clock_div_set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f403a_407_crm.o(i.crm_adc_clock_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[78b]"></a>crm_ahb_div_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_crm.o(i.crm_ahb_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[78d]"></a>crm_apb1_div_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_crm.o(i.crm_apb1_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[78c]"></a>crm_apb2_div_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_crm.o(i.crm_apb2_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[78e]"></a>crm_auto_step_mode_enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f403a_407_crm.o(i.crm_auto_step_mode_enable))
<BR><BR>[Called By]<UL><LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[575]"></a>crm_battery_powered_domain_reset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_crm.o(i.crm_battery_powered_domain_reset))
<BR><BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bpr_reset
</UL>

<P><STRONG><a name="[75c]"></a>crm_clock_source_enable</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, at32f403a_407_crm.o(i.crm_clock_source_enable))
<BR><BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config_
</UL>

<P><STRONG><a name="[37e]"></a>crm_clocks_freq_get</STRONG> (Thumb, 196 bytes, Stack size 12 bytes, at32f403a_407_crm.o(i.crm_clocks_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = crm_clocks_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Freq_to_Pr_Div
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr5_init
</UL>

<P><STRONG><a name="[75d]"></a>crm_flag_get</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at32f403a_407_crm.o(i.crm_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config_
</UL>

<P><STRONG><a name="[342]"></a>crm_periph_clock_enable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, at32f403a_407_crm.o(i.crm_periph_clock_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_xpt2046_init
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_init
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xmc_init
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_config
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_hardware_connect_init
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr4_init
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_HX711_init
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_button_exint_init
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_gpio_init
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_init
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_switch_init
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_control
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_init
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_gpio_init
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tmr_init
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_UltraSonic_init
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_usart_init
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_tmr_init
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_gpio_init
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr5_init
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consumption
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vtaskmanage
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_set
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
</UL>

<P><STRONG><a name="[78a]"></a>crm_pll_config</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, at32f403a_407_crm.o(i.crm_pll_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_pll_config
</UL>
<BR>[Called By]<UL><LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[789]"></a>crm_reset</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, at32f403a_407_crm.o(i.crm_reset))
<BR><BR>[Called By]<UL><LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[75f]"></a>crm_rtc_clock_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_crm.o(i.crm_rtc_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config_
</UL>

<P><STRONG><a name="[75e]"></a>crm_rtc_clock_select</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_crm.o(i.crm_rtc_clock_select))
<BR><BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config_
</UL>

<P><STRONG><a name="[78f]"></a>crm_sysclk_switch</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_crm.o(i.crm_sysclk_switch))
<BR><BR>[Called By]<UL><LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[58e]"></a>crm_sysclk_switch_status_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_crm.o(i.crm_sysclk_switch_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[5aa]"></a>delay_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, at32f403a_407_board.o(i.delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_clock_source_config
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[3ca]"></a>delay_ms</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, at32f403a_407_board.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = delay_ms &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt2046_touch_calibrate
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lcd_init
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588F_Send_Data
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_task_function
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundManage
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BootUp
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>

<P><STRONG><a name="[3c4]"></a>delay_us</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, at32f403a_407_board.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_read_adc_smooth_xy
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_read_adc
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_HX712_B
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_HX712_A
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588F_Send_Data
</UL>

<P><STRONG><a name="[581]"></a>destroyHistoryList</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, library_history.o(i.destroyHistoryList))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = destroyHistoryList &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
</UL>

<P><STRONG><a name="[5af]"></a>detection_motor_start_point_and_update_pressure</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, infusion.o(i.detection_motor_start_point_and_update_pressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = detection_motor_start_point_and_update_pressure &rArr; update_pressure &rArr; Read_HX712_B &rArr; delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_optocoupler_signal
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pressure
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_task_function
</UL>

<P><STRONG><a name="[2fa]"></a>dialog1_create</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, dialog1.o(i.dialog1_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = dialog1_create &rArr; gt_dialog_create_issue &rArr; gt_dialog_create &rArr; _create_close_btn &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_show
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_outside_auto_hide
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_content_font_size
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_content_font_family_fl
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_content_font_family_en
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_content_font_family_cn
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_border_width
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_border_radius
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_border_color
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_bgcolor
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_anim_time
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDrug
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDrug
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelBrand
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddBrand
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
</UL>

<P><STRONG><a name="[600]"></a>dma_channel_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_dma.o(i.dma_channel_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[5fd]"></a>dma_default_para_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f403a_407_dma.o(i.dma_default_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[35e]"></a>dma_flag_clear</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f403a_407_dma.o(i.dma_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[35d]"></a>dma_flag_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f403a_407_dma.o(i.dma_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[5fe]"></a>dma_init</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, at32f403a_407_dma.o(i.dma_init))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[5ff]"></a>dma_interrupt_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f403a_407_dma.o(i.dma_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[5fc]"></a>dma_reset</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, at32f403a_407_dma.o(i.dma_reset))
<BR><BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[41b]"></a>draw_bg</STRONG> (Thumb, 1270 bytes, Stack size 168 bytes, gt_draw.o(i.draw_bg))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = draw_bg &rArr; _gt_radius_mask_init &rArr; _gt_get_radius_mask &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_is_intersect_screen
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_copy
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radius_mask_init
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radius_mask_deinit
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_get_radius_mask_buf
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_focus
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_init_cb
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_init_widget
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_cursor_anim
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radio_init_widget
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
</UL>

<P><STRONG><a name="[51b]"></a>draw_bg_img</STRONG> (Thumb, 186 bytes, Stack size 96 bytes, gt_draw.o(i.draw_bg_img))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = draw_bg_img &rArr; _filling_by_default_line_mode &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_open
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_close
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_update_max_area
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_filling_by_sjpg_file
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_filling_by_ram_data
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_filling_by_default_line_mode
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
</UL>

<P><STRONG><a name="[41d]"></a>draw_focus</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, gt_draw.o(i.draw_focus))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = draw_focus &rArr; draw_bg &rArr; _gt_radius_mask_init &rArr; _gt_get_radius_mask &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_graph_init_rect_attr
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_focus
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_init_cb
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_init_widget
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radio_init_widget
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
</UL>

<P><STRONG><a name="[41c]"></a>draw_text</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gt_draw.o(i.draw_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = draw_text &rArr; draw_text_single_line &rArr; _draw_text_convertor_split &rArr; _draw_blend_underline &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_init_cb
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_init_widget
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radio_init_widget
</UL>

<P><STRONG><a name="[5f7]"></a>exint_default_para_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at32f403a_407_exint.o(i.exint_default_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_button_exint_init
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_rx_receiver_init
</UL>

<P><STRONG><a name="[36c]"></a>exint_flag_clear</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f403a_407_exint.o(i.exint_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT3_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
</UL>

<P><STRONG><a name="[36b]"></a>exint_flag_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f403a_407_exint.o(i.exint_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT3_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT15_10_IRQHandler
</UL>

<P><STRONG><a name="[5f8]"></a>exint_init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, at32f403a_407_exint.o(i.exint_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = exint_init
</UL>
<BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_button_exint_init
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_rx_receiver_init
</UL>

<P><STRONG><a name="[3d2]"></a>exint_interrupt_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f403a_407_exint.o(i.exint_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_rx_receiver_init
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_GLOBAL_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_OVF_TMR10_IRQHandler
</UL>

<P><STRONG><a name="[246]"></a>fast_task_function</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, main.o(i.fast_task_function))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = fast_task_function &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Process
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Create
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Attach
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.weak_up)
</UL>
<P><STRONG><a name="[332]"></a>fineDrugNodeByPosit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, library_drug.o(i.fineDrugNodeByPosit))
<BR><BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drugaffirm
</UL>

<P><STRONG><a name="[367]"></a>fineDrugNode_four_ById</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, library_drug.o(i.fineDrugNode_four_ById))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fineDrugNode_four_ById &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrugNodelangue
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drugaffirm
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
</UL>

<P><STRONG><a name="[31d]"></a>fineInfusionNodeByPosit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, library_infusion.o(i.fineInfusionNodeByPosit))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brandaffirm
</UL>

<P><STRONG><a name="[31b]"></a>fineInfusionNode_six_ById</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, library_infusion.o(i.fineInfusionNode_six_ById))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fineInfusionNode_six_ById
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfusionNodelangue
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrandUp
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrandDown
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brandaffirm
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
</UL>

<P><STRONG><a name="[5d7]"></a>flash_bank1_operation_status_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, at32f403a_407_flash.o(i.flash_bank1_operation_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_bank1_operation_wait_for
</UL>

<P><STRONG><a name="[5d6]"></a>flash_bank1_operation_wait_for</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, at32f403a_407_flash.o(i.flash_bank1_operation_wait_for))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flash_bank1_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_bank1_operation_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_halfword_program
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_byte_program
</UL>

<P><STRONG><a name="[5d9]"></a>flash_bank2_operation_status_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, at32f403a_407_flash.o(i.flash_bank2_operation_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_bank2_operation_wait_for
</UL>

<P><STRONG><a name="[5d8]"></a>flash_bank2_operation_wait_for</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, at32f403a_407_flash.o(i.flash_bank2_operation_wait_for))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flash_bank2_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_bank2_operation_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_halfword_program
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_byte_program
</UL>

<P><STRONG><a name="[57c]"></a>flash_byte_program</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, at32f403a_407_flash.o(i.flash_byte_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = flash_byte_program &rArr; flash_bank2_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_bank2_operation_wait_for
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_bank1_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_xpt2046_calibrate_or_get_touch_para_with_flash
</UL>

<P><STRONG><a name="[57b]"></a>flash_flag_clear</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, at32f403a_407_flash.o(i.flash_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_xpt2046_calibrate_or_get_touch_para_with_flash
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[5da]"></a>flash_halfword_program</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, at32f403a_407_flash.o(i.flash_halfword_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_spim_operation_wait_for
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_bank2_operation_wait_for
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_bank1_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_nocheck
</UL>

<P><STRONG><a name="[57d]"></a>flash_lock</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f403a_407_flash.o(i.flash_lock))
<BR><BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_xpt2046_calibrate_or_get_touch_para_with_flash
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[5dc]"></a>flash_operation_status_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, at32f403a_407_flash.o(i.flash_operation_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>

<P><STRONG><a name="[57a]"></a>flash_operation_wait_for</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, at32f403a_407_flash.o(i.flash_operation_wait_for))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flash_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_xpt2046_calibrate_or_get_touch_para_with_flash
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[3a3]"></a>flash_read</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, infusion.o(i.flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = flash_read &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;history_write_to_flash
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readInfusionTubeListFromFlash
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDrugListFromFlash
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWeightModeMessageFromFlash
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTimeModeMessageFromFlash
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSystemSettingMessageFromFlash
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSystemMaintainMessageFromFlash
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpeedModeMessageFromFlash
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSeqModeMessageFromFlash
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadParamSettingMessageFromFlash
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDripModeMessageFromFlash
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;destroyHistoryList
</UL>

<P><STRONG><a name="[3f7]"></a>flash_sector_erase</STRONG> (Thumb, 148 bytes, Stack size 12 bytes, at32f403a_407_flash.o(i.flash_sector_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_sector_erase &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_spim_operation_wait_for
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_bank2_operation_wait_for
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_bank1_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_xpt2046_calibrate_or_get_touch_para_with_flash
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeInfusionTubeListToFlash
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDrugListToFlash
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[5dd]"></a>flash_spim_operation_status_get</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, at32f403a_407_flash.o(i.flash_spim_operation_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_spim_operation_wait_for
</UL>

<P><STRONG><a name="[5db]"></a>flash_spim_operation_wait_for</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, at32f403a_407_flash.o(i.flash_spim_operation_wait_for))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_spim_operation_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_halfword_program
</UL>

<P><STRONG><a name="[579]"></a>flash_unlock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f403a_407_flash.o(i.flash_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_xpt2046_calibrate_or_get_touch_para_with_flash
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[3a4]"></a>flash_write</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, infusion.o(i.flash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_lock
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_flag_clear
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_nocheck
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeInfusionTubeListToFlash
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDrugListToFlash
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;history_write_to_flash
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeAddInfusionTubeListToFlash
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWeightModeMessageToFlash
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteTimeModeMessageToFlash
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemSettingMessageToFlash
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemMaintainMessageToFlash
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpeedModeMessageToFlash
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSeqModeMessageToFlash
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDripModeMessageToFlash
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAddDrugListToFlash
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;destroyHistoryList
</UL>

<P><STRONG><a name="[5de]"></a>flash_write_nocheck</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, infusion.o(i.flash_write_nocheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_halfword_program
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[6e]"></a>fputc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, at32f403a_407_board.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[756]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readInfusionTubeListFromFlash
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDrugListFromFlash
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeInfusionNodeByName
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeDrugNodeById
</UL>

<P><STRONG><a name="[2fb]"></a>getNowDrugListNum</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, library_drug.o(i.getNowDrugListNum))
<BR><BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAddDrugListToFlash
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDrugNode
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDrug
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDrug
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drugaffirm
</UL>

<P><STRONG><a name="[2f9]"></a>getNowInfusionListNum</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, library_infusion.o(i.getNowInfusionListNum))
<BR><BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeInfusionTubeListToFlash
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeAddInfusionTubeListToFlash
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddInfusionNode
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelBrand
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddBrand
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brandaffirm
</UL>

<P><STRONG><a name="[333]"></a>getTheDrugNodeName</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, library_drug.o(i.getTheDrugNodeName))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeDrugNodeById
</UL>

<P><STRONG><a name="[331]"></a>getTheTubeNodeName</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, library_infusion.o(i.getTheTubeNodeName))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeInfusionNodeByName
</UL>

<P><STRONG><a name="[3f5]"></a>getThefirstDrugNode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, library_drug.o(i.getThefirstDrugNode))
<BR><BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDrugListToFlash
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAddDrugListToFlash
</UL>

<P><STRONG><a name="[7c1]"></a>getThefirstInfusionNode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, library_infusion.o(i.getThefirstInfusionNode))
<BR><BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeInfusionTubeListToFlash
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeAddInfusionTubeListToFlash
</UL>

<P><STRONG><a name="[5ea]"></a>getVoltageADCValue</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, battery_manage.o(i.getVoltageADCValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = getVoltageADCValue &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_conversion_data_get
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_adc_A_val
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_task_function
</UL>

<P><STRONG><a name="[365]"></a>get_history_info</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, library_history.o(i.get_history_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = get_history_info &rArr; history_info_langue &rArr; rtc_time_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;history_info_langue
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
</UL>

<P><STRONG><a name="[3ee]"></a>get_optocoupler_signal</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f403a_407_board.o(i.get_optocoupler_signal))
<BR><BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detection_motor_start_point_and_update_pressure
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ThirmSec
</UL>

<P><STRONG><a name="[5ef]"></a>gpio_HX711_init</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, hx711.o(i.gpio_HX711_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gpio_HX711_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_write
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[5f0]"></a>gpio_UltraSonic_init</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, ultrasonic.o(i.gpio_UltraSonic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = gpio_UltraSonic_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_exint_line_config
</UL>
<BR>[Called By]<UL><LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ultrasonic_init
</UL>

<P><STRONG><a name="[5f2]"></a>gpio_bat_control</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, battery_manage.o(i.gpio_bat_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = gpio_bat_control &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_write
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_weak_up_process
</UL>

<P><STRONG><a name="[5f3]"></a>gpio_bat_init</STRONG> (Thumb, 564 bytes, Stack size 72 bytes, battery_manage.o(i.gpio_bat_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = gpio_bat_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bpr_tamper_pin_enable
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bpr_interrupt_enable
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_software_trigger_enable
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_conversion_trigger_set
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_ordinary_channel_set
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enable
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_mode_enable
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_combine_mode_select
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_status_get
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_start
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_init_status_get
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_init
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_base_default_para_init
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_base_config
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_init
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_default_para_init
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_reset
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_default_para_init
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_adc_clock_div_set
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwc_battery_powered_domain_access
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_exint_line_config
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_weak_up_process
</UL>

<P><STRONG><a name="[39c]"></a>gpio_bits_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f403a_407_gpio.o(i.gpio_bits_reset))
<BR><BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_pin_reset
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_write_enable
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_sector_erase
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read_sr1
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_page_write
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_init
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_read_data
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_xmc_init
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lcd_init
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588F_Send_Data
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_gpio_init
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorCALIBRRun
</UL>

<P><STRONG><a name="[3cd]"></a>gpio_bits_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f403a_407_gpio.o(i.gpio_bits_set))
<BR><BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_pin_set
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_write_enable
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_sector_erase
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read_sr1
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_page_write
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_init
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_read_data
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_xmc_init
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lcd_init
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_gpio_init
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588F_Send_Data
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_gpio_init
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
</UL>

<P><STRONG><a name="[3c3]"></a>gpio_bits_write</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_gpio.o(i.gpio_bits_write))
<BR><BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_HX712_B
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_HX712_A
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_HX711_init
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_control
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_gpio_init
</UL>

<P><STRONG><a name="[5fb]"></a>gpio_default_para_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f403a_407_gpio.o(i.gpio_default_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_config
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
</UL>

<P><STRONG><a name="[5f1]"></a>gpio_exint_line_config</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, at32f403a_407_gpio.o(i.gpio_exint_line_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_exint_line_config
</UL>
<BR>[Called By]<UL><LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_button_exint_init
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_UltraSonic_init
</UL>

<P><STRONG><a name="[549]"></a>gpio_init</STRONG> (Thumb, 160 bytes, Stack size 20 bytes, at32f403a_407_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_xpt2046_init
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_init
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xmc_init
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_config
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_hardware_connect_init
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_HX711_init
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_gpio_init
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_init
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_switch_init
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_control
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_init
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_gpio_init
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_UltraSonic_init
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_gpio_init
</UL>

<P><STRONG><a name="[30d]"></a>gpio_input_data_bit_read</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at32f403a_407_gpio.o(i.gpio_input_data_bit_read))
<BR><BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_read_cmd
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_EXTI_Read
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_HX712_B
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_HX712_A
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT3_IRQHandler
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryManagement_PD
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryManagement
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at32_up_button_state
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at32_power_button_state
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at32_down_button_state
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_task_function
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT1_IRQHandler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ThirmSec
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_weak_up_process
</UL>

<P><STRONG><a name="[707]"></a>gpio_pin_remap_config</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, at32f403a_407_gpio.o(i.gpio_pin_remap_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gpio_pin_remap_config
</UL>
<BR>[Called By]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_gpio_init
</UL>

<P><STRONG><a name="[60e]"></a>gpio_switch_init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gpio_manage.o(i.gpio_switch_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gpio_switch_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[48a]"></a>gt_abs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_math.o(i.gt_abs))
<BR><BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_scr_by_anim
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fill_color_hor
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_speed_to_time
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_scroll_dir
</UL>

<P><STRONG><a name="[60f]"></a>gt_anim_del</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, gt_anim.o(i.gt_anim_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gt_anim_del &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_is_ll_empty
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_free_task
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to
</UL>

<P><STRONG><a name="[49d]"></a>gt_anim_del_by</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, gt_anim.o(i.gt_anim_del_by))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gt_anim_del_by &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_is_ll_empty
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_free_task
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_auto_scroll_st
</UL>

<P><STRONG><a name="[442]"></a>gt_anim_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gt_anim.o(i.gt_anim_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_anim_init &rArr; gt_memset_0 &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset_0
</UL>
<BR>[Called By]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_handler_anim_start
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_anim_handler
</UL>

<P><STRONG><a name="[52f]"></a>gt_anim_restart</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gt_anim.o(i.gt_anim_restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_anim_restart
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tick_get
</UL>
<BR>[Called By]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_reset_auto_scroll_st
</UL>

<P><STRONG><a name="[444]"></a>gt_anim_set_path_type</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, gt_anim.o(i.gt_anim_set_path_type))
<BR><BR>[Called By]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_anim_handler
</UL>

<P><STRONG><a name="[610]"></a>gt_anim_speed_to_time</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gt_anim.o(i.gt_anim_speed_to_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_anim_speed_to_time
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_abs
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to
</UL>

<P><STRONG><a name="[445]"></a>gt_anim_start</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, gt_anim.o(i.gt_anim_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gt_anim_start &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tick_get
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_is_ll_empty
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_free_task
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_change_list
</UL>
<BR>[Called By]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_handler_anim_start
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_anim_handler
</UL>

<P><STRONG><a name="[4c3]"></a>gt_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gt_obj_pos.o(i.gt_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_append_area
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_old_scr_anim_ready_cb
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radius_mask_init
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_click_point_by_phy_point
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
</UL>

<P><STRONG><a name="[429]"></a>gt_area_cover_screen</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, gt_area.o(i.gt_area_cover_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_area_is_outside_area
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_scr_by_anim
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_check_and_copy_foreach
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend_text
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_cover_dst_area_and_offset_by
</UL>

<P><STRONG><a name="[612]"></a>gt_area_intersect_screen</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, gt_area.o(i.gt_area_intersect_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = gt_area_intersect_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_area_is_outside_area
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend_text
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend
</UL>

<P><STRONG><a name="[48c]"></a>gt_area_is_intersect_screen</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, gt_area.o(i.gt_area_is_intersect_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = gt_area_is_intersect_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_area_is_outside_area
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_check_obj_visible_and_copy
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_scr_by_direct
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_filling_by_sjpg_file
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_filling_by_default_line_mode
</UL>

<P><STRONG><a name="[4c1]"></a>gt_area_is_on</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, gt_area.o(i.gt_area_is_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gt_area_is_on
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_append_area
</UL>

<P><STRONG><a name="[4c2]"></a>gt_area_join</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, gt_area.o(i.gt_area_join))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gt_area_join
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_append_area
</UL>

<P><STRONG><a name="[4ae]"></a>gt_bezier3</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gt_math.o(i.gt_bezier3))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_bezier3
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_path_bounce
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_calc_path_by_bezier
</UL>

<P><STRONG><a name="[447]"></a>gt_btn_create</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, gt_btn.o(i.gt_btn_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_info_init
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_make
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_create
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_add_item
</UL>
<BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_close_btn
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_cancel_btn
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[44d]"></a>gt_btn_set_border_width</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gt_btn.o(i.gt_btn_set_border_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_btn_set_border_width &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_cancel_btn
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
</UL>

<P><STRONG><a name="[449]"></a>gt_btn_set_color_background</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gt_btn.o(i.gt_btn_set_color_background))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gt_btn_set_color_background &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_bgcolor
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_close_btn
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_cancel_btn
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[44e]"></a>gt_btn_set_color_border</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_btn.o(i.gt_btn_set_color_border))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_btn_set_color_border &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_cancel_btn
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
</UL>

<P><STRONG><a name="[44b]"></a>gt_btn_set_color_pressed</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gt_btn.o(i.gt_btn_set_color_pressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_btn_set_color_pressed &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_close_btn
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_cancel_btn
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[46a]"></a>gt_btn_set_font_align</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_btn.o(i.gt_btn_set_font_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_btn_set_font_align
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[44c]"></a>gt_btn_set_font_color</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gt_btn.o(i.gt_btn_set_font_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_btn_set_font_color &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_close_btn
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_cancel_btn
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[467]"></a>gt_btn_set_font_family_cn</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_btn.o(i.gt_btn_set_font_family_cn))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_btn_set_font_family_cn
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[468]"></a>gt_btn_set_font_family_en</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_btn.o(i.gt_btn_set_font_family_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_btn_set_font_family_en
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[469]"></a>gt_btn_set_font_family_fl</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_btn.o(i.gt_btn_set_font_family_fl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_btn_set_font_family_fl
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[466]"></a>gt_btn_set_font_size</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_btn.o(i.gt_btn_set_font_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_btn_set_font_size
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[44f]"></a>gt_btn_set_radius</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_btn.o(i.gt_btn_set_radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_btn_set_radius &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_cancel_btn
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[414]"></a>gt_btn_set_text</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, gt_btn.o(i.gt_btn_set_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gt_btn_set_text &rArr; _gt_vector_add_item &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_replace_item
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_get_count
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_add_item
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_event_cb
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_close_btn
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_cancel_btn
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[61a]"></a>gt_checkbox_create</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, gt_checkbox.o(i.gt_checkbox_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = gt_checkbox_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_info_init
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
</UL>

<P><STRONG><a name="[61b]"></a>gt_checkbox_set_font_color</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gt_checkbox.o(i.gt_checkbox_set_font_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_checkbox_set_font_color &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
</UL>

<P><STRONG><a name="[61c]"></a>gt_checkbox_set_font_family_cn</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_checkbox.o(i.gt_checkbox_set_font_family_cn))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_checkbox_set_font_family_cn
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
</UL>

<P><STRONG><a name="[61d]"></a>gt_checkbox_set_font_family_en</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_checkbox.o(i.gt_checkbox_set_font_family_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_checkbox_set_font_family_en
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
</UL>

<P><STRONG><a name="[61e]"></a>gt_checkbox_set_font_family_fl</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_checkbox.o(i.gt_checkbox_set_font_family_fl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_checkbox_set_font_family_fl
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
</UL>

<P><STRONG><a name="[61f]"></a>gt_checkbox_set_font_point_offset</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_checkbox.o(i.gt_checkbox_set_font_point_offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_checkbox_set_font_point_offset &rArr; gt_checkbox_set_font_point_offset_y
</UL>
<BR>[Calls]<UL><LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_point_offset_y
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_point_offset_x
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
</UL>

<P><STRONG><a name="[620]"></a>gt_checkbox_set_font_point_offset_x</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_checkbox.o(i.gt_checkbox_set_font_point_offset_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_checkbox_set_font_point_offset_x
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_point_offset
</UL>

<P><STRONG><a name="[621]"></a>gt_checkbox_set_font_point_offset_y</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_checkbox.o(i.gt_checkbox_set_font_point_offset_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_checkbox_set_font_point_offset_y
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_point_offset
</UL>

<P><STRONG><a name="[684]"></a>gt_checkbox_set_font_size</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gt_checkbox.o(i.gt_checkbox_set_font_size))
<BR><BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
</UL>

<P><STRONG><a name="[622]"></a>gt_checkbox_set_text</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, gt_checkbox.o(i.gt_checkbox_set_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gt_checkbox_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
</UL>

<P><STRONG><a name="[623]"></a>gt_clock_create</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gt_clock.o(i.gt_clock_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = gt_clock_create &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_inside
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
</UL>

<P><STRONG><a name="[624]"></a>gt_clock_set_alert_cb</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, gt_clock.o(i.gt_clock_set_alert_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gt_clock_set_alert_cb &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
</UL>

<P><STRONG><a name="[625]"></a>gt_clock_set_alert_time</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, gt_clock.o(i.gt_clock_set_alert_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gt_clock_set_alert_time
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
</UL>

<P><STRONG><a name="[626]"></a>gt_clock_set_font_align</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_clock.o(i.gt_clock_set_font_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gt_clock_set_font_align &rArr; gt_label_set_font_align &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
</UL>

<P><STRONG><a name="[627]"></a>gt_clock_set_font_color</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_clock.o(i.gt_clock_set_font_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gt_clock_set_font_color &rArr; gt_label_set_font_color &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
</UL>

<P><STRONG><a name="[628]"></a>gt_clock_set_font_family_en</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_clock.o(i.gt_clock_set_font_family_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_clock_set_font_family_en &rArr; gt_label_set_font_family_en
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
</UL>

<P><STRONG><a name="[629]"></a>gt_clock_set_font_size</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_clock.o(i.gt_clock_set_font_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gt_clock_set_font_size &rArr; gt_label_set_font_size &rArr; _reset_auto_scroll_st &rArr; gt_anim_restart
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
</UL>

<P><STRONG><a name="[62a]"></a>gt_clock_set_format</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, gt_clock.o(i.gt_clock_set_format))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gt_clock_set_format &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
</UL>

<P><STRONG><a name="[62b]"></a>gt_clock_set_mode</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_clock.o(i.gt_clock_set_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_clock_set_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
</UL>

<P><STRONG><a name="[62c]"></a>gt_clock_set_time</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, gt_clock.o(i.gt_clock_set_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gt_clock_set_time &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
</UL>

<P><STRONG><a name="[62d]"></a>gt_clock_start</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gt_clock.o(i.gt_clock_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gt_clock_start &rArr; _gt_timer_create &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_set_paused
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
</UL>

<P><STRONG><a name="[4b8]"></a>gt_clock_turn_next_second</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gt_clock.o(i.gt_clock_turn_next_second))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gt_clock_turn_next_second &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_go_prev_sec
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_go_next_sec
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_clock_timer_cb
</UL>

<P><STRONG><a name="[488]"></a>gt_color_fill</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, gt_color.o(i.gt_color_fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gt_color_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_scr_by_direct
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fill_color_ver
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fill_color_hor
</UL>

<P><STRONG><a name="[5bb]"></a>gt_color_focus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gt_color.o(i.gt_color_focus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_focus
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_focus
</UL>

<P><STRONG><a name="[460]"></a>gt_dialog_create</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, gt_dialog.o(i.gt_dialog_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = gt_dialog_create &rArr; _create_close_btn &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_close_btn
</UL>
<BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[5b1]"></a>gt_dialog_create_issue</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, gt_dialog.o(i.gt_dialog_create_issue))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = gt_dialog_create_issue &rArr; gt_dialog_create &rArr; _create_close_btn &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_inside
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_title_pos
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_content_pos
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_confirm_btn_pos
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_cancel_btn
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
</UL>

<P><STRONG><a name="[637]"></a>gt_dialog_get_active_obj</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gt_dialog.o(i.gt_dialog_get_active_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gt_dialog_get_active_obj &rArr; _find_showing_recursive_by_type &rArr;  _find_showing_recursive_by_type (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_showing_recursive_by_type
</UL>
<BR>[Called By]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_has_showing
</UL>

<P><STRONG><a name="[543]"></a>gt_dialog_has_showing</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gt_dialog.o(i.gt_dialog_has_showing))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_dialog_has_showing &rArr; gt_dialog_get_active_obj &rArr; _find_showing_recursive_by_type &rArr;  _find_showing_recursive_by_type (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_get_active_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_search_active_obj_from_all_layers
</UL>

<P><STRONG><a name="[5b8]"></a>gt_dialog_set_anim_time</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gt_dialog.o(i.gt_dialog_set_anim_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_dialog_set_anim_time
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
</UL>

<P><STRONG><a name="[462]"></a>gt_dialog_set_bgcolor</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_dialog.o(i.gt_dialog_set_bgcolor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_dialog_set_bgcolor
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[463]"></a>gt_dialog_set_border_color</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gt_dialog.o(i.gt_dialog_set_border_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_dialog_set_border_color
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[465]"></a>gt_dialog_set_border_radius</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_dialog.o(i.gt_dialog_set_border_radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_dialog_set_border_radius
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[464]"></a>gt_dialog_set_border_width</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_dialog.o(i.gt_dialog_set_border_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_dialog_set_border_width
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[5b4]"></a>gt_dialog_set_content_font_family_cn</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_dialog.o(i.gt_dialog_set_content_font_family_cn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_dialog_set_content_font_family_cn &rArr; gt_label_set_font_family_cn
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
</UL>

<P><STRONG><a name="[5b5]"></a>gt_dialog_set_content_font_family_en</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_dialog.o(i.gt_dialog_set_content_font_family_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_dialog_set_content_font_family_en &rArr; gt_label_set_font_family_en
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
</UL>

<P><STRONG><a name="[5b6]"></a>gt_dialog_set_content_font_family_fl</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_dialog.o(i.gt_dialog_set_content_font_family_fl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_dialog_set_content_font_family_fl &rArr; gt_label_set_font_family_fl
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
</UL>

<P><STRONG><a name="[5b3]"></a>gt_dialog_set_content_font_size</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_dialog.o(i.gt_dialog_set_content_font_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gt_dialog_set_content_font_size &rArr; gt_label_set_font_size &rArr; _reset_auto_scroll_st &rArr; gt_anim_restart
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
</UL>

<P><STRONG><a name="[5b7]"></a>gt_dialog_set_outside_auto_hide</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gt_dialog.o(i.gt_dialog_set_outside_auto_hide))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_dialog_set_outside_auto_hide
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
</UL>

<P><STRONG><a name="[46b]"></a>gt_dialog_show</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gt_dialog.o(i.gt_dialog_show))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = gt_dialog_show &rArr; _create_anim_handler &rArr; gt_obj_child_set_prop &rArr;  gt_obj_child_set_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_anim_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[6d3]"></a>gt_disp_drv_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_hal_disp.o(i.gt_disp_drv_init))
<BR><BR>[Called By]<UL><LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_port_disp_init
</UL>

<P><STRONG><a name="[638]"></a>gt_disp_drv_register</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gt_hal_disp.o(i.gt_disp_drv_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = gt_disp_drv_register &rArr; _gt_disp_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_disp
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_create
</UL>
<BR>[Called By]<UL><LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_port_disp_init
</UL>

<P><STRONG><a name="[53d]"></a>gt_disp_get_area_act</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gt_disp.o(i.gt_disp_get_area_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_disp_get_area_act
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_scroll_area_act
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_click_point_by_phy_point
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_screen_scroll
</UL>

<P><STRONG><a name="[53c]"></a>gt_disp_get_area_max</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gt_disp.o(i.gt_disp_get_area_max))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_disp_get_area_max
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_scroll_area_act
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_screen_scroll
</UL>

<P><STRONG><a name="[33d]"></a>gt_disp_get_default</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_hal_disp.o(i.gt_disp_get_default))
<BR><BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_disp
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_set_scr
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_ref_area
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_layer_top
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_area_max
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_area_act
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scr_anim_start_cb
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scr_anim_ready_cb
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_find_by_id
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_refr_timer
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_layer_top_widget_area
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy_screen
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_new_screen_obj
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_get_active_obj
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_create
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
</UL>

<P><STRONG><a name="[541]"></a>gt_disp_get_layer_top</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gt_disp.o(i.gt_disp_get_layer_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_disp_get_layer_top
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_search_active_obj_from_all_layers
</UL>

<P><STRONG><a name="[457]"></a>gt_disp_get_res_hor</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gt_hal_disp.o(i.gt_disp_get_res_hor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_disp_get_res_hor
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_disp
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_reload_max_area
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_ref_area
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_area_flush_by_calc_partly_redraw_area
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scr_anim_ready_cb
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_scr_by_anim
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_new_screen_obj
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_screen_scroll
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_screen_event_cb
</UL>

<P><STRONG><a name="[458]"></a>gt_disp_get_res_ver</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gt_hal_disp.o(i.gt_disp_get_res_ver))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_disp_get_res_ver
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_disp
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_reload_max_area
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_ref_area
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_area_flush_by_calc_partly_redraw_area
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scr_anim_ready_cb
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_scr_by_anim
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_new_screen_obj
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_screen_scroll
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_screen_event_cb
</UL>

<P><STRONG><a name="[36e]"></a>gt_disp_get_scr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gt_disp.o(i.gt_disp_get_scr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_disp_get_scr
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_check_scr
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_push_scr_only_st
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_prev_focus_change
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_next_focus_change
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_search_active_obj_from_all_layers
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_handler_anim_start
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_indev_handler_keypad
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendUpkeyUpMessageToLvgl
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendUpkeyLongDownMessageToLvgl
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendUpkeyDownMessageToLvgl
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendPowerKeyLongDownMessageToLvgl
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDownKeyDownMessageToLvgl
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calpressureADandValue
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeInstallTube
</UL>

<P><STRONG><a name="[6d4]"></a>gt_disp_graph_buf_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gt_hal_disp.o(i.gt_disp_graph_buf_init))
<BR><BR>[Called By]<UL><LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_port_disp_init
</UL>

<P><STRONG><a name="[3d6]"></a>gt_disp_invalid_area</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gt_disp.o(i.gt_disp_invalid_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_child
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_y
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_x
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_check_scr
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_ver
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_hor
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_append_area
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_layer_top
</UL>
<BR>[Called By]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim_st
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scr_anim_ready_cb
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_focus
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_focus_disabled
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_disabled
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_event_cb
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_unmasked_effect_handler
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_obj_event_cb
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>

<P><STRONG><a name="[63a]"></a>gt_disp_load_scr_anim</STRONG> (Thumb, 528 bytes, Stack size 208 bytes, gt_disp.o(i.gt_disp_load_scr_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_y
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_x
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_start
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_set_path_type
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_init
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_reload_max_area
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_reset_areas
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_set_scr
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_ref_area
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
</UL>
<BR>[Called By]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim_st
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_ui_init
</UL>

<P><STRONG><a name="[63c]"></a>gt_disp_ref_area</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, gt_disp.o(i.gt_disp_ref_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_ver
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_hor
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_set_state
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_scr_by_direct
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_scr_by_anim
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_refr_timer
</UL>

<P><STRONG><a name="[53e]"></a>gt_disp_scroll_area_act</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, gt_disp.o(i.gt_disp_scroll_area_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = gt_disp_scroll_area_act &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_reset_areas
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_append_area
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_area_max
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_area_act
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_screen_scroll
</UL>

<P><STRONG><a name="[63b]"></a>gt_disp_set_scr</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gt_disp.o(i.gt_disp_set_scr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_disp_set_scr
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
</UL>

<P><STRONG><a name="[309]"></a>gt_disp_stack_go_back</STRONG> (Thumb, 346 bytes, Stack size 48 bytes, gt_disp.o(i.gt_disp_stack_go_back))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_push
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_pop
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_peek
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_is_home_scr_alive
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_is_empty
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_home_scr_id
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_home_scr
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_clear
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_scr_by_id
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeInstallTube
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stop
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BootUp
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brandaffirm
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drugaffirm
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
</UL>

<P><STRONG><a name="[319]"></a>gt_disp_stack_load_scr</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, gt_disp.o(i.gt_disp_stack_load_scr))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = gt_disp_stack_load_scr &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim_st
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterTimeMode
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSquenceMode
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSpeedMode
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterDrugLibrary
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterDripMode
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterBWMode
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpPage
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownPage
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpPage
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownPage
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpPage
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownPage
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrandChange
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpPage
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownPage
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>

<P><STRONG><a name="[2ec]"></a>gt_disp_stack_load_scr_anim</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, gt_disp.o(i.gt_disp_stack_load_scr_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim_st
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_EVENT
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BolusModeSpeed
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BolusModeQuantity
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDrip
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect6_0_cb
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect5_0_cb
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect4_0_cb
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_select
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterParam
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeInstallTube
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect4_0_cb
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect3_0_cb
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect2_0_cb
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_EVENT
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BolusModeSpeed
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BolusModeQuantity
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterPurgeRun
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeRate
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureLevelChange
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoOperateTime
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NearFinishTime
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoLockTime
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangKVO
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BubbleSize
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccumBubble
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureUnitChange
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockPressure
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Time
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;End_Time
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeSetting
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataSetting
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;purge
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedChange
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;purge
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedChange
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeLiquid2
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeLiquid1
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock1_0_cb
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;purge
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeTime
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeQuantity
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nightmode
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewVersion
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewHistory
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpPage
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DownPage
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bedchange
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpPage
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NextPage
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorAD
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delete_History
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeSeriesNumber
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCheck
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureCalibrate
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccuracyCalibrate
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg1_0_cb
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExportHistory
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDrug
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDrug
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg1_0_cb
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelBrand
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddBrand
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg1_0_cb
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureCalibrate
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeMaxSpeed
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccuracyCalibrate
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDrip
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad70
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad40
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad0
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;P70
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;P40
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;P120
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD120
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpPage
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoseUintChange
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeWQuantity
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDoseSpeed
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDoseSpeed
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn3_0_cb
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Purge1
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Next
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeMedicine
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeLiquid
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeBody
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect2_0_cb
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ad0_change
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_U
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StandbyBegin
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg1_0_cb
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect2_0_cb
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateAndTime
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeDrips
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bolus
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeSpeed
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeTime
</UL>

<P><STRONG><a name="[646]"></a>gt_disp_stack_load_scr_anim_st</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, gt_disp.o(i.gt_disp_stack_load_scr_anim_st))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_push_scr_only_st
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
</UL>

<P><STRONG><a name="[647]"></a>gt_disp_stack_push_scr_only_st</STRONG> (Thumb, 304 bytes, Stack size 72 bytes, gt_disp.o(i.gt_disp_stack_push_scr_only_st))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = gt_disp_stack_push_scr_only_st &rArr; gt_scr_stack_pop &rArr; _gt_obj_class_destroy &rArr; _gt_obj_class_destroy_screen &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_set_home_scr
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_push
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_pop
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_peek
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_is_home_scr_alive
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_is_empty
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_has_before
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_home_scr_id
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_clear
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_scr_by_id
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim_st
</UL>

<P><STRONG><a name="[46f]"></a>gt_draw_blend</STRONG> (Thumb, 342 bytes, Stack size 72 bytes, gt_draw_blend.o(i.gt_draw_blend))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_cover_screen
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_cover_dst_area_and_offset_by
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend_with_rgb565_opacity
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend_with_rgb565_no_opacity
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_intersect_screen
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_filling_by_sjpg_file
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_filling_by_ram_data
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_filling_by_default_line_mode
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_blend_underline
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_blend_strikethrough
</UL>

<P><STRONG><a name="[47b]"></a>gt_draw_blend_text</STRONG> (Thumb, 892 bytes, Stack size 88 bytes, gt_draw_blend.o(i.gt_draw_blend_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = gt_draw_blend_text &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_cover_screen
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_mix
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_cover_dst_area_and_offset_by
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_per_255
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_intersect_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
</UL>

<P><STRONG><a name="[64b]"></a>gt_draw_blend_with_rgb565_no_opacity</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_draw_blend_with_rgb565.o(i.gt_draw_blend_with_rgb565_no_opacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = gt_draw_blend_with_rgb565_no_opacity &rArr; _blend_rgb565_with_no_opacity &rArr; gt_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_blend_rgb565_with_no_opacity
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend
</UL>

<P><STRONG><a name="[64a]"></a>gt_draw_blend_with_rgb565_opacity</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_draw_blend_with_rgb565.o(i.gt_draw_blend_with_rgb565_opacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = gt_draw_blend_with_rgb565_opacity &rArr; _blend_rgb565_with_opacity &rArr; gt_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_blend_rgb565_with_opacity
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend
</UL>

<P><STRONG><a name="[40f]"></a>gt_event_get_code</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_event.o(i.gt_event_get_code))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_event_cb
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_screen_event_cb
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_obj_event_cb
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
</UL>

<P><STRONG><a name="[64d]"></a>gt_event_is_enabled</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_event.o(i.gt_event_is_enabled))
<BR><BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send_by_id
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>

<P><STRONG><a name="[320]"></a>gt_event_send</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, gt_event.o(i.gt_event_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_is_enabled
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_event_send_kernel
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send_by_id
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scroll_ready_cb
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scroll_by_y
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scroll_by_x
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_focus
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_hided_layer_top_widgets
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_handler_anim_start
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_released_handle
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_pressed_handle
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_indev_handler_keypad
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_focus_disabled
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_disabled
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_area
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_layer_top_widget_area
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_text
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_color
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_press_btn_handler
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_event_cb
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_turn_next_second
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_time
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_value
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_placeholder
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_color
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_bg_color
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_move_right_pos_cursor
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_move_left_pos_cursor
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_del_value
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_append_value
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy_self
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_destroy_and_free_children
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_add_obj_to_parent
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_screen_event_cb
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_obj_event_cb
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_text
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_selected
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_color
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_dir
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_ina
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_close_release_cb
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_show_bg
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_thick_en
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_thick_cn
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_size
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_gray
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_family_fl
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_family_cn
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_color
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_bg_color
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendUpkeyUpMessageToLvgl
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendUpkeyLongDownMessageToLvgl
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendUpkeyDownMessageToLvgl
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendPowerKeyLongDownMessageToLvgl
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendPowerKeyDownMessageToLvgl
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDownKeyDownMessageToLvgl
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_EVENT
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneSecond
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_EVENT
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFormat
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutSpeed
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brandaffirm
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_callback
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drugaffirm
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
</UL>

<P><STRONG><a name="[3d9]"></a>gt_event_send_by_id</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gt_event.o(i.gt_event_send_by_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_event_send_by_id &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_find_by_id
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_is_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[538]"></a>gt_event_set_enabled</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_event.o(i.gt_event_set_enabled))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scr_anim_start_cb
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scr_anim_ready_cb
</UL>

<P><STRONG><a name="[4df]"></a>gt_find_clicked_obj_by_focus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gt_obj_pos.o(i.gt_find_clicked_obj_by_focus))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gt_find_clicked_obj_by_focus &rArr; _gt_obj_focus_clicked &rArr;  _gt_obj_focus_clicked (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_focus_clicked
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_indev_handler_keypad
</UL>

<P><STRONG><a name="[542]"></a>gt_find_clicked_obj_by_point</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gt_obj_pos.o(i.gt_find_clicked_obj_by_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gt_find_clicked_obj_by_point &rArr; _gt_obj_foreach_clicked &rArr;  _gt_obj_foreach_clicked (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_foreach_clicked
</UL>
<BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_search_active_obj_from_all_layers
</UL>

<P><STRONG><a name="[476]"></a>gt_font_code_transform</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gt_font.o(i.gt_font_code_transform))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_font_code_transform
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Get_Font_Func_S
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Font_Code_Transform
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Check_Is_Vec
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_convertor_string_width
</UL>

<P><STRONG><a name="[477]"></a>gt_font_convertor_data_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_font.o(i.gt_font_convertor_data_get))
<BR><BR>[Calls]<UL><LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Get_Font_Convertor_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_convertor_string_width
</UL>

<P><STRONG><a name="[5c6]"></a>gt_font_get_dot</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, gt_font.o(i.gt_font_get_dot))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = gt_font_get_dot &rArr; _get_font_style
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_is_style_cn_or_en
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Get_Font_Func_S
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Check_Is_Vec
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_font_style
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
</UL>

<P><STRONG><a name="[479]"></a>gt_font_get_one_word_width</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, gt_font.o(i.gt_font_get_one_word_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gt_font_get_one_word_width &rArr; _get_font_style
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_symbol_is_valid_range
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Get_Font_Width
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Check_Is_Vec
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_font_style
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_split
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_omit_get_font_width
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
</UL>

<P><STRONG><a name="[474]"></a>gt_font_get_size_length_by_style</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, gt_font.o(i.gt_font_get_size_length_by_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gt_font_get_size_length_by_style &rArr; gt_font_type_get &rArr; GT_Get_Font_Type
</UL>
<BR>[Calls]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_type_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_convertor_string_width
</UL>

<P><STRONG><a name="[478]"></a>gt_font_get_word_width_figure_up</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, gt_font.o(i.gt_font_get_word_width_figure_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gt_font_get_word_width_figure_up
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_convertor_string_width
</UL>

<P><STRONG><a name="[615]"></a>gt_font_info_init</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, gt_font.o(i.gt_font_info_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_font_info_init
</UL>
<BR>[Called By]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_create
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_create
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_create
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_create
</UL>

<P><STRONG><a name="[472]"></a>gt_font_one_char_code_len_get</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gt_font.o(i.gt_font_one_char_code_len_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_font_one_char_code_len_get &rArr; _gt_gb_font_one_char_code_len_get
</UL>
<BR>[Calls]<UL><LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Set_Chinese_Charset_Type
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_utf8_to_unicode
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gb_font_one_char_code_len_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_right_to_left_handler
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_split
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_omit_get_font_width
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_font_language_split
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_font_lang_and_punctuation_split
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_convertor_string_width
</UL>

<P><STRONG><a name="[4a1]"></a>gt_font_split</STRONG> (Thumb, 496 bytes, Stack size 128 bytes, gt_font.o(i.gt_font_split))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = gt_font_split &rArr; _get_convertor_string_width &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_one_char_code_len_get
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_one_word_width
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_font_is_convertor_language
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_punctuation
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_font_language_split
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_convertor_string_width
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_align_start_y
</UL>

<P><STRONG><a name="[473]"></a>gt_font_type_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_font.o(i.gt_font_type_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_font_type_get &rArr; GT_Get_Font_Type
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Get_Font_Type
</UL>
<BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_size_length_by_style
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_convertor_string_width
</UL>

<P><STRONG><a name="[435]"></a>gt_fs_close</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gt_fs.o(i.gt_fs_close))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_img_decoder_built_in_info
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_img_decoder_built_in_close
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_read_img_wh
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_load_file
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_png_open
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_png_close
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_png_info
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_sjpg_info
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_sjpg_close
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_open
</UL>

<P><STRONG><a name="[500]"></a>gt_fs_get_ext</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gt_fs.o(i.gt_fs_get_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_fs_get_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_sjpg_info
</UL>

<P><STRONG><a name="[655]"></a>gt_fs_get_src_type</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gt_fs.o(i.gt_fs_get_src_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_fs_get_src_type
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tolower
</UL>
<BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_open
</UL>

<P><STRONG><a name="[4d9]"></a>gt_fs_open</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gt_fs.o(i.gt_fs_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gt_fs_open &rArr; gt_fs_get_src_type
</UL>
<BR>[Calls]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_vf_get_drv
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_src_get_drv
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_get_src_type
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_img_decoder_built_in_open
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_img_decoder_built_in_info
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_read_img_wh
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_load_file
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_png_open
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_png_info
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_sjpg_open
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_sjpg_info
</UL>

<P><STRONG><a name="[432]"></a>gt_fs_read</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gt_fs.o(i.gt_fs_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_fs_read
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_img_decoder_built_in_read_line
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_load_file
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_png_file_type
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_png_info
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_func
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_open
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_info
</UL>

<P><STRONG><a name="[48d]"></a>gt_fs_read_img_offset</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, gt_fs.o(i.gt_fs_read_img_offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_fs_read_img_offset
</UL>
<BR>[Called By]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_filling_by_default_line_mode
</UL>

<P><STRONG><a name="[47e]"></a>gt_fs_read_img_wh</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_fs.o(i.gt_fs_read_img_wh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gt_fs_read_img_wh &rArr; gt_fs_open &rArr; gt_fs_get_src_type
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_open
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_close
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
</UL>

<P><STRONG><a name="[431]"></a>gt_fs_seek</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gt_fs.o(i.gt_fs_seek))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_fs_seek
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_img_decoder_built_in_read_line
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_load_file
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_png_file_type
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_png_info
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_func
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_sjpg_read_line
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_open
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_info
</UL>

<P><STRONG><a name="[723]"></a>gt_fs_tell</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gt_fs.o(i.gt_fs_tell))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_fs_tell
</UL>
<BR>[Called By]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_load_file
</UL>

<P><STRONG><a name="[658]"></a>gt_gb_check_char</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, gt_font.o(i.gt_gb_check_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gt_gb_check_char &rArr; _gt_gb_font_one_char_code_len_get
</UL>
<BR>[Calls]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gb_font_one_char_code_len_get
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_check_char_numb
</UL>

<P><STRONG><a name="[419]"></a>gt_graph_init_rect_attr</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gt_graph_base.o(i.gt_graph_init_rect_attr))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_graph_init_rect_attr &rArr; gt_color_black &rArr; gt_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_black
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_focus
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_init_cb
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_init_widget
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_cursor_anim
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radio_init_widget
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
</UL>

<P><STRONG><a name="[659]"></a>gt_group_create</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gt_group.o(i.gt_group_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = gt_group_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_virtual
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_infinite_area
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
</UL>

<P><STRONG><a name="[341]"></a>gt_group_get_active_obj</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gt_group.o(i.gt_group_get_active_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gt_group_get_active_obj
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_get_type
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_state
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
</UL>

<P><STRONG><a name="[359]"></a>gt_img_create</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_img.o(i.gt_img_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = gt_img_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_add_icon
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_img_obj
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureNumSel
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_shutdown
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PowerOff
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
</UL>

<P><STRONG><a name="[5ba]"></a>gt_img_decoder_close</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_img_decoder.o(i.gt_img_decoder_close))
<BR><BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
</UL>

<P><STRONG><a name="[4db]"></a>gt_img_decoder_create</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gt_img_decoder.o(i.gt_img_decoder_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gt_img_decoder_create &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_img_decoder_init
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_sjpg_init
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_png_init
</UL>

<P><STRONG><a name="[65a]"></a>gt_img_decoder_get_info</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gt_img_decoder.o(i.gt_img_decoder_get_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gt_img_decoder_get_info
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_get_width
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_get_height
</UL>

<P><STRONG><a name="[5b9]"></a>gt_img_decoder_open</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gt_img_decoder.o(i.gt_img_decoder_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_img_decoder_open &rArr; gt_memset &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
</UL>

<P><STRONG><a name="[490]"></a>gt_img_decoder_read_line</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gt_img_decoder.o(i.gt_img_decoder_read_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_img_decoder_read_line
</UL>
<BR>[Called By]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_filling_by_sjpg_file
</UL>

<P><STRONG><a name="[4dc]"></a>gt_img_decoder_register</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gt_img_decoder.o(i.gt_img_decoder_register))
<BR><BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_img_decoder_init
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_sjpg_init
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_png_init
</UL>

<P><STRONG><a name="[6d2]"></a>gt_img_decoder_set_close_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_img_decoder.o(i.gt_img_decoder_set_close_cb))
<BR><BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_sjpg_init
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_png_init
</UL>

<P><STRONG><a name="[6cf]"></a>gt_img_decoder_set_info_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_img_decoder.o(i.gt_img_decoder_set_info_cb))
<BR><BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_sjpg_init
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_png_init
</UL>

<P><STRONG><a name="[6d0]"></a>gt_img_decoder_set_open_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_img_decoder.o(i.gt_img_decoder_set_open_cb))
<BR><BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_sjpg_init
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_png_init
</UL>

<P><STRONG><a name="[6d1]"></a>gt_img_decoder_set_read_line_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_img_decoder.o(i.gt_img_decoder_set_read_line_cb))
<BR><BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_sjpg_init
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_png_init
</UL>

<P><STRONG><a name="[406]"></a>gt_img_get_height</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_img.o(i.gt_img_get_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gt_img_get_height &rArr; gt_img_decoder_get_info
</UL>
<BR>[Calls]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_get_info
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_adjust_img_center_line
</UL>

<P><STRONG><a name="[47d]"></a>gt_img_get_src</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gt_img.o(i.gt_img_get_src))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_img_get_src
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_by_str
</UL>

<P><STRONG><a name="[405]"></a>gt_img_get_width</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gt_img.o(i.gt_img_get_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gt_img_get_width &rArr; gt_img_decoder_get_info
</UL>
<BR>[Calls]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_get_info
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_adjust_img_center_line
</UL>

<P><STRONG><a name="[35a]"></a>gt_img_set_src</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, gt_img.o(i.gt_img_set_src))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gt_img_set_src &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_change_icon
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_add_icon
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_img_obj
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureNumSel
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_shutdown
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PowerOff
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
</UL>

<P><STRONG><a name="[65b]"></a>gt_indev_drv_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gt_hal_indev.o(i.gt_indev_drv_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_indev_drv_init &rArr; gt_memset &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_port_indev_init
</UL>

<P><STRONG><a name="[65c]"></a>gt_indev_drv_register</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, gt_hal_indev.o(i.gt_indev_drv_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gt_indev_drv_register &rArr; _gt_timer_create &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset_0
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_port_indev_init
</UL>

<P><STRONG><a name="[4e7]"></a>gt_indev_get_dev_by_idx</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gt_hal_indev.o(i.gt_indev_get_dev_by_idx))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_handler
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_indev_remove_want_delate_target
</UL>

<P><STRONG><a name="[4e6]"></a>gt_indev_get_dev_count</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gt_hal_indev.o(i.gt_indev_get_dev_count))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_handler
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_indev_remove_want_delate_target
</UL>

<P><STRONG><a name="[480]"></a>gt_indev_get_key</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gt_indev.o(i.gt_indev_get_key))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
</UL>

<P><STRONG><a name="[a5]"></a>gt_indev_handler</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gt_indev.o(i.gt_indev_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = gt_indev_handler &rArr; _gt_indev_handler_point &rArr; _indev_pressed_handle &rArr; _indev_scroll_handler &rArr; gt_obj_scroll_to &rArr; gt_anim_del &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_get_dev_count
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_get_dev_by_idx
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_is_enabled
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_indev_handler_point
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_indev_handler_keypad
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_indev_handler_button
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_hal_indev.o(i.gt_indev_drv_register)
</UL>
<P><STRONG><a name="[65d]"></a>gt_indev_is_enabled</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gt_indev.o(i.gt_indev_is_enabled))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_handler
</UL>

<P><STRONG><a name="[537]"></a>gt_indev_set_enabled</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_indev.o(i.gt_indev_set_enabled))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scr_anim_start_cb
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scr_anim_ready_cb
</UL>

<P><STRONG><a name="[65e]"></a>gt_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gt_handler.o(i.gt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init &rArr; gt_port_disp_init &rArr; gt_disp_drv_register &rArr; _gt_disp_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_port_vf_init
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_port_src_init
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_port_indev_init
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_port_disp_init
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_mem_init
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_core_init
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_img_decoder_init
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_extra_init
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_core_init
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_task_function
</UL>

<P><STRONG><a name="[28a]"></a>gt_init_AccuracyCalibrate1</STRONG> (Thumb, 418 bytes, Stack size 24 bytes, activity_accuracycalibrate1.o(i.gt_init_AccuracyCalibrate1))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init_AccuracyCalibrate1 &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[28b]"></a>gt_init_AccuracyCalibrate2</STRONG> (Thumb, 472 bytes, Stack size 24 bytes, activity_accuracycalibrate2.o(i.gt_init_AccuracyCalibrate2))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init_AccuracyCalibrate2 &rArr; gt_clock_create &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_start
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_time
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_mode
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_format
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_font_size
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_font_family_en
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_font_color
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_font_align
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_alert_time
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_alert_cb
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorCALIBRRun
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[295]"></a>gt_init_AccuracyCalibrate2_1</STRONG> (Thumb, 1594 bytes, Stack size 32 bytes, activity_accuracycalibrate2_1.o(i.gt_init_AccuracyCalibrate2_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = gt_init_AccuracyCalibrate2_1 &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[28c]"></a>gt_init_AccuracyCalibrate3</STRONG> (Thumb, 1104 bytes, Stack size 24 bytes, activity_accuracycalibrate3.o(i.gt_init_AccuracyCalibrate3))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init_AccuracyCalibrate3 &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[28d]"></a>gt_init_AccuracyCalibrate4</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, activity_accuracycalibrate4.o(i.gt_init_AccuracyCalibrate4))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = gt_init_AccuracyCalibrate4 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[298]"></a>gt_init_BootUp</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bootup.o(i.gt_init_BootUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = gt_init_BootUp &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[2a1]"></a>gt_init_BrandChoice</STRONG> (Thumb, 1634 bytes, Stack size 16 bytes, activity_brandchioce.o(i.gt_init_BrandChoice))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = gt_init_BrandChoice &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineInfusionNodeByPosit
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfusionNodelangue
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrandShowpage
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowInfusionListNum
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[2a2]"></a>gt_init_BrandChoice2</STRONG> (Thumb, 1718 bytes, Stack size 16 bytes, activity_brandchoice2.o(i.gt_init_BrandChoice2))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = gt_init_BrandChoice2 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineInfusionNodeByPosit
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfusionNodelangue
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowInfusionListNum
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[275]"></a>gt_init_ClearAccumVol</STRONG> (Thumb, 694 bytes, Stack size 80 bytes, activity_clearaccumvol.o(i.gt_init_ClearAccumVol))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = gt_init_ClearAccumVol &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[289]"></a>gt_init_DeleteBrand</STRONG> (Thumb, 1668 bytes, Stack size 72 bytes, activity_deletebrand.o(i.gt_init_DeleteBrand))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = gt_init_DeleteBrand &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineInfusionNodeByPosit
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfusionNodelangue
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowInfusionListNum
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[297]"></a>gt_init_DeleteHistory</STRONG> (Thumb, 446 bytes, Stack size 24 bytes, activity_deletehistory.o(i.gt_init_DeleteHistory))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init_DeleteHistory &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[2a3]"></a>gt_init_DoseUnit</STRONG> (Thumb, 924 bytes, Stack size 16 bytes, activity_doseunit.o(i.gt_init_DoseUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = gt_init_DoseUnit &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_group_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_text
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_selected
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_size
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_point_offset
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_family_en
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_color
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_create
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoseUintChange
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>gt_init_DripMode</STRONG> (Thumb, 2284 bytes, Stack size 104 bytes, activity_dripmode.o(i.gt_init_DripMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = gt_init_DripMode &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_rect_set_feedback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> activity_dripmode.o(i.btn1_0_cb)
<LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[2ad]"></a>gt_init_DripModeRun</STRONG> (Thumb, 3186 bytes, Stack size 104 bytes, activity_dripmoderun.o(i.gt_init_DripModeRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = gt_init_DripModeRun &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_start_end
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_dir
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_ina
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_create
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressUintString
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[276]"></a>gt_init_DrugChoice</STRONG> (Thumb, 1380 bytes, Stack size 80 bytes, activity_drugchoice.o(i.gt_init_DrugChoice))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = gt_init_DrugChoice &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowDrugListNum
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineDrugNodeByPosit
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrugNodelangue
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[288]"></a>gt_init_DrugDelete</STRONG> (Thumb, 1364 bytes, Stack size 72 bytes, activity_drugdelete.o(i.gt_init_DrugDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = gt_init_DrugDelete &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowDrugListNum
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineDrugNodeByPosit
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrugNodelangue
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[2a5]"></a>gt_init_DrugUnit</STRONG> (Thumb, 592 bytes, Stack size 16 bytes, activity_drugunit.o(i.gt_init_DrugUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = gt_init_DrugUnit &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_group_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_text
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_selected
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_size
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_point_offset
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_family_en
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_color
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_create
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[290]"></a>gt_init_ExportHistory</STRONG> (Thumb, 322 bytes, Stack size 16 bytes, activity_exporthistory.o(i.gt_init_ExportHistory))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = gt_init_ExportHistory &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[2a6]"></a>gt_init_GeneralBolus</STRONG> (Thumb, 2034 bytes, Stack size 96 bytes, activity_generalbolus.o(i.gt_init_GeneralBolus))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = gt_init_GeneralBolus &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_rect_set_feedback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[2a7]"></a>gt_init_GeneralBolusRun</STRONG> (Thumb, 3464 bytes, Stack size 104 bytes, activity_generalbolusrun.o(i.gt_init_GeneralBolusRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = gt_init_GeneralBolusRun &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_rect_set_feedback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_start_end
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_dir
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_ina
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_create
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressUintString
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[27e]"></a>gt_init_HistoryView</STRONG> (Thumb, 2532 bytes, Stack size 80 bytes, activity_historyview.o(i.gt_init_HistoryView))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = gt_init_HistoryView &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;history_info_langue
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_history_info
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[2a4]"></a>gt_init_KVORun</STRONG> (Thumb, 2698 bytes, Stack size 88 bytes, activity_kvorun.o(i.gt_init_KVORun))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = gt_init_KVORun &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_rect_set_feedback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_start_end
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_dir
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_ina
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_create
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressUintString
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[680]"></a>gt_init_Logo</STRONG> (Thumb, 182 bytes, Stack size 8 bytes, activity_logo.o(i.gt_init_Logo))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = gt_init_Logo &rArr; gt_clock_create &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_start
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_time
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_mode
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_font_size
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_font_color
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_font_align
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_alert_time
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_alert_cb
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_create
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_ui_init
</UL>

<P><STRONG><a name="[270]"></a>gt_init_MainScreen</STRONG> (Thumb, 1612 bytes, Stack size 24 bytes, activity_aaamainscreen.o(i.gt_init_MainScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = gt_init_MainScreen &rArr; ObDefValue &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_headevent
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[281]"></a>gt_init_Maintenance1_1</STRONG> (Thumb, 1450 bytes, Stack size 80 bytes, activity_maintenance1_1.o(i.gt_init_Maintenance1_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = gt_init_Maintenance1_1 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[282]"></a>gt_init_Maintenance1_2</STRONG> (Thumb, 970 bytes, Stack size 32 bytes, activity_maintenance1_2.o(i.gt_init_Maintenance1_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init_Maintenance1_2 &rArr; gt_checkbox_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_state
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_text
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_size
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_point_offset
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_family_fl
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_family_en
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_family_cn
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_color
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[283]"></a>gt_init_Maintenance1_3</STRONG> (Thumb, 920 bytes, Stack size 32 bytes, activity_maintenance1_3.o(i.gt_init_Maintenance1_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init_Maintenance1_3 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[284]"></a>gt_init_Maintenance1_4</STRONG> (Thumb, 934 bytes, Stack size 32 bytes, activity_maintenance1_4.o(i.gt_init_Maintenance1_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init_Maintenance1_4 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[285]"></a>gt_init_Maintenance1_5</STRONG> (Thumb, 1464 bytes, Stack size 32 bytes, activity_maintenance1_5.o(i.gt_init_Maintenance1_5))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init_Maintenance1_5 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[286]"></a>gt_init_Maintenance2_1</STRONG> (Thumb, 916 bytes, Stack size 32 bytes, activity_maintenance2_1.o(i.gt_init_Maintenance2_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init_Maintenance2_1 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;down
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[287]"></a>gt_init_Maintenance2_2</STRONG> (Thumb, 1286 bytes, Stack size 88 bytes, activity_maintenance2_2.o(i.gt_init_Maintenance2_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = gt_init_Maintenance2_2 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[271]"></a>gt_init_ModeSelect</STRONG> (Thumb, 1216 bytes, Stack size 32 bytes, activity_modeselect.o(i.gt_init_ModeSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = gt_init_ModeSelect &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[280]"></a>gt_init_NightSetting</STRONG> (Thumb, 2500 bytes, Stack size 96 bytes, activity_nightsetting.o(i.gt_init_NightSetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = gt_init_NightSetting &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_state
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_text
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_size
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_point_offset
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_family_en
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_family_cn
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_color
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_create
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[272]"></a>gt_init_ParamSetting1</STRONG> (Thumb, 1656 bytes, Stack size 48 bytes, activity_paramsetting1.o(i.gt_init_ParamSetting1))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = gt_init_ParamSetting1 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressUintString
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[277]"></a>gt_init_ParamSetting2</STRONG> (Thumb, 2330 bytes, Stack size 80 bytes, activity_paramsetting2.o(i.gt_init_ParamSetting2))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = gt_init_ParamSetting2 &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[278]"></a>gt_init_ParamSetting3</STRONG> (Thumb, 2052 bytes, Stack size 32 bytes, activity_paramsetting3.o(i.gt_init_ParamSetting3))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init_ParamSetting3 &rArr; gt_checkbox_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_state
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_text
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_size
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_point_offset
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_family_fl
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_family_en
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_family_cn
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_color
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[279]"></a>gt_init_ParamSetting4</STRONG> (Thumb, 836 bytes, Stack size 72 bytes, activity_paramsetting4.o(i.gt_init_ParamSetting4))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = gt_init_ParamSetting4 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[299]"></a>gt_init_PowerOff</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, activity_poweroff.o(i.gt_init_PowerOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = gt_init_PowerOff &rArr; gt_img_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[28e]"></a>gt_init_PressureCalibrate1</STRONG> (Thumb, 318 bytes, Stack size 16 bytes, activity_pressurecalibrate1.o(i.gt_init_PressureCalibrate1))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = gt_init_PressureCalibrate1 &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[28f]"></a>gt_init_PressureCalibrate2</STRONG> (Thumb, 3850 bytes, Stack size 80 bytes, activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = gt_init_PressureCalibrate2 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[27a]"></a>gt_init_PressureNumSel</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, activity_pressurenumsel.o(i.gt_init_PressureNumSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init_PressureNumSel &rArr; CreatePage1 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[27b]"></a>gt_init_PressureUnit</STRONG> (Thumb, 666 bytes, Stack size 16 bytes, activity_pressureunit.o(i.gt_init_PressureUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = gt_init_PressureUnit &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_group_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_text
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_selected
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_size
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_point_offset
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_family_en
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_color
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_create
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[29f]"></a>gt_init_Purge</STRONG> (Thumb, 1104 bytes, Stack size 80 bytes, activity_purge.o(i.gt_init_Purge))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = gt_init_Purge &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[2a0]"></a>gt_init_PurgeRun</STRONG> (Thumb, 2188 bytes, Stack size 80 bytes, activity_purgerun.o(i.gt_init_PurgeRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = gt_init_PurgeRun &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_rect_set_feedback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_start_end
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_dir
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_ina
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_create
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressUintString
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[27c]"></a>gt_init_PurgeSizeSetting</STRONG> (Thumb, 714 bytes, Stack size 16 bytes, activity_purgesizesetting.o(i.gt_init_PurgeSizeSetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = gt_init_PurgeSizeSetting &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_group_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_text
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_selected
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_size
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_point_offset
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_family_en
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_color
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_create
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[291]"></a>gt_init_RestoreFactory</STRONG> (Thumb, 434 bytes, Stack size 24 bytes, activity_restorefactory.o(i.gt_init_RestoreFactory))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init_RestoreFactory &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[29a]"></a>gt_init_Screen_KeyBoard_Int</STRONG> (Thumb, 3248 bytes, Stack size 80 bytes, activity_keyboard_int.o(i.gt_init_Screen_KeyBoard_Int))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = gt_init_Screen_KeyBoard_Int &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_placeholder
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_size
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_family_en
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_color
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_align
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_bg_color
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_create
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[29d]"></a>gt_init_Screen_KeyBoard_Soft</STRONG> (Thumb, 5852 bytes, Stack size 88 bytes, activity_keyboard_soft.o(i.gt_init_Screen_KeyBoard_Soft))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = gt_init_Screen_KeyBoard_Soft &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_placeholder
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_size
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_family_fl
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_family_en
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_family_cn
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_color
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_align
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_bg_color
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_create
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[296]"></a>gt_init_SensorMonitor</STRONG> (Thumb, 8020 bytes, Stack size 88 bytes, activity_sensormonitor.o(i.gt_init_SensorMonitor))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = gt_init_SensorMonitor &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[2a8]"></a>gt_init_SeqBolus</STRONG> (Thumb, 2000 bytes, Stack size 40 bytes, activity_seqbolus.o(i.gt_init_SeqBolus))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = gt_init_SeqBolus &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_rect_set_feedback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[2a9]"></a>gt_init_SeqBolusRun</STRONG> (Thumb, 3368 bytes, Stack size 48 bytes, activity_seqbolusrun.o(i.gt_init_SeqBolusRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = gt_init_SeqBolusRun &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_rect_set_feedback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_start_end
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_dir
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_ina
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_create
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressUintString
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[6b]"></a>gt_init_SeqMode</STRONG> (Thumb, 1864 bytes, Stack size 48 bytes, activity_seqmode.o(i.gt_init_SeqMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = gt_init_SeqMode &rArr; CreatePage2 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_value
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_step
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_min
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_max
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_size
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_family_en
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_color
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_align
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_fill_zero_front
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_display_integer_length
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_display_decimal_length
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_get_value
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSpeedModeTheDisplay
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
</UL>
<BR>[Address Reference Count : 2]<UL><LI> activity_seqmode.o(i.Run)
<LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[2ac]"></a>gt_init_SeqModeRun</STRONG> (Thumb, 3634 bytes, Stack size 104 bytes, activity_seqmoderun.o(i.gt_init_SeqModeRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = gt_init_SeqModeRun &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_rect_set_feedback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_start_end
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_dir
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_ina
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_create
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressUintString
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[2aa]"></a>gt_init_SpeedAndTimeModeRun</STRONG> (Thumb, 3264 bytes, Stack size 104 bytes, activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = gt_init_SpeedAndTimeModeRun &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_rect_set_feedback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_start_end
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_dir
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_ina
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_create
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressUintString
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>gt_init_SpeedMode</STRONG> (Thumb, 2278 bytes, Stack size 104 bytes, activity_speedmode.o(i.gt_init_SpeedMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = gt_init_SpeedMode &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_rect_set_feedback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> activity_speedmode.o(i.btn1_0_cb)
<LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[29e]"></a>gt_init_Standby</STRONG> (Thumb, 604 bytes, Stack size 88 bytes, activity_standby.o(i.gt_init_Standby))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = gt_init_Standby &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[294]"></a>gt_init_SystemCheck</STRONG> (Thumb, 456 bytes, Stack size 24 bytes, activity_systemcheck.o(i.gt_init_SystemCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init_SystemCheck &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[293]"></a>gt_init_SystemDataTimeSetting</STRONG> (Thumb, 2088 bytes, Stack size 80 bytes, activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = gt_init_SystemDataTimeSetting &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_get
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[292]"></a>gt_init_SystemLanguageSetting</STRONG> (Thumb, 790 bytes, Stack size 16 bytes, activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = gt_init_SystemLanguageSetting &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_group_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_text
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_selected
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_size
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_point_offset
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_family_fl
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_family_en
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_family_cn
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_color
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_create
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[273]"></a>gt_init_SystemSetting1</STRONG> (Thumb, 2374 bytes, Stack size 48 bytes, activity_systemsetting1.o(i.gt_init_SystemSetting1))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = gt_init_SystemSetting1 &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_value
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_step
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_min
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_max
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_size
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_family_en
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_color
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_align
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_fill_zero_front
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_display_integer_length
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_display_decimal_length
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[27d]"></a>gt_init_SystemSetting2</STRONG> (Thumb, 1650 bytes, Stack size 32 bytes, activity_systemsetting2.o(i.gt_init_SystemSetting2))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init_SystemSetting2 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[29c]"></a>gt_init_TimeKeyBoard</STRONG> (Thumb, 2588 bytes, Stack size 80 bytes, activity_keyboard_time.o(i.gt_init_TimeKeyBoard))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = gt_init_TimeKeyBoard &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>gt_init_TimeMode</STRONG> (Thumb, 2326 bytes, Stack size 104 bytes, activity_timemode.o(i.gt_init_TimeMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = gt_init_TimeMode &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_rect_set_feedback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> activity_logo.o(.constdata)
<LI> activity_timemode.o(i.Run)
</UL>
<P><STRONG><a name="[27f]"></a>gt_init_Version</STRONG> (Thumb, 814 bytes, Stack size 16 bytes, activity_version.o(i.gt_init_Version))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = gt_init_Version &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[6d]"></a>gt_init_WeightMode</STRONG> (Thumb, 2324 bytes, Stack size 96 bytes, activity_weightmode.o(i.gt_init_WeightMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = gt_init_WeightMode &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMedicineUintString
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> activity_logo.o(.constdata)
<LI> activity_weightmode.o(i.Run)
</UL>
<P><STRONG><a name="[86]"></a>gt_init_WeightMode2</STRONG> (Thumb, 2314 bytes, Stack size 96 bytes, activity_weightmode2.o(i.gt_init_WeightMode2))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = gt_init_WeightMode2 &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_rect_set_feedback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWeightModeTheDisplay
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDoseUintString
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> activity_weightmode2.o(i.btn1_0_cb)
<LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[2ab]"></a>gt_init_WeightModeRun</STRONG> (Thumb, 4010 bytes, Stack size 104 bytes, activity_weightmoderun.o(i.gt_init_WeightModeRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = gt_init_WeightModeRun &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_rect_set_feedback
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_start_end
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_dir
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_ina
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_create
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressUintString
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDoseUintString
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[274]"></a>gt_init_screen_keyBoard_PassWord</STRONG> (Thumb, 3214 bytes, Stack size 32 bytes, activity_keyboard_password.o(i.gt_init_screen_keyBoard_PassWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = gt_init_screen_keyBoard_PassWord &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_placeholder
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_size
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_family_en
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_color
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_align
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_bg_color
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_create
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[29b]"></a>gt_init_screen_keyBoard_float</STRONG> (Thumb, 3260 bytes, Stack size 80 bytes, activity_keyboard_float.o(i.gt_init_screen_keyBoard_float))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = gt_init_screen_keyBoard_float &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_placeholder
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_size
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_family_en
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_color
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_align
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_bg_color
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_create
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[2ae]"></a>gt_init_shutdown</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, activity_shutdown.o(i.gt_init_shutdown))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = gt_init_shutdown &rArr; gt_img_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(.constdata)
</UL>
<P><STRONG><a name="[521]"></a>gt_input_append_char</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gt_input.o(i.gt_input_append_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = gt_input_append_char &rArr; gt_input_append_value &rArr; gt_txt_ins &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_append_value
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_input_key_handler
</UL>

<P><STRONG><a name="[38a]"></a>gt_input_append_value</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, gt_input.o(i.gt_input_append_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gt_input_append_value &rArr; gt_txt_ins &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_ins
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_input_key_handler
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_append_char
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputValue
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputValue
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputValue
</UL>

<P><STRONG><a name="[697]"></a>gt_input_create</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gt_input.o(i.gt_input_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = gt_input_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_info_init
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_black
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_placeholder
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
</UL>

<P><STRONG><a name="[361]"></a>gt_input_del_value</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, gt_input.o(i.gt_input_del_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = gt_input_del_value &rArr; gt_txt_cut &rArr; gt_txt_string_del &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_cut
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_input_key_handler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteOne
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteOne
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteOne
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteOne
</UL>

<P><STRONG><a name="[338]"></a>gt_input_get_value</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gt_input.o(i.gt_input_get_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_input_get_value
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
</UL>

<P><STRONG><a name="[523]"></a>gt_input_move_left_pos_cursor</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gt_input.o(i.gt_input_move_left_pos_cursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gt_input_move_left_pos_cursor &rArr; gt_txt_check_char_numb &rArr; gt_gb_check_char &rArr; _gt_gb_font_one_char_code_len_get
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_check_char_numb
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_input_key_handler
</UL>

<P><STRONG><a name="[522]"></a>gt_input_move_right_pos_cursor</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gt_input.o(i.gt_input_move_right_pos_cursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gt_input_move_right_pos_cursor &rArr; gt_txt_check_char_numb &rArr; gt_gb_check_char &rArr; _gt_gb_font_one_char_code_len_get
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_check_char_numb
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_input_key_handler
</UL>

<P><STRONG><a name="[6a3]"></a>gt_input_number_create</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gt_input_number.o(i.gt_input_number_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = gt_input_number_create &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
</UL>

<P><STRONG><a name="[360]"></a>gt_input_number_decrease</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, gt_input_number.o(i.gt_input_number_decrease))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = gt_input_number_decrease &rArr; _update_label_value &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_label_value
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn4_0_cb
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
</UL>

<P><STRONG><a name="[2f2]"></a>gt_input_number_get_value</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gt_input_number.o(i.gt_input_number_get_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_input_number_get_value
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn4_0_cb
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn3_0_cb
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
</UL>

<P><STRONG><a name="[2f1]"></a>gt_input_number_increase</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, gt_input_number.o(i.gt_input_number_increase))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = gt_input_number_increase &rArr; _update_label_value &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_label_value
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn3_0_cb
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
</UL>

<P><STRONG><a name="[6ae]"></a>gt_input_number_set_display_decimal_length</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gt_input_number.o(i.gt_input_number_set_display_decimal_length))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = gt_input_number_set_display_decimal_length &rArr; _update_label_value &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_label_value
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
</UL>

<P><STRONG><a name="[6ad]"></a>gt_input_number_set_display_integer_length</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gt_input_number.o(i.gt_input_number_set_display_integer_length))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = gt_input_number_set_display_integer_length &rArr; _update_label_value &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_label_value
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
</UL>

<P><STRONG><a name="[6ac]"></a>gt_input_number_set_fill_zero_front</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_input_number.o(i.gt_input_number_set_fill_zero_front))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = gt_input_number_set_fill_zero_front &rArr; _update_label_value &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_label_value
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
</UL>

<P><STRONG><a name="[6a7]"></a>gt_input_number_set_font_align</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_input_number.o(i.gt_input_number_set_font_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gt_input_number_set_font_align &rArr; gt_label_set_font_align &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
</UL>

<P><STRONG><a name="[6a4]"></a>gt_input_number_set_font_color</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_input_number.o(i.gt_input_number_set_font_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gt_input_number_set_font_color &rArr; gt_label_set_font_color &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
</UL>

<P><STRONG><a name="[6a6]"></a>gt_input_number_set_font_family_en</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_input_number.o(i.gt_input_number_set_font_family_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_input_number_set_font_family_en &rArr; gt_label_set_font_family_en
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
</UL>

<P><STRONG><a name="[6a5]"></a>gt_input_number_set_font_size</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_input_number.o(i.gt_input_number_set_font_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gt_input_number_set_font_size &rArr; gt_label_set_font_size &rArr; _reset_auto_scroll_st &rArr; gt_anim_restart
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
</UL>

<P><STRONG><a name="[6ab]"></a>gt_input_number_set_max</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, gt_input_number.o(i.gt_input_number_set_max))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = gt_input_number_set_max &rArr; _update_label_value &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_label_value
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
</UL>

<P><STRONG><a name="[6aa]"></a>gt_input_number_set_min</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, gt_input_number.o(i.gt_input_number_set_min))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = gt_input_number_set_min &rArr; _update_label_value &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_label_value
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
</UL>

<P><STRONG><a name="[6a9]"></a>gt_input_number_set_step</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gt_input_number.o(i.gt_input_number_set_step))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_input_number_set_step
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
</UL>

<P><STRONG><a name="[6a8]"></a>gt_input_number_set_value</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, gt_input_number.o(i.gt_input_number_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = gt_input_number_set_value &rArr; _update_label_value &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_label_value
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
</UL>

<P><STRONG><a name="[69d]"></a>gt_input_set_bg_color</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_input.o(i.gt_input_set_bg_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_input_set_bg_color &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
</UL>

<P><STRONG><a name="[69b]"></a>gt_input_set_font_align</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_input.o(i.gt_input_set_font_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_input_set_font_align
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
</UL>

<P><STRONG><a name="[698]"></a>gt_input_set_font_color</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_input.o(i.gt_input_set_font_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_input_set_font_color &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
</UL>

<P><STRONG><a name="[69f]"></a>gt_input_set_font_family_cn</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_input.o(i.gt_input_set_font_family_cn))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_input_set_font_family_cn
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
</UL>

<P><STRONG><a name="[69a]"></a>gt_input_set_font_family_en</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_input.o(i.gt_input_set_font_family_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_input_set_font_family_en
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
</UL>

<P><STRONG><a name="[6a0]"></a>gt_input_set_font_family_fl</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_input.o(i.gt_input_set_font_family_fl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_input_set_font_family_fl
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
</UL>

<P><STRONG><a name="[699]"></a>gt_input_set_font_size</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_input.o(i.gt_input_set_font_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_input_set_font_size
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
</UL>

<P><STRONG><a name="[69c]"></a>gt_input_set_placeholder</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gt_input.o(i.gt_input_set_placeholder))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gt_input_set_placeholder &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_create
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
</UL>

<P><STRONG><a name="[33e]"></a>gt_input_set_value</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, gt_input.o(i.gt_input_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gt_input_set_value &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAll
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAll
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAll
</UL>

<P><STRONG><a name="[350]"></a>gt_label_create</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, gt_label.o(i.gt_label_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_info_init
</UL>
<BR>[Called By]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_create
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_create
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[491]"></a>gt_label_get_text</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gt_label.o(i.gt_label_get_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_label_get_text
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_by_str
</UL>

<P><STRONG><a name="[352]"></a>gt_label_set_font_align</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gt_label.o(i.gt_label_set_font_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_label_set_font_align &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_font_align
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_align
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[233]"></a>gt_label_set_font_color</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_label.o(i.gt_label_set_font_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_label_set_font_color &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_font_color
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_color
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_status_bar.o(i.gt_status_bar_set_font_color)
</UL>
<P><STRONG><a name="[234]"></a>gt_label_set_font_family_cn</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_label.o(i.gt_label_set_font_family_cn))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_label_set_font_family_cn
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_content_font_family_cn
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_status_bar.o(i.gt_status_bar_set_font_family_cn)
</UL>
<P><STRONG><a name="[351]"></a>gt_label_set_font_family_en</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_label.o(i.gt_label_set_font_family_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_label_set_font_family_en
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_font_family_en
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_family_en
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_content_font_family_en
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[235]"></a>gt_label_set_font_family_fl</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_label.o(i.gt_label_set_font_family_fl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_label_set_font_family_fl
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_content_font_family_fl
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_status_bar.o(i.gt_status_bar_set_font_family_fl)
</UL>
<P><STRONG><a name="[455]"></a>gt_label_set_font_family_numb</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_label.o(i.gt_label_set_font_family_numb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_label_set_font_family_numb
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
</UL>

<P><STRONG><a name="[236]"></a>gt_label_set_font_gray</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_label.o(i.gt_label_set_font_gray))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_label_set_font_gray
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_status_bar.o(i.gt_status_bar_set_font_gray)
</UL>
<P><STRONG><a name="[237]"></a>gt_label_set_font_size</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gt_label.o(i.gt_label_set_font_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_label_set_font_size &rArr; _reset_auto_scroll_st &rArr; gt_anim_restart
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_reset_auto_scroll_st
</UL>
<BR>[Called By]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_font_size
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_size
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_content_font_size
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_status_bar.o(i.gt_status_bar_set_font_size)
</UL>
<P><STRONG><a name="[238]"></a>gt_label_set_font_thick_cn</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_label.o(i.gt_label_set_font_thick_cn))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_label_set_font_thick_cn
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_status_bar.o(i.gt_status_bar_set_font_thick_cn)
</UL>
<P><STRONG><a name="[239]"></a>gt_label_set_font_thick_en</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_label.o(i.gt_label_set_font_thick_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_label_set_font_thick_en
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_status_bar.o(i.gt_status_bar_set_font_thick_en)
</UL>
<P><STRONG><a name="[302]"></a>gt_label_set_text</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, gt_label.o(i.gt_label_set_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_reset_auto_scroll_st
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_create
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_create
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_label_value
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_change_lab_text
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrandUp
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrandDown
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect9_0_cb
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect8_0_cb
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect7_0_cb
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect6_0_cb
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect5_0_cb
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect10_0_cb
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataFormat
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ThirmSec
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ThirmSec
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTLrun
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_detection
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BEEP_detection
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AgainstRun
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_2_cb
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRun
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_sec_timer
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brandaffirm
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drugaffirm
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
</UL>

<P><STRONG><a name="[531]"></a>gt_layout_row_grow</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, gt_layout.o(i.gt_layout_row_grow))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside_invert
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_w
</UL>
<BR>[Called By]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_row_layout
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_grow_invert
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_resize_part_width
</UL>

<P><STRONG><a name="[4ad]"></a>gt_map</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gt_math.o(i.gt_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_map
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_path_linear
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_path_bounce
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_calc_path_by_bezier
</UL>

<P><STRONG><a name="[65f]"></a>gt_mem_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gt_mem.o(i.gt_mem_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gt_mem_init &rArr; gt_tlsf_create_with_pool &rArr; gt_tlsf_add_pool &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_create_with_pool
</UL>
<BR>[Called By]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init
</UL>

<P><STRONG><a name="[43a]"></a>gt_memcmp</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_mem.o(i.gt_memcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gt_memcmp &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_symbol_get_mask_buf
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_png_file_type
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_jpg
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_sjpg_info
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_open
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_info
</UL>

<P><STRONG><a name="[4aa]"></a>gt_memcpy</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gt_mem.o(i.gt_memcpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_memcpy &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_start
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_right_to_left_handler
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_dot
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_realloc
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_push
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_png_read_line
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;output_func
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_sjpg_read_line
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_read_cb
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_string_del
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_create
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_format
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_time_str
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_placeholder
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_append_value
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_create
</UL>

<P><STRONG><a name="[489]"></a>gt_memmove</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_mem.o(i.gt_memmove))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_memmove &rArr; memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fill_color_hor
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_ins
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy_screen
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy_from_parent
</UL>

<P><STRONG><a name="[4a9]"></a>gt_memset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_mem.o(i.gt_memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_memset &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_reset_areas
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_vf_init
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_drv_init
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_open
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_graph_init_rect_attr
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_one_word_width
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_create
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_create
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_clear
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_sjpg_st
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_create
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_string_del
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_text
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_create
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_format
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_time_str
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_value
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_text
</UL>

<P><STRONG><a name="[433]"></a>gt_memset_0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_mem.o(i.gt_memset_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_memset_0 &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_init
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_src_init
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_drv_register
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_get_radius_mask_buf
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_get_radius_mask
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_png_info
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_hal_fp_init
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_convertor_string_width
</UL>

<P><STRONG><a name="[34f]"></a>gt_obj_add_event_cb</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, gt_event.o(i.gt_obj_add_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gt_obj_add_event_cb &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_close_btn
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_cancel_btn
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_headevent
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureNumSel
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_shutdown
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[639]"></a>gt_obj_check_scr</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gt_obj_pos.o(i.gt_obj_check_scr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gt_obj_check_scr &rArr; gt_disp_get_scr
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_get_type
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
</UL>

<P><STRONG><a name="[3be]"></a>gt_obj_child_set_prop</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, gt_style.o(i.gt_obj_child_set_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + In Cycle
<LI>Call Chain = gt_obj_child_set_prop &rArr;  gt_obj_child_set_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_focus
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_untouchability
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_overflow
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_inside
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_focus_disabled
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_fixed
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_disabled
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_inherent_attr_from_parent
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_destroy
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog_anim_exec_cb
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_anim_handler
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageShow
</UL>

<P><STRONG><a name="[4bb]"></a>gt_obj_class_create</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, gt_obj_class.o(i.gt_obj_class_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset_0
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_layout_row_grow
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_inherent_attr_from_parent
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_new_screen_obj
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_add_obj_to_parent
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_create
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_create
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_group_create
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_create
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_create
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_create
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_create
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_create
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_create
</UL>

<P><STRONG><a name="[411]"></a>gt_obj_class_get_type</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gt_obj_class.o(i.gt_obj_class_get_type))
<BR><BR>[Called By]<UL><LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_check_scr
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_check_and_copy_foreach
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_press_btn_handler
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_event_cb
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_group_get_active_obj
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_selected
</UL>

<P><STRONG><a name="[58a]"></a>gt_obj_create</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gt_obj.o(i.gt_obj_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = gt_obj_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_create
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_headevent
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureNumSel
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_shutdown
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PowerOff
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
</UL>

<P><STRONG><a name="[46d]"></a>gt_obj_destroy</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gt_obj.o(i.gt_obj_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = gt_obj_destroy &rArr; gt_obj_child_set_prop &rArr;  gt_obj_child_set_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_set_repeat_count
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog_close_anim_ready_cb
</UL>

<P><STRONG><a name="[64e]"></a>gt_obj_find_by_id</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, gt_obj.o(i.gt_obj_find_by_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = gt_obj_find_by_id &rArr; _find_obj_recursive_by_id &rArr;  _find_obj_recursive_by_id (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_obj_recursive_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send_by_id
</UL>

<P><STRONG><a name="[50b]"></a>gt_obj_get_click_point_by_phy_point</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, gt_obj_pos.o(i.gt_obj_get_click_point_by_phy_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gt_obj_get_click_point_by_phy_point &rArr; gt_disp_get_area_act
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_copy
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_area_act
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_pressed_handle
</UL>

<P><STRONG><a name="[408]"></a>gt_obj_get_h</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_get_h))
<BR><BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside_invert
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_adjust_img_center_line
</UL>

<P><STRONG><a name="[51e]"></a>gt_obj_get_mask_effect</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_get_mask_effect))
<BR><BR>[Called By]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_unmasked_effect_handler
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_obj_event_cb
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
</UL>

<P><STRONG><a name="[4cc]"></a>gt_obj_get_parent</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_obj.o(i.gt_obj_get_parent))
<BR><BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_event_send_kernel
</UL>

<P><STRONG><a name="[41a]"></a>gt_obj_get_reduce</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_get_reduce))
<BR><BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_check_and_copy_foreach
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_init_cb
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_init_widget
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radio_init_widget
</UL>

<P><STRONG><a name="[518]"></a>gt_obj_get_scroll_snap_x</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_get_scroll_snap_x))
<BR><BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_handler
</UL>

<P><STRONG><a name="[515]"></a>gt_obj_get_scroll_snap_y</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_get_scroll_snap_y))
<BR><BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_handler
</UL>

<P><STRONG><a name="[520]"></a>gt_obj_get_septal_line</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_get_septal_line))
<BR><BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
</UL>

<P><STRONG><a name="[418]"></a>gt_obj_get_state</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_get_state))
<BR><BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_press_btn_handler
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_init_cb
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_group_get_active_obj
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_change_state_by_trigger_mode
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_selected
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radio_init_widget
</UL>

<P><STRONG><a name="[4f5]"></a>gt_obj_get_touch_parent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_get_touch_parent))
<BR><BR>[Called By]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_foreach_clicked
</UL>

<P><STRONG><a name="[427]"></a>gt_obj_get_trigger_mode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_get_trigger_mode))
<BR><BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_change_state_by_trigger_mode
</UL>

<P><STRONG><a name="[420]"></a>gt_obj_get_virtual</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_get_virtual))
<BR><BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_y
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_x
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_foreach_clicked
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside_invert
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_h
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calc_max_area_recursive
</UL>

<P><STRONG><a name="[41f]"></a>gt_obj_get_visible</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_get_visible))
<BR><BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_check_obj_visible_and_copy
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_check_and_copy_foreach
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_foreach_clicked
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_hided_layer_top_widgets
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside_invert
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calc_max_area_recursive
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_showing_recursive_by_type
</UL>

<P><STRONG><a name="[532]"></a>gt_obj_get_w</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_get_w))
<BR><BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside_invert
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_layout_row_grow
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_height
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_resize_part_width
</UL>

<P><STRONG><a name="[409]"></a>gt_obj_get_x</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_get_x))
<BR><BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_layer_top_widget_area
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_resize_part_width
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_adjust_img_center_line
</UL>

<P><STRONG><a name="[407]"></a>gt_obj_get_y</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_get_y))
<BR><BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside_invert
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_layer_top_widget_area
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_adjust_img_center_line
</UL>

<P><STRONG><a name="[4cd]"></a>gt_obj_is_bubble_notify</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_is_bubble_notify))
<BR><BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_event_send_kernel
</UL>

<P><STRONG><a name="[424]"></a>gt_obj_is_child</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gt_obj.o(i.gt_obj_is_child))
<BR><BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_change_icon
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_change_lab_text
</UL>

<P><STRONG><a name="[51c]"></a>gt_obj_is_show_bg</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gt_obj.o(i.gt_obj_is_show_bg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_obj_is_show_bg
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
</UL>

<P><STRONG><a name="[425]"></a>gt_obj_is_type</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gt_obj_class.o(i.gt_obj_is_type))
<BR><BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_get_bgcolor
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_text
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_point_offset_y
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_point_offset_x
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_point_offset
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_family_fl
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_family_en
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_family_cn
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_set_font_color
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_bgcolor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_size
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_fl
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_en
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_family_cn
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_align
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_get_width
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_get_src
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_get_height
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_thick_en
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_thick_cn
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_gray
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_numb
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_turn_next_second
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_start
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_time
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_mode
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_format
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_font_size
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_font_family_en
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_font_color
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_font_align
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_alert_time
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_set_alert_cb
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_get_text
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_value
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_step
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_min
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_max
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_size
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_family_en
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_color
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_font_align
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_fill_zero_front
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_display_integer_length
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_display_decimal_length
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_increase
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_get_value
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_decrease
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_value
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_placeholder
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_size
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_family_fl
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_family_en
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_family_cn
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_color
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_font_align
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_bg_color
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_move_right_pos_cursor
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_move_left_pos_cursor
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_get_value
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_del_value
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_append_value
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_append_char
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_show_bg
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_screen_scroll
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_text
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_selected
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_size
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_point_offset_y
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_point_offset_x
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_point_offset
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_family_fl
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_family_en
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_family_cn
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_color
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_start_end
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_dir
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_ina
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_get_pos
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_show
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_outside_auto_hide
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_content_font_size
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_content_font_family_fl
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_content_font_family_en
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_content_font_family_cn
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_border_width
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_border_radius
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_border_color
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_bgcolor
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_set_anim_time
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_showing_recursive_by_type
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_color
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_change_icon
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_font_param_call
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_hor_center_widgets
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_obj_recursive_by_type
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_by_str
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_change_lab_text
</UL>

<P><STRONG><a name="[441]"></a>gt_obj_is_untouchability</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_is_untouchability))
<BR><BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_released_handle
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_pressed_handle
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_indev_handler_keypad
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_anim_handler
</UL>

<P><STRONG><a name="[4e0]"></a>gt_obj_next_focus_change</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gt_obj_pos.o(i.gt_obj_next_focus_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = gt_obj_next_focus_change &rArr; gt_obj_set_focus &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_focus
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_next_focus_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_indev_handler_keypad
</UL>

<P><STRONG><a name="[547]"></a>gt_obj_pos_change</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, gt_style.o(i.gt_obj_pos_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_append_area
</UL>
<BR>[Called By]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_area
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_layer_top_widget_area
</UL>

<P><STRONG><a name="[4e1]"></a>gt_obj_prev_focus_change</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, gt_obj_pos.o(i.gt_obj_prev_focus_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = gt_obj_prev_focus_change &rArr; gt_obj_set_focus &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_focus
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_prev_focus_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_indev_handler_keypad
</UL>

<P><STRONG><a name="[58b]"></a>gt_obj_register_id</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_obj.o(i.gt_obj_register_id))
<BR><BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_headevent
</UL>

<P><STRONG><a name="[4ee]"></a>gt_obj_remove_all_event_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gt_event.o(i.gt_obj_remove_all_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gt_obj_remove_all_event_cb &rArr; _free_event_recursive &rArr;  _free_event_recursive (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_event_recursive
</UL>
<BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy_self
</UL>

<P><STRONG><a name="[513]"></a>gt_obj_scroll_to</STRONG> (Thumb, 242 bytes, Stack size 104 bytes, gt_obj_scroll.o(i.gt_obj_scroll_to))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = gt_obj_scroll_to &rArr; gt_anim_del &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_ver
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_hor
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_start
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_set_path_type
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_init
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_speed_to_time
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_del
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_set_process_scroll_xy
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to_y
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to_x
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_handler
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_handler
</UL>

<P><STRONG><a name="[53b]"></a>gt_obj_scroll_to_x</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_obj_scroll.o(i.gt_obj_scroll_to_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = gt_obj_scroll_to_x &rArr; gt_obj_scroll_to &rArr; gt_anim_del &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_screen_event_cb
</UL>

<P><STRONG><a name="[539]"></a>gt_obj_scroll_to_y</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gt_obj_scroll.o(i.gt_obj_scroll_to_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = gt_obj_scroll_to_y &rArr; gt_obj_scroll_to &rArr; gt_anim_del &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_screen_event_cb
</UL>

<P><STRONG><a name="[6cb]"></a>gt_obj_set_area</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, gt_style.o(i.gt_obj_set_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_update_max_area
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_pos_change
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_is_ignore_calc_max_area
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_layer_top_widget_area
</UL>
<BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_y
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_x
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_h
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_create
</UL>

<P><STRONG><a name="[616]"></a>gt_obj_set_bgcolor</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_obj.o(i.gt_obj_set_bgcolor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_obj_set_bgcolor
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
</UL>

<P><STRONG><a name="[354]"></a>gt_obj_set_bubble_notify</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_set_bubble_notify))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
</UL>

<P><STRONG><a name="[6c9]"></a>gt_obj_set_disabled</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gt_style.o(i.gt_obj_set_disabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = gt_obj_set_disabled &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
</UL>

<P><STRONG><a name="[6ca]"></a>gt_obj_set_fixed</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_set_fixed))
<BR><BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
</UL>

<P><STRONG><a name="[6c7]"></a>gt_obj_set_focus</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gt_style.o(i.gt_obj_set_focus))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = gt_obj_set_focus &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_prev_focus_change
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_next_focus_change
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
</UL>

<P><STRONG><a name="[6c8]"></a>gt_obj_set_focus_disabled</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gt_style.o(i.gt_obj_set_focus_disabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = gt_obj_set_focus_disabled &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
</UL>

<P><STRONG><a name="[6cc]"></a>gt_obj_set_grow_invert</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_set_grow_invert))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = gt_obj_set_grow_invert &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_layout_row_grow
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_create
</UL>

<P><STRONG><a name="[6cd]"></a>gt_obj_set_h</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gt_style.o(i.gt_obj_set_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = gt_obj_set_h &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_virtual
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_area
</UL>
<BR>[Called By]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_height
</UL>

<P><STRONG><a name="[353]"></a>gt_obj_set_inside</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_set_inside))
<BR><BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_create
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_close_btn
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_cancel_btn
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_add_icon
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_img_obj
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
</UL>

<P><STRONG><a name="[348]"></a>gt_obj_set_opa</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_set_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gt_obj_set_opa &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog_anim_exec_cb
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_close_btn
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_cancel_btn
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
</UL>

<P><STRONG><a name="[4f0]"></a>gt_obj_set_overflow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_set_overflow))
<BR><BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_inherent_attr_from_parent
</UL>

<P><STRONG><a name="[346]"></a>gt_obj_set_pos</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, gt_style.o(i.gt_obj_set_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = gt_obj_set_pos &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_virtual
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_area
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_move_child_by
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_layer_top_widget_area
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside_invert
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_resize_part_width
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_adjust_img_center_line
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_progress_func
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_progress_func
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureNumSel
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_progress_func
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_progress_func
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_progress_func
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_shutdown
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PowerOff
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_progress_func
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_progress_func
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_progress_func
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[6ce]"></a>gt_obj_set_row_layout</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_set_row_layout))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = gt_obj_set_row_layout &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_layout_row_grow
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_create
</UL>

<P><STRONG><a name="[512]"></a>gt_obj_set_scroll_lr</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_set_scroll_lr))
<BR><BR>[Called By]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_handler
</UL>

<P><STRONG><a name="[511]"></a>gt_obj_set_scroll_ud</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_set_scroll_ud))
<BR><BR>[Called By]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_handler
</UL>

<P><STRONG><a name="[347]"></a>gt_obj_set_size</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gt_style.o(i.gt_obj_set_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = gt_obj_set_size &rArr; gt_obj_size_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_update_max_area
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_virtual
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_size_change
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_is_ignore_calc_max_area
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_height
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_resize_part_width
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_adjust_img_center_line
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureNumSel
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_shutdown
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PowerOff
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[412]"></a>gt_obj_set_state</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_set_state))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_press_btn_handler
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_event_cb
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_change_state_by_trigger_mode
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_selected
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
</UL>

<P><STRONG><a name="[443]"></a>gt_obj_set_untouchability</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_set_untouchability))
<BR><BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_anim_handler
</UL>

<P><STRONG><a name="[4bd]"></a>gt_obj_set_virtual</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_style.o(i.gt_obj_set_virtual))
<BR><BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_create
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_group_create
</UL>

<P><STRONG><a name="[31c]"></a>gt_obj_set_visible</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gt_style.o(i.gt_obj_set_visible))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog_show_anim_start_cb
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog_close_anim_ready_cb
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrandShowpage
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneSecond
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg1_0_cb
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageShow
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg1_0_cb
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_shutdown
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_callback
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg1_0_cb
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg2_0_cb
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svg1_0_cb
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
</UL>

<P><STRONG><a name="[535]"></a>gt_obj_set_x</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gt_style.o(i.gt_obj_set_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = gt_obj_set_x &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_virtual
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_area
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_layer_top_widget_area
</UL>
<BR>[Called By]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scr_anim_exec_x_cb
</UL>

<P><STRONG><a name="[536]"></a>gt_obj_set_y</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gt_style.o(i.gt_obj_set_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = gt_obj_set_y &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_virtual
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_area
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_layer_top_widget_area
</UL>
<BR>[Called By]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scr_anim_exec_y_cb
</UL>

<P><STRONG><a name="[47f]"></a>gt_obj_size_change</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, gt_style.o(i.gt_obj_size_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = gt_obj_size_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_append_area
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
</UL>

<P><STRONG><a name="[40d]"></a>gt_per_255</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_math.o(i.gt_per_255))
<BR><BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend_text
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_blend_rgb565_with_opacity
</UL>

<P><STRONG><a name="[4cf]"></a>gt_png_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gt_png.o(i.gt_png_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gt_png_init &rArr; gt_img_decoder_create &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_set_read_line_cb
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_set_open_cb
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_set_info_cb
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_set_close_cb
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_register
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_create
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_extra_init
</UL>

<P><STRONG><a name="[661]"></a>gt_port_disp_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gt_port_disp.o(i.gt_port_disp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = gt_port_disp_init &rArr; gt_disp_drv_register &rArr; _gt_disp_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_graph_buf_init
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_drv_register
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_drv_init
</UL>
<BR>[Called By]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init
</UL>

<P><STRONG><a name="[662]"></a>gt_port_indev_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gt_port_indev.o(i.gt_port_indev_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gt_port_indev_init &rArr; gt_indev_drv_register &rArr; _gt_timer_create &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_drv_register
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_drv_init
</UL>
<BR>[Called By]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init
</UL>

<P><STRONG><a name="[664]"></a>gt_port_src_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_port_src.o(i.gt_port_src_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gt_port_src_init &rArr; gt_src_init &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_src_init
</UL>
<BR>[Called By]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init
</UL>

<P><STRONG><a name="[663]"></a>gt_port_vf_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gt_port_vf.o(i.gt_port_vf_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gt_port_vf_init &rArr; gt_vf_init &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_vf_init
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_vf_drv_register
</UL>
<BR>[Called By]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init
</UL>

<P><STRONG><a name="[677]"></a>gt_progress_bar_create</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gt_progress_bar.o(i.gt_progress_bar_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = gt_progress_bar_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
</UL>

<P><STRONG><a name="[540]"></a>gt_progress_bar_get_pos</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gt_progress_bar.o(i.gt_progress_bar_get_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_progress_bar_get_pos
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scroll_dir_ver
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scroll_dir_hor
</UL>

<P><STRONG><a name="[3e1]"></a>gt_progress_bar_set_color_act</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gt_progress_bar.o(i.gt_progress_bar_set_color_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_progress_bar_set_color_act &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[679]"></a>gt_progress_bar_set_color_ina</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gt_progress_bar.o(i.gt_progress_bar_set_color_ina))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_progress_bar_set_color_ina &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
</UL>

<P><STRONG><a name="[67a]"></a>gt_progress_bar_set_dir</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gt_progress_bar.o(i.gt_progress_bar_set_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_progress_bar_set_dir &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
</UL>

<P><STRONG><a name="[3df]"></a>gt_progress_bar_set_pos</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gt_progress_bar.o(i.gt_progress_bar_set_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_progress_bar_set_pos &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scroll_dir_ver
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scroll_dir_hor
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[678]"></a>gt_progress_bar_set_start_end</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gt_progress_bar.o(i.gt_progress_bar_set_start_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_progress_bar_set_start_end
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
</UL>

<P><STRONG><a name="[66f]"></a>gt_radio_create</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, gt_radio.o(i.gt_radio_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = gt_radio_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_info_init
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
</UL>

<P><STRONG><a name="[670]"></a>gt_radio_set_font_color</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gt_radio.o(i.gt_radio_set_font_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_radio_set_font_color &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
</UL>

<P><STRONG><a name="[6b4]"></a>gt_radio_set_font_family_cn</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_radio.o(i.gt_radio_set_font_family_cn))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_radio_set_font_family_cn
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
</UL>

<P><STRONG><a name="[672]"></a>gt_radio_set_font_family_en</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_radio.o(i.gt_radio_set_font_family_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_radio_set_font_family_en
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
</UL>

<P><STRONG><a name="[6b5]"></a>gt_radio_set_font_family_fl</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_radio.o(i.gt_radio_set_font_family_fl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_radio_set_font_family_fl
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
</UL>

<P><STRONG><a name="[674]"></a>gt_radio_set_font_point_offset</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_radio.o(i.gt_radio_set_font_point_offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_radio_set_font_point_offset &rArr; gt_radio_set_font_point_offset_y
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_point_offset_y
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_point_offset_x
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
</UL>

<P><STRONG><a name="[6d9]"></a>gt_radio_set_font_point_offset_x</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_radio.o(i.gt_radio_set_font_point_offset_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_radio_set_font_point_offset_x
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_point_offset
</UL>

<P><STRONG><a name="[6da]"></a>gt_radio_set_font_point_offset_y</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_radio.o(i.gt_radio_set_font_point_offset_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_radio_set_font_point_offset_y
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_font_point_offset
</UL>

<P><STRONG><a name="[671]"></a>gt_radio_set_font_size</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gt_radio.o(i.gt_radio_set_font_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_radio_set_font_size
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
</UL>

<P><STRONG><a name="[484]"></a>gt_radio_set_selected</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, gt_radio.o(i.gt_radio_set_selected))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gt_radio_set_selected &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_get_type
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_state
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_state
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
</UL>

<P><STRONG><a name="[673]"></a>gt_radio_set_text</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, gt_radio.o(i.gt_radio_set_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gt_radio_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
</UL>

<P><STRONG><a name="[2b6]"></a>gt_read_data</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, bsp_qspi_flash.o(i.gt_read_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gt_read_data &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_read
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Font_Init
</UL>

<P><STRONG><a name="[345]"></a>gt_rect_create</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, gt_rect.o(i.gt_rect_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = gt_rect_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_white
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
</UL>

<P><STRONG><a name="[34b]"></a>gt_rect_set_bg_color</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gt_rect.o(i.gt_rect_set_bg_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_rect_set_bg_color &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
</UL>

<P><STRONG><a name="[34e]"></a>gt_rect_set_border</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gt_rect.o(i.gt_rect_set_border))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_rect_set_border &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
</UL>

<P><STRONG><a name="[34c]"></a>gt_rect_set_color_border</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gt_rect.o(i.gt_rect_set_color_border))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_rect_set_color_border &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
</UL>

<P><STRONG><a name="[34d]"></a>gt_rect_set_fill</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gt_rect.o(i.gt_rect_set_fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_rect_set_fill &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
</UL>

<P><STRONG><a name="[349]"></a>gt_rect_set_radius</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_rect.o(i.gt_rect_set_radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_rect_set_radius &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
</UL>

<P><STRONG><a name="[4ca]"></a>gt_refr_timer</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gt_refr.o(i.gt_refr_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = gt_refr_timer &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_ref_area
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_get_area
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_check
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_area_pop
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_task_handler
</UL>

<P><STRONG><a name="[5c0]"></a>gt_right_to_left_handler</STRONG> (Thumb, 500 bytes, Stack size 80 bytes, gt_font.o(i.gt_right_to_left_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gt_right_to_left_handler &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_one_char_code_len_get
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_punctuation
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_font_language_split
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_font_lang_and_punctuation_split
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
</UL>

<P><STRONG><a name="[642]"></a>gt_scr_stack_clear</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gt_scr_stack.o(i.gt_scr_stack_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gt_scr_stack_clear &rArr; gt_stack_iterator
</UL>
<BR>[Calls]<UL><LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_iterator
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_clear
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
</UL>
<BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_push_scr_only_st
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>

<P><STRONG><a name="[644]"></a>gt_scr_stack_get_home_scr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gt_scr_stack.o(i.gt_scr_stack_get_home_scr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_scr_stack_get_home_scr
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_prev_scr
</UL>

<P><STRONG><a name="[640]"></a>gt_scr_stack_get_home_scr_id</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gt_scr_stack.o(i.gt_scr_stack_get_home_scr_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_scr_stack_get_home_scr_id
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
</UL>
<BR>[Called By]<UL><LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_pop
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_push_scr_only_st
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_prev_scr
</UL>

<P><STRONG><a name="[45a]"></a>gt_scr_stack_get_init_func</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gt_scr_stack.o(i.gt_scr_stack_get_init_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_scr_stack_get_init_func
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_scr_by_id
</UL>

<P><STRONG><a name="[33b]"></a>gt_scr_stack_get_prev_scr</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gt_scr_stack.o(i.gt_scr_stack_get_prev_scr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_scr_stack_get_prev_scr &rArr; gt_scr_stack_is_home_scr_alive
</UL>
<BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_is_home_scr_alive
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_home_scr_id
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_home_scr
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_peek
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
</UL>

<P><STRONG><a name="[648]"></a>gt_scr_stack_has_before</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gt_scr_stack.o(i.gt_scr_stack_has_before))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gt_scr_stack_has_before &rArr; gt_stack_search_item_from_bottom
</UL>
<BR>[Calls]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_search_item_from_bottom
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
</UL>
<BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_push_scr_only_st
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_judge_obj_exists
</UL>

<P><STRONG><a name="[641]"></a>gt_scr_stack_is_empty</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gt_scr_stack.o(i.gt_scr_stack_is_empty))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_scr_stack_is_empty
</UL>
<BR>[Calls]<UL><LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_is_empty
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
</UL>
<BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_push_scr_only_st
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>

<P><STRONG><a name="[643]"></a>gt_scr_stack_is_home_scr_alive</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gt_scr_stack.o(i.gt_scr_stack_is_home_scr_alive))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_scr_stack_is_home_scr_alive
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
</UL>
<BR>[Called By]<UL><LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_pop
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_push_scr_only_st
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_prev_scr
</UL>

<P><STRONG><a name="[63e]"></a>gt_scr_stack_peek</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gt_scr_stack.o(i.gt_scr_stack_peek))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_scr_stack_peek
</UL>
<BR>[Calls]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_peek
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
</UL>
<BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_push_scr_only_st
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>

<P><STRONG><a name="[63f]"></a>gt_scr_stack_pop</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, gt_scr_stack.o(i.gt_scr_stack_pop))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = gt_scr_stack_pop &rArr; _gt_obj_class_destroy &rArr; _gt_obj_class_destroy_screen &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_is_home_scr_alive
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_home_scr_id
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_pop
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_get_count
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
</UL>
<BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_push_scr_only_st
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>

<P><STRONG><a name="[645]"></a>gt_scr_stack_push</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gt_scr_stack.o(i.gt_scr_stack_push))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_scr_stack_push &rArr; gt_stack_push &rArr; gt_memcpy &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_push
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
</UL>
<BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_push_scr_only_st
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>

<P><STRONG><a name="[5d3]"></a>gt_scr_stack_register_id_list</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_scr_stack.o(i.gt_scr_stack_register_id_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gt_scr_stack_register_id_list &rArr; gt_scr_stack_set_depth &rArr; gt_stack_create &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_set_depth
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[6e7]"></a>gt_scr_stack_set_depth</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gt_scr_stack.o(i.gt_scr_stack_set_depth))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gt_scr_stack_set_depth &rArr; gt_stack_create &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_destroy
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_create
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
</UL>
<BR>[Called By]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_register_id_list
</UL>

<P><STRONG><a name="[649]"></a>gt_scr_stack_set_home_scr</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gt_scr_stack.o(i.gt_scr_stack_set_home_scr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_scr_stack_set_home_scr
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
</UL>
<BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_push_scr_only_st
</UL>

<P><STRONG><a name="[5d4]"></a>gt_scr_stack_set_home_scr_id</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_scr_stack.o(i.gt_scr_stack_set_home_scr_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_scr_stack_set_home_scr_id
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[499]"></a>gt_screen_get_bgcolor</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gt_obj.o(i.gt_screen_get_bgcolor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gt_screen_get_bgcolor &rArr; gt_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_scr_by_direct
</UL>

<P><STRONG><a name="[4bc]"></a>gt_screen_set_bgcolor</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gt_obj.o(i.gt_screen_set_bgcolor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_screen_set_bgcolor
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_create
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureNumSel
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_shutdown
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PowerOff
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
</UL>

<P><STRONG><a name="[4d0]"></a>gt_sjpg_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gt_sjpg.o(i.gt_sjpg_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gt_sjpg_init &rArr; gt_img_decoder_create &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_set_read_line_cb
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_set_open_cb
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_set_info_cb
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_set_close_cb
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_register
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_create
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_extra_init
</UL>

<P><STRONG><a name="[657]"></a>gt_src_get_drv</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gt_hal_src.o(i.gt_src_get_drv))
<BR><BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_open
</UL>

<P><STRONG><a name="[6d5]"></a>gt_src_init</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gt_hal_src.o(i.gt_src_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gt_src_init &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset_0
</UL>
<BR>[Called By]<UL><LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_port_src_init
</UL>

<P><STRONG><a name="[6e0]"></a>gt_stack_clear</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gt_stack.o(i.gt_stack_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_stack_clear &rArr; gt_memset &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_clear
</UL>

<P><STRONG><a name="[6e9]"></a>gt_stack_create</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, gt_stack.o(i.gt_stack_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gt_stack_create &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_set_depth
</UL>

<P><STRONG><a name="[6e8]"></a>gt_stack_destroy</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gt_stack.o(i.gt_stack_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gt_stack_destroy &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_set_depth
</UL>

<P><STRONG><a name="[6e4]"></a>gt_stack_get_count</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gt_stack.o(i.gt_stack_get_count))
<BR><BR>[Called By]<UL><LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_pop
</UL>

<P><STRONG><a name="[6e3]"></a>gt_stack_is_empty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gt_stack.o(i.gt_stack_is_empty))
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_is_empty
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_pop
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_peek_by
</UL>

<P><STRONG><a name="[6ec]"></a>gt_stack_is_full</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gt_stack.o(i.gt_stack_is_full))
<BR><BR>[Called By]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_push
</UL>

<P><STRONG><a name="[6df]"></a>gt_stack_iterator</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, gt_stack.o(i.gt_stack_iterator))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_stack_iterator
</UL>
<BR>[Called By]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_clear
</UL>

<P><STRONG><a name="[6e1]"></a>gt_stack_peek</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gt_stack.o(i.gt_stack_peek))
<BR><BR>[Called By]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_peek
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_get_now_scr_id
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_prev_scr
</UL>

<P><STRONG><a name="[6ea]"></a>gt_stack_peek_by</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gt_stack.o(i.gt_stack_peek_by), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_is_empty
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_item_top_by_index
</UL>

<P><STRONG><a name="[6e5]"></a>gt_stack_pop</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gt_stack.o(i.gt_stack_pop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_stack_pop
</UL>
<BR>[Calls]<UL><LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_is_empty
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_item_top_by_index
</UL>
<BR>[Called By]<UL><LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_pop
</UL>

<P><STRONG><a name="[6e6]"></a>gt_stack_push</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, gt_stack.o(i.gt_stack_push))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gt_stack_push &rArr; gt_memcpy &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_is_full
</UL>
<BR>[Called By]<UL><LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_push
</UL>

<P><STRONG><a name="[6e2]"></a>gt_stack_search_item_from_bottom</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, gt_stack.o(i.gt_stack_search_item_from_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gt_stack_search_item_from_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_has_before
</UL>

<P><STRONG><a name="[5c7]"></a>gt_status_bar_create</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, gt_status_bar.o(i.gt_status_bar_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = gt_status_bar_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_row_layout
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_grow_invert
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_area
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_info_init
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_create
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_resize_part_width
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[3b8]"></a>gt_status_bar_custom_add_icon</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gt_status_bar.o(i.gt_status_bar_custom_add_icon))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = gt_status_bar_custom_add_icon &rArr; gt_img_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_inside
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_by_str
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneSecond
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[3b7]"></a>gt_status_bar_custom_add_text</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_status_bar.o(i.gt_status_bar_custom_add_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = gt_status_bar_custom_add_text &rArr; _create_lab_obj &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneSecond
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[3b6]"></a>gt_status_bar_custom_change_icon</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gt_status_bar.o(i.gt_status_bar_custom_change_icon))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gt_status_bar_custom_change_icon &rArr; gt_img_set_src &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_child
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneSecond
</UL>

<P><STRONG><a name="[3bc]"></a>gt_status_bar_custom_change_text</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gt_status_bar.o(i.gt_status_bar_custom_change_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = gt_status_bar_custom_change_text &rArr; _change_lab_text &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_change_lab_text
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneSecond
</UL>

<P><STRONG><a name="[5cc]"></a>gt_status_bar_custom_find_by</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gt_status_bar.o(i.gt_status_bar_custom_find_by))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gt_status_bar_custom_find_by &rArr; _find_by_str &rArr; gt_img_get_src
</UL>
<BR>[Calls]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_by_str
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[6ed]"></a>gt_status_bar_get_obj</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gt_status_bar.o(i.gt_status_bar_get_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gt_status_bar_get_obj &rArr; _find_obj_recursive_by_type &rArr;  _find_obj_recursive_by_type (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_obj_recursive_by_type
</UL>
<BR>[Called By]<UL><LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_left_change_text
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_show_bg
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_scale
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_height
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_thick_en
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_thick_cn
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_size
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_gray
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_family_fl
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_family_cn
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_color
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_bg_color
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_right_change_text
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_right_add_icon
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_left_add_text
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_find_by
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_change_text
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_change_icon
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_add_text
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_add_icon
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_create
</UL>

<P><STRONG><a name="[5cb]"></a>gt_status_bar_left_add_text</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gt_status_bar.o(i.gt_status_bar_left_add_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = gt_status_bar_left_add_text &rArr; _create_lab_obj &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[6ee]"></a>gt_status_bar_left_change_text</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gt_status_bar.o(i.gt_status_bar_left_change_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = gt_status_bar_left_change_text &rArr; _change_lab_text &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_change_lab_text
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>

<P><STRONG><a name="[583]"></a>gt_status_bar_right_add_icon</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gt_status_bar.o(i.gt_status_bar_right_add_icon))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = gt_status_bar_right_add_icon &rArr; _create_img_obj &rArr; gt_img_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_img_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_callback
</UL>

<P><STRONG><a name="[3b5]"></a>gt_status_bar_right_change_text</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gt_status_bar.o(i.gt_status_bar_right_change_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = gt_status_bar_right_change_text &rArr; _change_lab_text &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_change_lab_text
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneMin
</UL>

<P><STRONG><a name="[3ba]"></a>gt_status_bar_set_bg_color</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gt_status_bar.o(i.gt_status_bar_set_bg_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gt_status_bar_set_bg_color &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneSecond
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_callback
</UL>

<P><STRONG><a name="[3bb]"></a>gt_status_bar_set_font_color</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, gt_status_bar.o(i.gt_status_bar_set_font_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gt_status_bar_set_font_color &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneSecond
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_callback
</UL>

<P><STRONG><a name="[5ce]"></a>gt_status_bar_set_font_family_cn</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_status_bar.o(i.gt_status_bar_set_font_family_cn))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_status_bar_set_font_family_cn &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_font_param_call
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[5cf]"></a>gt_status_bar_set_font_family_fl</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_status_bar.o(i.gt_status_bar_set_font_family_fl))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_status_bar_set_font_family_fl &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_font_param_call
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[5d0]"></a>gt_status_bar_set_font_gray</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_status_bar.o(i.gt_status_bar_set_font_gray))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_status_bar_set_font_gray &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_font_param_call
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[5cd]"></a>gt_status_bar_set_font_size</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_status_bar.o(i.gt_status_bar_set_font_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_status_bar_set_font_size &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_font_param_call
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[5d1]"></a>gt_status_bar_set_font_thick_cn</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_status_bar.o(i.gt_status_bar_set_font_thick_cn))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_status_bar_set_font_thick_cn &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_font_param_call
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[5d2]"></a>gt_status_bar_set_font_thick_en</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_status_bar.o(i.gt_status_bar_set_font_thick_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_status_bar_set_font_thick_en &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_font_param_call
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[5c8]"></a>gt_status_bar_set_height</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gt_status_bar.o(i.gt_status_bar_set_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = gt_status_bar_set_height &rArr; _resize_part_width &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_h
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_w
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_resize_part_width
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[5c9]"></a>gt_status_bar_set_scale</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gt_status_bar.o(i.gt_status_bar_set_scale))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = gt_status_bar_set_scale &rArr; _resize_part_width &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_resize_part_width
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[5ca]"></a>gt_status_bar_show_bg</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gt_status_bar.o(i.gt_status_bar_show_bg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gt_status_bar_show_bg &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
</UL>

<P><STRONG><a name="[5c5]"></a>gt_symbol_get_mask_buf</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gt_symbol.o(i.gt_symbol_get_mask_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gt_symbol_get_mask_buf &rArr; gt_unicode_to_utf8
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcmp
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_unicode_to_utf8
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
</UL>

<P><STRONG><a name="[5c4]"></a>gt_symbol_is_valid_range</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gt_symbol.o(i.gt_symbol_is_valid_range))
<BR><BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_one_word_width
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
</UL>

<P><STRONG><a name="[6f0]"></a>gt_task_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_handler.o(i.gt_task_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gt_task_handler &rArr; _gt_timer_handler &rArr; _gt_timer_for_each_exec &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_task_function
</UL>

<P><STRONG><a name="[4b5]"></a>gt_tick_elapse</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gt_hal_tick.o(i.gt_tick_elapse))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_tick_elapse
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tick_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_task_handler
</UL>

<P><STRONG><a name="[4b6]"></a>gt_tick_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gt_hal_tick.o(i.gt_tick_get))
<BR><BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_start
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_handler_anim_start
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_pressed_handle
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_indev_handler_button
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_set_paused
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_for_each_exec
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tick_elapse
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_restart
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_task_handler
</UL>

<P><STRONG><a name="[3d4]"></a>gt_tick_inc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_hal_tick.o(i.gt_tick_inc))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR5_GLOBAL_IRQHandler
</UL>

<P><STRONG><a name="[6f1]"></a>gt_tlsf_add_pool</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gt_tlsf.o(i.gt_tlsf_add_pool))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gt_tlsf_add_pool &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_create_with_pool
</UL>

<P><STRONG><a name="[6f2]"></a>gt_tlsf_create</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gt_tlsf.o(i.gt_tlsf_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gt_tlsf_create &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_create_with_pool
</UL>

<P><STRONG><a name="[6c4]"></a>gt_tlsf_create_with_pool</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gt_tlsf.o(i.gt_tlsf_create_with_pool))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gt_tlsf_create_with_pool &rArr; gt_tlsf_add_pool &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_create
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_add_pool
</UL>
<BR>[Called By]<UL><LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_mem_init
</UL>

<P><STRONG><a name="[525]"></a>gt_tlsf_free</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gt_tlsf.o(i.gt_tlsf_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb
</UL>
<BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_realloc
</UL>

<P><STRONG><a name="[526]"></a>gt_tlsf_malloc</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gt_tlsf.o(i.gt_tlsf_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adjust_request_size
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_realloc
</UL>

<P><STRONG><a name="[527]"></a>gt_tlsf_realloc</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, gt_tlsf.o(i.gt_tlsf_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_malloc
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_free
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_can_split
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adjust_request_size
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
</UL>

<P><STRONG><a name="[6c3]"></a>gt_txt_check_char_numb</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gt_txt.o(i.gt_txt_check_char_numb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gt_txt_check_char_numb &rArr; gt_gb_check_char &rArr; _gt_gb_font_one_char_code_len_get
</UL>
<BR>[Calls]<UL><LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_utf8_check_char
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_gb_check_char
</UL>
<BR>[Called By]<UL><LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_string_del
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_move_right_pos_cursor
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_move_left_pos_cursor
</UL>

<P><STRONG><a name="[6c2]"></a>gt_txt_cut</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, gt_txt.o(i.gt_txt_cut))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = gt_txt_cut &rArr; gt_txt_string_del &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_string_del
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_del_value
</UL>

<P><STRONG><a name="[6c1]"></a>gt_txt_ins</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, gt_txt.o(i.gt_txt_ins))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = gt_txt_ins &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memmove
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_append_value
</UL>

<P><STRONG><a name="[6f6]"></a>gt_ui_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ui.o(i.gt_ui_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = gt_ui_init &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_load_scr_anim
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_task_function
</UL>

<P><STRONG><a name="[6ef]"></a>gt_unicode_to_utf8</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, gt_font.o(i.gt_unicode_to_utf8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_unicode_to_utf8
</UL>
<BR>[Called By]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_symbol_get_mask_buf
</UL>

<P><STRONG><a name="[6f4]"></a>gt_utf8_check_char</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, gt_font.o(i.gt_utf8_check_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_utf8_check_char
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_check_char_numb
</UL>

<P><STRONG><a name="[6d7]"></a>gt_vf_drv_register</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, gt_hal_vf.o(i.gt_vf_drv_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gt_vf_drv_register
</UL>
<BR>[Calls]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_vf_get_drv
</UL>
<BR>[Called By]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_port_vf_init
</UL>

<P><STRONG><a name="[52a]"></a>gt_vf_get_drv</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gt_hal_vf.o(i.gt_vf_get_drv))
<BR><BR>[Called By]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_vf_drv_register
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_open
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_open_cb
</UL>

<P><STRONG><a name="[6d6]"></a>gt_vf_init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, gt_hal_vf.o(i.gt_vf_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gt_vf_init &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_port_vf_init
</UL>

<P><STRONG><a name="[244]"></a>hardware_task_function</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, main.o(i.hardware_task_function))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = hardware_task_function &rArr; Read_HX712_B &rArr; delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_HX712_B
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_HX712_A
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_control
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getVoltageADCValue
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmLeve1l
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.weak_up)
</UL>
<P><STRONG><a name="[308]"></a>headvisiable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ui.o(i.headvisiable))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = headvisiable &rArr; gt_obj_child_set_prop &rArr;  gt_obj_child_set_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
</UL>

<P><STRONG><a name="[5ee]"></a>history_info_langue</STRONG> (Thumb, 336 bytes, Stack size 96 bytes, library_history.o(i.history_info_langue))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = history_info_langue &rArr; rtc_time_get
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_get
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_history_info
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
</UL>

<P><STRONG><a name="[6f8]"></a>history_write_to_flash</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, library_history.o(i.history_write_to_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_write
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_get
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
</UL>

<P><STRONG><a name="[700]"></a>infusion_apparatus_detection</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, infusion.o(i.infusion_apparatus_detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = infusion_apparatus_detection &rArr; JudgeInstallTube &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judgeIsRunScreen
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calpressureADandValue
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeInstallTube
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_task_function
</UL>

<P><STRONG><a name="[587]"></a>initDrugList</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, library_drug.o(i.initDrugList))
<BR><BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createDrugLib
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDrugListFromFlash
</UL>

<P><STRONG><a name="[588]"></a>initInfusionList</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, library_infusion.o(i.initInfusionList))
<BR><BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createInfusionLib
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readInfusionTubeListFromFlash
</UL>

<P><STRONG><a name="[766]"></a>is_leap_year</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtc.o(i.is_leap_year))
<BR><BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_set
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_get
</UL>

<P><STRONG><a name="[501]"></a>jd_decomp</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, tjpgd.o(i.jd_decomp))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = jd_decomp &rArr; mcu_load &rArr; block_idct
</UL>
<BR>[Calls]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restart
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_output
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_load
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_sjpg_read_line
</UL>

<P><STRONG><a name="[43c]"></a>jd_prepare</STRONG> (Thumb, 676 bytes, Stack size 40 bytes, tjpgd.o(i.jd_prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = jd_prepare &rArr; create_huffman_tbl
</UL>
<BR>[Calls]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_huffman_tbl
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_pool
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_sjpg_read_line
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_open
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_info
</UL>

<P><STRONG><a name="[313]"></a>judgeIsRunScreen</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ui.o(i.judgeIsRunScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = judgeIsRunScreen &rArr; my_judge_obj_exists &rArr; gt_scr_stack_has_before &rArr; gt_stack_search_item_from_bottom
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_judge_obj_exists
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_get_now_scr_id
</UL>
<BR>[Called By]<UL><LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infusion_apparatus_detection
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ThirmSec
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BattetyLowAndDepleteAlarm
</UL>

<P><STRONG><a name="[705]"></a>key_gpio_init</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, gpio_manage.o(i.key_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = key_gpio_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consumption
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vtaskmanage
</UL>

<P><STRONG><a name="[6f7]"></a>led_control</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gpio_manage.o(i.led_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = led_control
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_turn
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_on
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_off
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_task_function
</UL>

<P><STRONG><a name="[706]"></a>led_gpio_init</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, gpio_manage.o(i.led_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = led_gpio_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_remap_config
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[30f]"></a>led_off</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, at32f403a_407_board.o(i.led_off))
<BR><BR>[Called By]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_control
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryManagement_PD
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryManagement
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_detection
</UL>

<P><STRONG><a name="[30e]"></a>led_on</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, at32f403a_407_board.o(i.led_on))
<BR><BR>[Called By]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_control
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryManagement_PD
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryManagement
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_detection
</UL>

<P><STRONG><a name="[310]"></a>led_turn</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, at32f403a_407_board.o(i.led_turn))
<BR><BR>[Called By]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_control
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryManagement_PD
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryManagement
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_EVENT
</UL>

<P><STRONG><a name="[70a]"></a>lodepng_add_text</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lodepng.o(i.lodepng_add_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lodepng_add_text
</UL>
<BR>[Calls]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_tEXt
</UL>

<P><STRONG><a name="[5a2]"></a>lodepng_chunk_append</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lodepng.o(i.lodepng_chunk_append))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = lodepng_chunk_append &rArr; lodepng_realloc &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_length
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_realloc
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_addofl
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[5a3]"></a>lodepng_chunk_check_crc</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lodepng.o(i.lodepng_chunk_check_crc))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lodepng_chunk_check_crc &rArr; lodepng_crc32
</UL>
<BR>[Calls]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_crc32
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_length
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_read32bitInt
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[592]"></a>lodepng_chunk_length</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lodepng.o(i.lodepng_chunk_length))
<BR><BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_read32bitInt
</UL>
<BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_inspect
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_next_const
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_check_crc
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_append
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[5a4]"></a>lodepng_chunk_next_const</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, lodepng.o(i.lodepng_chunk_next_const))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lodepng_chunk_next_const
</UL>
<BR>[Calls]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_length
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_addofl
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[593]"></a>lodepng_chunk_type_equals</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lodepng.o(i.lodepng_chunk_type_equals))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lodepng_chunk_type_equals
</UL>
<BR>[Calls]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_inspect
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[70e]"></a>lodepng_clear_icc</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lodepng.o(i.lodepng_clear_icc))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lodepng_clear_icc &rArr; string_cleanup &rArr; lodepng_free &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_cleanup
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
</UL>
<BR>[Called By]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_info_cleanup
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_iCCP
</UL>

<P><STRONG><a name="[710]"></a>lodepng_color_mode_copy</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lodepng.o(i.lodepng_color_mode_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lodepng_color_mode_copy &rArr; lodepng_palette_clear &rArr; lodepng_free &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_palette_clear
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_memcpy
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_decode
</UL>

<P><STRONG><a name="[721]"></a>lodepng_color_mode_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lodepng.o(i.lodepng_color_mode_init))
<BR><BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_state_init
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_info_init
</UL>

<P><STRONG><a name="[712]"></a>lodepng_convert</STRONG> (Thumb, 500 bytes, Stack size 152 bytes, lodepng.o(i.lodepng_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = lodepng_convert &rArr; color_tree_cleanup &rArr;  color_tree_cleanup (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_get_raw_size
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgba8ToPixel
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgba16ToPixel
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_memcpy
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_color_mode_equal
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPixelColorsRGBA8
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPixelColorsRGB8
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPixelColorRGBA8
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPixelColorRGBA16
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_tree_init
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_tree_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_decode
</UL>

<P><STRONG><a name="[70d]"></a>lodepng_crc32</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, lodepng.o(i.lodepng_crc32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lodepng_crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_inspect
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_check_crc
</UL>

<P><STRONG><a name="[717]"></a>lodepng_decode</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, lodepng.o(i.lodepng_decode))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = lodepng_decode &rArr; decodeGeneric &rArr; postProcessScanlines &rArr; Adam7_deinterlace &rArr; Adam7_getpassvalues
</UL>
<BR>[Calls]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_get_raw_size
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_convert
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_color_mode_copy
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_color_mode_equal
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>
<BR>[Called By]<UL><LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_decode_memory
</UL>

<P><STRONG><a name="[437]"></a>lodepng_decode32</STRONG> (Thumb, 18 bytes, Stack size 32 bytes, lodepng.o(i.lodepng_decode32))
<BR><BR>[Stack]<UL><LI>Max Depth = 1028<LI>Call Chain = lodepng_decode32 &rArr; lodepng_decode_memory &rArr; lodepng_decode &rArr; decodeGeneric &rArr; postProcessScanlines &rArr; Adam7_deinterlace &rArr; Adam7_getpassvalues
</UL>
<BR>[Calls]<UL><LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_decode_memory
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_png_open
</UL>

<P><STRONG><a name="[718]"></a>lodepng_decode_memory</STRONG> (Thumb, 70 bytes, Stack size 384 bytes, lodepng.o(i.lodepng_decode_memory))
<BR><BR>[Stack]<UL><LI>Max Depth = 996<LI>Call Chain = lodepng_decode_memory &rArr; lodepng_decode &rArr; decodeGeneric &rArr; postProcessScanlines &rArr; Adam7_deinterlace &rArr; Adam7_getpassvalues
</UL>
<BR>[Calls]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_state_init
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_state_cleanup
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_decode
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_decode32
</UL>

<P><STRONG><a name="[724]"></a>lodepng_decoder_settings_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lodepng.o(i.lodepng_decoder_settings_init))
<BR><BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_state_init
</UL>

<P><STRONG><a name="[7eb]"></a>lodepng_decompress_settings_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lodepng.o(i.lodepng_decompress_settings_init), UNUSED)

<P><STRONG><a name="[438]"></a>lodepng_error_text</STRONG> (Thumb, 3656 bytes, Stack size 0 bytes, lodepng.o(i.lodepng_error_text))
<BR><BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_png_open
</UL>

<P><STRONG><a name="[5a5]"></a>lodepng_get_bpp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lodepng.o(i.lodepng_get_bpp))
<BR><BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;postProcessScanlines
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_pixel_overflow
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[5a8]"></a>lodepng_get_raw_size</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lodepng.o(i.lodepng_get_raw_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lodepng_get_raw_size &rArr; lodepng_get_bpp_lct
</UL>
<BR>[Calls]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_get_bpp_lct
</UL>
<BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_decode
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_convert
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[71f]"></a>lodepng_info_cleanup</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lodepng.o(i.lodepng_info_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lodepng_info_cleanup &rArr; LodePNGText_cleanup &rArr; string_cleanup &rArr; lodepng_free &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_palette_clear
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_clear_icc
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LodePNGUnknownChunks_cleanup
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LodePNGText_cleanup
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LodePNGIText_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_state_cleanup
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_inspect
</UL>

<P><STRONG><a name="[720]"></a>lodepng_info_init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, lodepng.o(i.lodepng_info_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lodepng_info_init
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_color_mode_init
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LodePNGUnknownChunks_init
</UL>
<BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_state_init
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_inspect
</UL>

<P><STRONG><a name="[590]"></a>lodepng_inspect</STRONG> (Thumb, 382 bytes, Stack size 32 bytes, lodepng.o(i.lodepng_inspect))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lodepng_inspect &rArr; lodepng_info_cleanup &rArr; LodePNGText_cleanup &rArr; string_cleanup &rArr; lodepng_free &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_info_init
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_info_cleanup
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_crc32
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_type_equals
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_length
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_read32bitInt
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[4fa]"></a>lodepng_load_file</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, lodepng.o(i.lodepng_load_file))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lodepng_load_file &rArr; lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_tell
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_seek
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_read
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_open
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_close
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_png_open
</UL>

<P><STRONG><a name="[711]"></a>lodepng_palette_clear</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lodepng.o(i.lodepng_palette_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lodepng_palette_clear &rArr; lodepng_free &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
</UL>
<BR>[Called By]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_state_cleanup
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_info_cleanup
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_color_mode_copy
</UL>

<P><STRONG><a name="[71a]"></a>lodepng_state_cleanup</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lodepng.o(i.lodepng_state_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lodepng_state_cleanup &rArr; lodepng_info_cleanup &rArr; LodePNGText_cleanup &rArr; string_cleanup &rArr; lodepng_free &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_palette_clear
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_info_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_decode_memory
</UL>

<P><STRONG><a name="[719]"></a>lodepng_state_init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lodepng.o(i.lodepng_state_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lodepng_state_init &rArr; lodepng_info_init
</UL>
<BR>[Calls]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_info_init
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_decoder_settings_init
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_color_mode_init
</UL>
<BR>[Called By]<UL><LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_decode_memory
</UL>

<P><STRONG><a name="[726]"></a>low_power_consumption</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, sleep_mode.o(i.low_power_consumption))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = low_power_consumption &rArr; weak_up &rArr; vTaskStartScheduler &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_flag_get
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwc_wakeup_pin_enable
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwc_standby_mode_enter
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwc_flag_get
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwc_flag_clear
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_init
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config_
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_config
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weak_up
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_weak_up_process
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[245]"></a>lvgl_task_function</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, main.o(i.lvgl_task_function))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = lvgl_task_function &rArr; infusion_apparatus_detection &rArr; JudgeInstallTube &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_task_handler
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwc_voltage_regulate_set
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_init
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_init
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_xmc_init
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr5_init
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infusion_apparatus_detection
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_ui_init
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detection_motor_start_point_and_update_pressure
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Font_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.weak_up)
</UL>
<P><STRONG><a name="[58]"></a>main</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = main &rArr; low_power_consumption &rArr; weak_up &rArr; vTaskStartScheduler &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consumption
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[375]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_task_function
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createInfusionLib
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createDrugLib
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readInfusionTubeListFromFlash
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDrugListFromFlash
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>

<P><STRONG><a name="[737]"></a>motor_gpio_init</STRONG> (Thumb, 332 bytes, Stack size 48 bytes, motor_manage.o(i.motor_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = motor_gpio_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
</UL>

<P><STRONG><a name="[3ce]"></a>motor_init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, motor_manage.o(i.motor_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = motor_init &rArr; delay_ms &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmc_fillCRC8Table
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stepmotor_default_para_init
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_usart_init
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_tmr_init
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_gpio_init
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_writeInt
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_GLOBAL_IRQHandler
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
</UL>

<P><STRONG><a name="[73a]"></a>motor_tmr_init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, motor_manage.o(i.motor_tmr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = motor_tmr_init &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_period_buffer_enable
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_interrupt_enable
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_cnt_dir_set
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_base_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
</UL>

<P><STRONG><a name="[739]"></a>motor_usart_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, motor_manage.o(i.motor_usart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = motor_usart_init &rArr; usart_init &rArr; crm_clocks_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmitter_enable
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_selection_config
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
</UL>

<P><STRONG><a name="[704]"></a>my_get_now_scr_id</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gt_scr_stack.o(i.my_get_now_scr_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_get_now_scr_id
</UL>
<BR>[Calls]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_peek
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_get_scr_info
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judgeIsRunScreen
</UL>

<P><STRONG><a name="[334]"></a>my_judge_obj_exists</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, gt_scr_stack.o(i.my_judge_obj_exists))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = my_judge_obj_exists &rArr; gt_scr_stack_has_before &rArr; gt_stack_search_item_from_bottom
</UL>
<BR>[Calls]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_has_before
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_EVENT
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judgeIsRunScreen
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeInstallTube
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect6_0_cb
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect5_0_cb
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[676]"></a>my_rect_set_feedback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gt_rect.o(i.my_rect_set_feedback))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
</UL>

<P><STRONG><a name="[30a]"></a>my_set_obj_title</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_obj.o(i.my_set_obj_title))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = my_set_obj_title &rArr; gt_status_bar_left_change_text &rArr; _change_lab_text &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_left_change_text
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureNumSel
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Back
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;img1_0_cb
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_shutdown
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PowerOff
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateAndTime
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
</UL>

<P><STRONG><a name="[304]"></a>not_first_start_write_history_info</STRONG> (Thumb, 378 bytes, Stack size 632 bytes, fatfs_history.o(i.not_first_start_write_history_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;history_write_to_flash
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_get
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Choice
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterTimeMode
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSquenceMode
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterSpeedMode
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterDrugLibrary
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterDripMode
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnterBWMode
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureLevelChange
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoOperateTime_state
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NearFinishTime_state
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoLockTime_state
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn4_0_cb
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn3_0_cb
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect5_0_cb
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rect4_0_cb
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeAlarm
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StandbyBegin
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[5fa]"></a>nvic_irq_enable</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, at32f403a_407_misc.o(i.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_config
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr4_init
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_button_exint_init
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tx_pwm_init
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tmr_init
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_rx_receiver_init
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_tmr_init
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr5_init
</UL>

<P><STRONG><a name="[5f9]"></a>nvic_priority_group_config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f403a_407_misc.o(i.nvic_priority_group_config))
<BR><BR>[Called By]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_config
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr4_init
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_button_exint_init
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tx_pwm_init
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tmr_init
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_rx_receiver_init
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_tmr_init
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr5_init
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weak_up
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vtaskmanage
</UL>

<P><STRONG><a name="[7bf]"></a>nvic_vector_table_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_misc.o(i.nvic_vector_table_set))
<BR><BR>[Called By]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weak_up
</UL>

<P><STRONG><a name="[745]"></a>power_button_exint_init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gpio_manage.o(i.power_button_exint_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = power_button_exint_init &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_init
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_default_para_init
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_exint_line_config
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[5ec]"></a>process_adc_A_val</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, battery_manage.o(i.process_adc_A_val))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = process_adc_A_val
</UL>
<BR>[Called By]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getVoltageADCValue
</UL>

<P><STRONG><a name="[753]"></a>pvPortMalloc</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, heap_4.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[5f4]"></a>pwc_battery_powered_domain_access</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_pwc.o(i.pwc_battery_powered_domain_access))
<BR><BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config_
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_set
</UL>

<P><STRONG><a name="[72b]"></a>pwc_flag_clear</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at32f403a_407_pwc.o(i.pwc_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consumption
</UL>

<P><STRONG><a name="[729]"></a>pwc_flag_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f403a_407_pwc.o(i.pwc_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consumption
</UL>

<P><STRONG><a name="[72e]"></a>pwc_standby_mode_enter</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, at32f403a_407_pwc.o(i.pwc_standby_mode_enter))
<BR><BR>[Called By]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consumption
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vtaskmanage
</UL>

<P><STRONG><a name="[730]"></a>pwc_voltage_regulate_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_pwc.o(i.pwc_voltage_regulate_set))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_task_function
</UL>

<P><STRONG><a name="[728]"></a>pwc_wakeup_pin_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f403a_407_pwc.o(i.pwc_wakeup_pin_enable))
<BR><BR>[Called By]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consumption
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vtaskmanage
</UL>

<P><STRONG><a name="[752]"></a>pxPortInitialiseStack</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pxPortInitialiseStack
</UL>
<BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[2c2]"></a>r_dat_bat</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_qspi_flash.o(i.r_dat_bat))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = r_dat_bat &rArr; spiflash_read &rArr; spi_bytes_read
</UL>
<BR>[Calls]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnicodeToGBK
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GBKToUnicode
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_GetLatin
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_GetChinese
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_GetASCII
</UL>

<P><STRONG><a name="[3ac]"></a>readDrugListFromFlash</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, infusion.o(i.readDrugListFromFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = readDrugListFromFlash &rArr; addDrugNode &rArr; WriteDrugListToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initDrugList
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addDrugNode
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
</UL>

<P><STRONG><a name="[3ab]"></a>readInfusionTubeListFromFlash</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, infusion.o(i.readInfusionTubeListFromFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = readInfusionTubeListFromFlash &rArr; usb_print &rArr; usb_vcp_send_data &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_print
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initInfusionList
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addInfusionNode
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
</UL>

<P><STRONG><a name="[225]"></a>read_cb</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, main.o(i.read_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = read_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_port_indev.o(i.gt_port_indev_init)
</UL>
<P><STRONG><a name="[226]"></a>read_cb_btn</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(i.read_cb_btn))
<BR>[Address Reference Count : 1]<UL><LI> gt_port_indev.o(i.gt_port_indev_init)
</UL>
<P><STRONG><a name="[36a]"></a>removeDrugNodeById</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, library_drug.o(i.removeDrugNodeById))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = removeDrugNodeById &rArr; WriteDrugListToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDrugListToFlash
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTheDrugNodeName
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drugaffirm
</UL>

<P><STRONG><a name="[31e]"></a>removeInfusionNodeByName</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, library_infusion.o(i.removeInfusionNodeByName))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = removeInfusionNodeByName &rArr; writeInfusionTubeListToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeInfusionTubeListToFlash
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTheTubeNodeName
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brandaffirm
</UL>

<P><STRONG><a name="[5bf]"></a>right_to_left_lan_get</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gt_font.o(i.right_to_left_lan_get))
<BR><BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
</UL>

<P><STRONG><a name="[72d]"></a>rtc_alarm_config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, sleep_mode.o(i.rtc_alarm_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtc_alarm_config &rArr; rtc_alarm_set
</UL>
<BR>[Calls]<UL><LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_wait_config_finish
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_flag_get
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_flag_clear
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_counter_get
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_set
</UL>
<BR>[Called By]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consumption
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vtaskmanage
</UL>

<P><STRONG><a name="[75a]"></a>rtc_alarm_set</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, at32f403a_407_rtc.o(i.rtc_alarm_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rtc_alarm_set
</UL>
<BR>[Called By]<UL><LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_config
</UL>

<P><STRONG><a name="[72c]"></a>rtc_config_</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, sleep_mode.o(i.rtc_config_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtc_config_ &rArr; bpr_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bpr_reset
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_rtc_clock_select
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_rtc_clock_enable
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_flag_get
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clock_source_enable
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_wait_update_finish
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_wait_config_finish
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_divider_set
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwc_battery_powered_domain_access
</UL>
<BR>[Called By]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consumption
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vtaskmanage
</UL>

<P><STRONG><a name="[759]"></a>rtc_counter_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f403a_407_rtc.o(i.rtc_counter_get))
<BR><BR>[Called By]<UL><LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_config
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_get
</UL>

<P><STRONG><a name="[767]"></a>rtc_counter_set</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, at32f403a_407_rtc.o(i.rtc_counter_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rtc_counter_set
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_set
</UL>

<P><STRONG><a name="[761]"></a>rtc_divider_set</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, at32f403a_407_rtc.o(i.rtc_divider_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rtc_divider_set
</UL>
<BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config_
</UL>

<P><STRONG><a name="[3c1]"></a>rtc_flag_clear</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f403a_407_rtc.o(i.rtc_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_config
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[3c0]"></a>rtc_flag_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f403a_407_rtc.o(i.rtc_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_config
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consumption
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[762]"></a>rtc_init</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, rtc.o(i.rtc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rtc_init &rArr; rtc_time_set &rArr; crm_periph_clock_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bpr_tamper_pin_enable
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bpr_reset
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bpr_data_write
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bpr_data_read
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_init
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_rtc_clock_select
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_rtc_clock_enable
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_flag_get
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clock_source_enable
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_wait_update_finish
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_wait_config_finish
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_interrupt_enable
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_flag_clear
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_divider_set
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwc_battery_powered_domain_access
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_set
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[764]"></a>rtc_interrupt_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f403a_407_rtc.o(i.rtc_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[3b4]"></a>rtc_time_get</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, rtc.o(i.rtc_time_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rtc_time_get
</UL>
<BR>[Calls]<UL><LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_counter_get
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_leap_year
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneMin
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;history_write_to_flash
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;history_info_langue
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
</UL>

<P><STRONG><a name="[373]"></a>rtc_time_set</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, rtc.o(i.rtc_time_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rtc_time_set &rArr; crm_periph_clock_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_wait_config_finish
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_counter_set
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwc_battery_powered_domain_access
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_leap_year
</UL>
<BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[75b]"></a>rtc_wait_config_finish</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_rtc.o(i.rtc_wait_config_finish))
<BR><BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config_
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_config
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_set
</UL>

<P><STRONG><a name="[760]"></a>rtc_wait_update_finish</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_rtc.o(i.rtc_wait_update_finish))
<BR><BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config_
</UL>

<P><STRONG><a name="[72f]"></a>rtc_weak_up_process</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sleep_mode.o(i.rtc_weak_up_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = rtc_weak_up_process &rArr; gpio_bat_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_control
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_init
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepStart
</UL>
<BR>[Called By]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consumption
</UL>

<P><STRONG><a name="[768]"></a>save_infusion_and_drug_to_flash</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(i.save_infusion_and_drug_to_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = save_infusion_and_drug_to_flash &rArr; writeInfusionTubeListToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeInfusionTubeListToFlash
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDrugListToFlash
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vtaskmanage
</UL>

<P><STRONG><a name="[90]"></a>sendDownKeyDownMessageToLvgl</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, key_manage.o(i.sendDownKeyDownMessageToLvgl))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sendDownKeyDownMessageToLvgl &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.fast_task_function)
</UL>
<P><STRONG><a name="[92]"></a>sendPowerKeyDownMessageToLvgl</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, key_manage.o(i.sendPowerKeyDownMessageToLvgl))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sendPowerKeyDownMessageToLvgl &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.fast_task_function)
</UL>
<P><STRONG><a name="[93]"></a>sendPowerKeyLongDownMessageToLvgl</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, key_manage.o(i.sendPowerKeyLongDownMessageToLvgl))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sendPowerKeyLongDownMessageToLvgl &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.fast_task_function)
</UL>
<P><STRONG><a name="[8c]"></a>sendUpkeyDownMessageToLvgl</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, key_manage.o(i.sendUpkeyDownMessageToLvgl))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sendUpkeyDownMessageToLvgl &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.fast_task_function)
</UL>
<P><STRONG><a name="[8d]"></a>sendUpkeyLongDownMessageToLvgl</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, key_manage.o(i.sendUpkeyLongDownMessageToLvgl))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sendUpkeyLongDownMessageToLvgl &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.fast_task_function)
</UL>
<P><STRONG><a name="[8e]"></a>sendUpkeyUpMessageToLvgl</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, key_manage.o(i.sendUpkeyUpMessageToLvgl))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sendUpkeyUpMessageToLvgl &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.fast_task_function)
</UL>
<P><STRONG><a name="[769]"></a>sonic_rx_receiver_init</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, ultrasonic.o(i.sonic_rx_receiver_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sonic_rx_receiver_init &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_interrupt_enable
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_init
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exint_default_para_init
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ultrasonic_init
</UL>

<P><STRONG><a name="[76a]"></a>sonic_tmr_init</STRONG> (Thumb, 184 bytes, Stack size 8 bytes, ultrasonic.o(i.sonic_tmr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sonic_tmr_init &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_period_buffer_enable
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_interrupt_enable
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_flag_clear
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_value_set
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_cnt_dir_set
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_base_init
</UL>
<BR>[Called By]<UL><LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ultrasonic_init
</UL>

<P><STRONG><a name="[76c]"></a>sonic_tx_pwm_init</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, ultrasonic.o(i.sonic_tx_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = sonic_tx_pwm_init &rArr; tmr_output_channel_config
</UL>
<BR>[Calls]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_repetition_counter_set
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_enable
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_default_para_init
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_channel_config
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_one_cycle_mode_enable
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_interrupt_enable
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_cnt_dir_set
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_clock_source_div_set
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_channel_value_set
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_base_init
</UL>
<BR>[Called By]<UL><LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ultrasonic_init
</UL>

<P><STRONG><a name="[6dc]"></a>spi_byte_read</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_qspi_flash.o(i.spi_byte_read))
<BR><BR>[Called By]<UL><LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read_sr1
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_read_data
</UL>

<P><STRONG><a name="[6db]"></a>spi_byte_write</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, bsp_qspi_flash.o(i.spi_byte_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_flag_get
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_dma_transmitter_enable
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_dma_receiver_enable
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_transmit
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_write_enable
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_sector_erase
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read_sr1
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_page_write
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_read_data
</UL>

<P><STRONG><a name="[778]"></a>spi_bytes_read</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bsp_qspi_flash.o(i.spi_bytes_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_bytes_read
</UL>
<BR>[Calls]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_flag_get
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_transmit
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read
</UL>

<P><STRONG><a name="[779]"></a>spi_bytes_write</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, bsp_qspi_flash.o(i.spi_bytes_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_bytes_write
</UL>
<BR>[Calls]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_flag_get
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_transmit
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_page_write
</UL>

<P><STRONG><a name="[77a]"></a>spi_default_para_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f403a_407_spi.o(i.spi_default_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_init
</UL>

<P><STRONG><a name="[77c]"></a>spi_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_spi.o(i.spi_enable))
<BR><BR>[Called By]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_init
</UL>

<P><STRONG><a name="[777]"></a>spi_i2s_data_receive</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f403a_407_spi.o(i.spi_i2s_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_bytes_write
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_bytes_read
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>

<P><STRONG><a name="[775]"></a>spi_i2s_data_transmit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f403a_407_spi.o(i.spi_i2s_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_bytes_write
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_bytes_read
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>

<P><STRONG><a name="[774]"></a>spi_i2s_dma_receiver_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_spi.o(i.spi_i2s_dma_receiver_enable))
<BR><BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>

<P><STRONG><a name="[773]"></a>spi_i2s_dma_transmitter_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_spi.o(i.spi_i2s_dma_transmitter_enable))
<BR><BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>

<P><STRONG><a name="[776]"></a>spi_i2s_flag_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at32f403a_407_spi.o(i.spi_i2s_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_bytes_write
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_bytes_read
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>

<P><STRONG><a name="[77b]"></a>spi_init</STRONG> (Thumb, 230 bytes, Stack size 0 bytes, at32f403a_407_spi.o(i.spi_init))
<BR><BR>[Called By]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_init
</UL>

<P><STRONG><a name="[227]"></a>spi_wr</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(i.spi_wr))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = spi_wr &rArr; spiflash_read &rArr; spi_bytes_read
</UL>
<BR>[Calls]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_port_vf.o(i.gt_port_vf_init)
</UL>
<P><STRONG><a name="[731]"></a>spiflash_init</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, bsp_qspi_flash.o(i.spiflash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = spiflash_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_task_function
</UL>

<P><STRONG><a name="[77d]"></a>spiflash_page_write</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, bsp_qspi_flash.o(i.spiflash_page_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_write_enable
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_wait_busy
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_bytes_write
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>
<BR>[Called By]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_write_nocheck
</UL>

<P><STRONG><a name="[5ed]"></a>spiflash_read</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, bsp_qspi_flash.o(i.spiflash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = spiflash_read &rArr; spi_bytes_read
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_bytes_read
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_wr
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_write
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_dat_bat
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_history_info
</UL>

<P><STRONG><a name="[780]"></a>spiflash_read_sr1</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bsp_qspi_flash.o(i.spiflash_read_sr1))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_read
</UL>
<BR>[Called By]<UL><LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_wait_busy
</UL>

<P><STRONG><a name="[781]"></a>spiflash_sector_erase</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bsp_qspi_flash.o(i.spiflash_sector_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = spiflash_sector_erase &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_write_enable
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_wait_busy
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_write
</UL>

<P><STRONG><a name="[77f]"></a>spiflash_wait_busy</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_qspi_flash.o(i.spiflash_wait_busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read_sr1
</UL>
<BR>[Called By]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_sector_erase
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_page_write
</UL>

<P><STRONG><a name="[6f9]"></a>spiflash_write</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, bsp_qspi_flash.o(i.spiflash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_write_nocheck
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_sector_erase
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;history_write_to_flash
</UL>

<P><STRONG><a name="[77e]"></a>spiflash_write_enable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_qspi_flash.o(i.spiflash_write_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spiflash_write_enable &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_byte_write
</UL>
<BR>[Called By]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_sector_erase
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_page_write
</UL>

<P><STRONG><a name="[782]"></a>spiflash_write_nocheck</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bsp_qspi_flash.o(i.spiflash_write_nocheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_page_write
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_write
</UL>

<P><STRONG><a name="[738]"></a>stepmotor_default_para_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, motor_manage.o(i.stepmotor_default_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
</UL>

<P><STRONG><a name="[783]"></a>sys_init</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, init_manage.o(i.sys_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = sys_init &rArr; gpio_bat_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_config
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_hardware_connect_init
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ultrasonic_init
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr4_init
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_HX711_init
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_button_exint_init
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_gpio_init
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_init
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_switch_init
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_init
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bat_control
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_init
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weak_up
</UL>

<P><STRONG><a name="[727]"></a>system_clock_config</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, clock_manage.o(i.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = system_clock_config &rArr; system_core_clock_update
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_reset
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_pll_config
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_flag_get
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clock_source_enable
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_auto_step_mode_enable
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb2_div_set
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb1_div_set
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_ahb_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consumption
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weak_up
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vtaskmanage
</UL>

<P><STRONG><a name="[790]"></a>system_core_clock_update</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, system_at32f403a_407.o(i.system_core_clock_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = system_core_clock_update
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[5ab]"></a>systick_clock_source_config</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at32f403a_407_misc.o(i.systick_clock_source_config))
<BR><BR>[Called By]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[3f2]"></a>tmc_CRC8</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, crc.o(i.tmc_CRC8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmc_CRC8
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_writeInt
</UL>

<P><STRONG><a name="[73b]"></a>tmc_fillCRC8Table</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, crc.o(i.tmc_fillCRC8Table))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tmc_fillCRC8Table
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flipBitsInBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
</UL>

<P><STRONG><a name="[564]"></a>tmr12_init</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, timer_manage.o(i.tmr12_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = tmr12_init &rArr; tmr_output_channel_config
</UL>
<BR>[Calls]<UL><LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_period_buffer_enable
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_default_para_init
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_channel_config
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_channel_buffer_enable
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_cnt_dir_set
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_clock_source_div_set
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_channel_value_set
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_base_init
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_init
</UL>

<P><STRONG><a name="[54a]"></a>tmr13_init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, timer_manage.o(i.tmr13_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = tmr13_init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_period_value_get
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_period_buffer_enable
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_default_para_init
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_channel_config
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_output_channel_buffer_enable
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_cnt_dir_set
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_clock_source_div_set
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_channel_value_set
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_base_init
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xmc_init
</UL>

<P><STRONG><a name="[786]"></a>tmr4_init</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, timer_manage.o(i.tmr4_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tmr4_init &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_period_buffer_enable
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_interrupt_enable
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_cnt_dir_set
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_base_init
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[733]"></a>tmr5_init</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, timer_manage.o(i.tmr5_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tmr5_init &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_period_buffer_enable
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_interrupt_enable
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_cnt_dir_set
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_base_init
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_task_function
</UL>

<P><STRONG><a name="[39d]"></a>tmr_base_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_base_init))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr13_init
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr4_init
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr12_init
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tx_pwm_init
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tmr_init
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_tmr_init
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorCALIBRRun
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr5_init
</UL>

<P><STRONG><a name="[3ae]"></a>tmr_channel_value_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_channel_value_set))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr13_init
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr12_init
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tx_pwm_init
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn4_0_cb
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn3_0_cb
</UL>

<P><STRONG><a name="[76e]"></a>tmr_clock_source_div_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_clock_source_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr13_init
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr12_init
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tx_pwm_init
</UL>

<P><STRONG><a name="[73c]"></a>tmr_cnt_dir_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_cnt_dir_set))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr13_init
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr4_init
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr12_init
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tx_pwm_init
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tmr_init
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_tmr_init
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr5_init
</UL>

<P><STRONG><a name="[317]"></a>tmr_counter_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_counter_enable))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr13_init
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr4_init
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr12_init
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepWork
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepStop
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepStart
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tx_pwm_init
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tmr_init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_GLOBAL_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_GLOBAL_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_OVF_TMR10_IRQHandler
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_tmr_init
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorCALIBRRun
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr5_init
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vtaskmanage
</UL>

<P><STRONG><a name="[76b]"></a>tmr_counter_value_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_counter_value_set))
<BR><BR>[Called By]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tmr_init
</UL>

<P><STRONG><a name="[3d3]"></a>tmr_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_GLOBAL_IRQHandler
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tmr_init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_GLOBAL_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_GLOBAL_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_OVF_TMR10_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_GLOBAL_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR5_GLOBAL_IRQHandler
</UL>

<P><STRONG><a name="[3d0]"></a>tmr_flag_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR4_GLOBAL_IRQHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_GLOBAL_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_GLOBAL_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_OVF_TMR10_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_GLOBAL_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR5_GLOBAL_IRQHandler
</UL>

<P><STRONG><a name="[3d1]"></a>tmr_interrupt_enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr4_init
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tx_pwm_init
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tmr_init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR6_GLOBAL_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_GLOBAL_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_OVF_TMR10_IRQHandler
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_tmr_init
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr5_init
</UL>

<P><STRONG><a name="[771]"></a>tmr_one_cycle_mode_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_one_cycle_mode_enable))
<BR><BR>[Called By]<UL><LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tx_pwm_init
</UL>

<P><STRONG><a name="[792]"></a>tmr_output_channel_buffer_enable</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_output_channel_buffer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr13_init
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr12_init
</UL>

<P><STRONG><a name="[770]"></a>tmr_output_channel_config</STRONG> (Thumb, 202 bytes, Stack size 20 bytes, at32f403a_407_tmr.o(i.tmr_output_channel_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = tmr_output_channel_config
</UL>
<BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr13_init
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr12_init
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tx_pwm_init
</UL>

<P><STRONG><a name="[76f]"></a>tmr_output_default_para_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_output_default_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr13_init
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr12_init
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tx_pwm_init
</UL>

<P><STRONG><a name="[772]"></a>tmr_output_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_output_enable))
<BR><BR>[Called By]<UL><LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tx_pwm_init
</UL>

<P><STRONG><a name="[73d]"></a>tmr_period_buffer_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_period_buffer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr13_init
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr4_init
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr12_init
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tmr_init
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_tmr_init
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr5_init
</UL>

<P><STRONG><a name="[3ad]"></a>tmr_period_value_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_period_value_get))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr13_init
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ObDefValue
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn4_0_cb
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn3_0_cb
</UL>

<P><STRONG><a name="[76d]"></a>tmr_repetition_counter_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_tmr.o(i.tmr_repetition_counter_set))
<BR><BR>[Called By]<UL><LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tx_pwm_init
</UL>

<P><STRONG><a name="[732]"></a>touch_init</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, touch.o(i.touch_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = touch_init &rArr; bsp_xpt2046_init &rArr; bsp_xpt2046_calibrate_or_get_touch_para_with_flash &rArr; _xpt2046_touch_calibrate &rArr; _xpt_read_adc_smooth_xy &rArr; _xpt_read_adc &rArr; delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_xpt2046_init
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_task_function
</UL>

<P><STRONG><a name="[785]"></a>uart4_config</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, at32f403a_407_board.o(i.uart4_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = uart4_config &rArr; usart_init &rArr; crm_clocks_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmitter_enable
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receiver_enable
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[784]"></a>uart_print_init</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, at32f403a_407_board.o(i.uart_print_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = uart_print_init &rArr; usart_init &rArr; crm_clocks_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmitter_enable
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[787]"></a>ultrasonic_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ultrasonic.o(i.ultrasonic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ultrasonic_init &rArr; gpio_UltraSonic_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tx_pwm_init
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_tmr_init
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sonic_rx_receiver_init
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_UltraSonic_init
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[5b0]"></a>update_pressure</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, infusion.o(i.update_pressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = update_pressure &rArr; Read_HX712_B &rArr; delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_HX712_B
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_HX712_A
</UL>
<BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;detection_motor_start_point_and_update_pressure
</UL>

<P><STRONG><a name="[3f0]"></a>usart_data_receive</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f403a_407_usart.o(i.usart_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[3f1]"></a>usart_data_transmit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f403a_407_usart.o(i.usart_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_writeInt
</UL>

<P><STRONG><a name="[741]"></a>usart_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_usart.o(i.usart_enable))
<BR><BR>[Called By]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_config
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_usart_init
</UL>

<P><STRONG><a name="[3f3]"></a>usart_flag_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_usart.o(i.usart_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_writeInt
</UL>

<P><STRONG><a name="[73e]"></a>usart_init</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, at32f403a_407_usart.o(i.usart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usart_init &rArr; crm_clocks_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_config
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_usart_init
</UL>

<P><STRONG><a name="[794]"></a>usart_interrupt_enable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, at32f403a_407_usart.o(i.usart_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_config
</UL>

<P><STRONG><a name="[3ef]"></a>usart_interrupt_flag_get</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, at32f403a_407_usart.o(i.usart_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[73f]"></a>usart_parity_selection_config</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, at32f403a_407_usart.o(i.usart_parity_selection_config))
<BR><BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_usart_init
</UL>

<P><STRONG><a name="[793]"></a>usart_receiver_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_usart.o(i.usart_receiver_enable))
<BR><BR>[Called By]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_config
</UL>

<P><STRONG><a name="[740]"></a>usart_transmitter_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f403a_407_usart.o(i.usart_transmitter_enable))
<BR><BR>[Called By]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_init
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart4_config
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_usart_init
</UL>

<P><STRONG><a name="[7b9]"></a>usb_buffer_free</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f403a_407_usb.o(i.usb_buffer_free))
<BR><BR>[Called By]<UL><LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_reset_handler
</UL>

<P><STRONG><a name="[7ac]"></a>usb_buffer_malloc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at32f403a_407_usb.o(i.usb_buffer_malloc))
<BR><BR>[Called By]<UL><LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_buf_auto_define
</UL>

<P><STRONG><a name="[7aa]"></a>usb_enter_suspend</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f403a_407_usb.o(i.usb_enter_suspend))
<BR><BR>[Called By]<UL><LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enter_suspend
</UL>

<P><STRONG><a name="[7b0]"></a>usb_ept_open</STRONG> (Thumb, 810 bytes, Stack size 36 bytes, at32f403a_407_usb.o(i.usb_ept_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = usb_ept_open
</UL>
<BR>[Called By]<UL><LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_open
</UL>

<P><STRONG><a name="[7bb]"></a>usb_exit_suspend</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f403a_407_usb.o(i.usb_exit_suspend))
<BR><BR>[Called By]<UL><LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_wakeup_handler
</UL>

<P><STRONG><a name="[7b4]"></a>usb_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at32f403a_407_usb.o(i.usb_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
</UL>

<P><STRONG><a name="[788]"></a>usb_hardware_connect_init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bsp_usb.o(i.usb_hardware_connect_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = usb_hardware_connect_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[757]"></a>usb_print</STRONG> (Thumb, 42 bytes, Stack size 280 bytes, bsp_usb.o(i.usb_print))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = usb_print &rArr; usb_vcp_send_data &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_vcp_send_data
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readInfusionTubeListFromFlash
</UL>

<P><STRONG><a name="[7b3]"></a>usb_read_packet</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, at32f403a_407_usb.o(i.usb_read_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usb_read_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
</UL>

<P><STRONG><a name="[7b2]"></a>usb_set_address</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f403a_407_usb.o(i.usb_set_address))
<BR><BR>[Called By]<UL><LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_reset_handler
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
</UL>

<P><STRONG><a name="[797]"></a>usb_vcp_send_data</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, cdc_msc_class.o(i.usb_vcp_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = usb_vcp_send_data &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>
<BR>[Called By]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_print
</UL>

<P><STRONG><a name="[7b1]"></a>usb_write_packet</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, at32f403a_407_usb.o(i.usb_write_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usb_write_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>

<P><STRONG><a name="[7a8]"></a>usbd_clear_stall</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, usbd_core.o(i.usbd_clear_stall))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_clear_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_endpoint_request
</UL>

<P><STRONG><a name="[799]"></a>usbd_core_in_handler</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, usbd_core.o(i.usbd_core_in_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = usbd_core_in_handler &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_recv
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_recv_status
</UL>
<BR>[Called By]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
</UL>

<P><STRONG><a name="[79c]"></a>usbd_core_out_handler</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, usbd_core.o(i.usbd_core_out_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = usbd_core_out_handler &rArr; usbd_ctrl_send_status &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_recv
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send_status
</UL>
<BR>[Called By]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
</UL>

<P><STRONG><a name="[79e]"></a>usbd_core_setup_handler</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, usbd_core.o(i.usbd_core_setup_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = usbd_core_setup_handler &rArr; usbd_device_request &rArr; usbd_set_configuration &rArr; usbd_ctrl_send_status &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_request_parse
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_interface_request
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_endpoint_request
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_device_request
</UL>
<BR>[Called By]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
</UL>

<P><STRONG><a name="[79b]"></a>usbd_ctrl_recv_status</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usbd_core.o(i.usbd_ctrl_recv_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_ctrl_recv_status &rArr; usbd_ept_recv
</UL>
<BR>[Calls]<UL><LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_in_handler
</UL>

<P><STRONG><a name="[7a3]"></a>usbd_ctrl_send</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usbd_core.o(i.usbd_ctrl_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = usbd_ctrl_send &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_get_descriptor
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_endpoint_request
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_device_request
</UL>

<P><STRONG><a name="[79d]"></a>usbd_ctrl_send_status</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usbd_core.o(i.usbd_ctrl_send_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = usbd_ctrl_send_status &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_configuration
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_interface_request
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_endpoint_request
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_device_request
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_out_handler
</UL>

<P><STRONG><a name="[7a4]"></a>usbd_ctrl_unsupport</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usbd_core.o(i.usbd_ctrl_unsupport))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usbd_ctrl_unsupport &rArr; usbd_set_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_configuration
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_get_descriptor
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_interface_request
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_endpoint_request
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_device_request
</UL>

<P><STRONG><a name="[7a1]"></a>usbd_device_request</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, usbd_sdr.o(i.usbd_device_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = usbd_device_request &rArr; usbd_set_configuration &rArr; usbd_ctrl_send_status &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_configuration
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_get_descriptor
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_unsupport
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send_status
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send
</UL>
<BR>[Called By]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_setup_handler
</UL>

<P><STRONG><a name="[7a0]"></a>usbd_endpoint_request</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, usbd_sdr.o(i.usbd_endpoint_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = usbd_endpoint_request &rArr; usbd_ctrl_send_status &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_stall
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_unsupport
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send_status
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_clear_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_setup_handler
</UL>

<P><STRONG><a name="[7a9]"></a>usbd_enter_suspend</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbd_core.o(i.usbd_enter_suspend))
<BR><BR>[Calls]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_enter_suspend
</UL>
<BR>[Called By]<UL><LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_suspend_handler
</UL>

<P><STRONG><a name="[7ab]"></a>usbd_ept_buf_auto_define</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, usbd_core.o(i.usbd_ept_buf_auto_define))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_ept_buf_auto_define
</UL>
<BR>[Calls]<UL><LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_buffer_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_open
</UL>

<P><STRONG><a name="[7ba]"></a>usbd_ept_defaut_init</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, usbd_core.o(i.usbd_ept_defaut_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_ept_defaut_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_reset_handler
</UL>

<P><STRONG><a name="[7ad]"></a>usbd_ept_loop_handler</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, usbd_int.o(i.usbd_ept_loop_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = usbd_ept_loop_handler &rArr; usbd_eptn_handler &rArr; usbd_core_setup_handler &rArr; usbd_device_request &rArr; usbd_set_configuration &rArr; usbd_ctrl_send_status &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
</UL>

<P><STRONG><a name="[7af]"></a>usbd_ept_open</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, usbd_core.o(i.usbd_ept_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usbd_ept_open &rArr; usb_ept_open
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_ept_open
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_buf_auto_define
</UL>
<BR>[Called By]<UL><LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_reset_handler
</UL>

<P><STRONG><a name="[79a]"></a>usbd_ept_recv</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, usbd_core.o(i.usbd_ept_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_ept_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_recv_status
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_out_handler
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_in_handler
</UL>

<P><STRONG><a name="[798]"></a>usbd_ept_send</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, usbd_core.o(i.usbd_ept_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_write_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_eptn_handler
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send_status
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_in_handler
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_vcp_send_data
</UL>

<P><STRONG><a name="[7ae]"></a>usbd_eptn_handler</STRONG> (Thumb, 374 bytes, Stack size 32 bytes, usbd_int.o(i.usbd_eptn_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = usbd_eptn_handler &rArr; usbd_core_setup_handler &rArr; usbd_device_request &rArr; usbd_set_configuration &rArr; usbd_ctrl_send_status &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_set_address
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_read_packet
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_send
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_recv
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_setup_handler
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_out_handler
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_in_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_loop_handler
</UL>

<P><STRONG><a name="[7a2]"></a>usbd_interface_request</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usbd_sdr.o(i.usbd_interface_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = usbd_interface_request &rArr; usbd_ctrl_send_status &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_unsupport
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send_status
</UL>
<BR>[Called By]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_setup_handler
</UL>

<P><STRONG><a name="[3f4]"></a>usbd_irq_handler</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, usbd_int.o(i.usbd_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = usbd_irq_handler &rArr; usbd_ept_loop_handler &rArr; usbd_eptn_handler &rArr; usbd_core_setup_handler &rArr; usbd_device_request &rArr; usbd_set_configuration &rArr; usbd_ctrl_send_status &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_flag_clear
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_wakeup_handler
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_suspend_handler
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_sof_handler
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_reset_handler
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_loop_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBFS_L_CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[7b5]"></a>usbd_reset_handler</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, usbd_int.o(i.usbd_reset_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = usbd_reset_handler &rArr; usbd_ept_open &rArr; usb_ept_open
</UL>
<BR>[Calls]<UL><LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_set_address
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_buffer_free
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_open
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ept_defaut_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
</UL>

<P><STRONG><a name="[7a5]"></a>usbd_set_stall</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, usbd_core.o(i.usbd_set_stall))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_set_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_endpoint_request
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_unsupport
</UL>

<P><STRONG><a name="[79f]"></a>usbd_setup_request_parse</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, usbd_sdr.o(i.usbd_setup_request_parse))
<BR><BR>[Called By]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_setup_handler
</UL>

<P><STRONG><a name="[7b6]"></a>usbd_sof_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbd_int.o(i.usbd_sof_handler))
<BR><BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
</UL>

<P><STRONG><a name="[7b7]"></a>usbd_suspend_handler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usbd_int.o(i.usbd_suspend_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_suspend_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enter_suspend
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
</UL>

<P><STRONG><a name="[7b8]"></a>usbd_wakeup_handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, usbd_int.o(i.usbd_wakeup_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_wakeup_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_exit_suspend
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_irq_handler
</UL>

<P><STRONG><a name="[747]"></a>uxListRemove</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[74c]"></a>vListInitialise</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[751]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[749]"></a>vListInsert</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[748]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[74b]"></a>vPortEnterCritical</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weak_up
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[74d]"></a>vPortExitCritical</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weak_up
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[74f]"></a>vPortFree</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, heap_4.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>

<P><STRONG><a name="[5ac]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, port.o(i.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[3c6]"></a>vTaskDelay</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, tasks.o(i.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_HX712_B
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_task_function
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_task_function
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_task_function
</UL>

<P><STRONG><a name="[7bc]"></a>vTaskStartScheduler</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = vTaskStartScheduler &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weak_up
</UL>

<P><STRONG><a name="[5ad]"></a>vTaskSuspendAll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[2b4]"></a>vTaskSwitchContext</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[36d]"></a>vtaskmanage</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, main.o(i.vtaskmanage))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = vtaskmanage &rArr; save_infusion_and_drug_to_flash &rArr; writeInfusionTubeListToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwc_wakeup_pin_enable
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwc_standby_mode_enter
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_init
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config_
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_alarm_config
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_infusion_and_drug_to_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXINT1_IRQHandler
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_ThirmSec
</UL>

<P><STRONG><a name="[72a]"></a>weak_up</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, main.o(i.weak_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = weak_up &rArr; vTaskStartScheduler &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NowAlarmMessageinit
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_consumption
</UL>

<P><STRONG><a name="[300]"></a>writeAddInfusionTubeListToFlash</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, infusion.o(i.writeAddInfusionTubeListToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = writeAddInfusionTubeListToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getThefirstInfusionNode
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowInfusionListNum
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddInfusionNode
</UL>

<P><STRONG><a name="[340]"></a>writeInfusionTubeListToFlash</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, infusion.o(i.writeInfusionTubeListToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = writeInfusionTubeListToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getThefirstInfusionNode
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowInfusionListNum
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_infusion_and_drug_to_flash
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addInfusionNode
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeInfusionNodeByName
</UL>

<P><STRONG><a name="[7be]"></a>xPortStartScheduler</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[7bd]"></a>xTaskCreate</STRONG> (Thumb, 86 bytes, Stack size 56 bytes, tasks.o(i.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weak_up
</UL>

<P><STRONG><a name="[3cb]"></a>xTaskIncrementTick</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[5ae]"></a>xTaskResumeAll</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[54f]"></a>xmc_ext_timing_config</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at32f403a_407_xmc.o(i.xmc_ext_timing_config))
<BR><BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xmc_init
</UL>

<P><STRONG><a name="[550]"></a>xmc_nor_sram_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f403a_407_xmc.o(i.xmc_nor_sram_enable))
<BR><BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xmc_init
</UL>

<P><STRONG><a name="[54c]"></a>xmc_nor_sram_init</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, at32f403a_407_xmc.o(i.xmc_nor_sram_init))
<BR><BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xmc_init
</UL>

<P><STRONG><a name="[54e]"></a>xmc_nor_sram_timing_config</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, at32f403a_407_xmc.o(i.xmc_nor_sram_timing_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = xmc_nor_sram_timing_config
</UL>
<BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xmc_init
</UL>

<P><STRONG><a name="[54b]"></a>xmc_norsram_default_para_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, at32f403a_407_xmc.o(i.xmc_norsram_default_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xmc_init
</UL>

<P><STRONG><a name="[54d]"></a>xmc_norsram_timing_default_para_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, at32f403a_407_xmc.o(i.xmc_norsram_timing_default_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = xmc_norsram_timing_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xmc_init
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[402]"></a>_adjust_clip_area_and_flush</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gt_disp.o(i._adjust_clip_area_and_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = _adjust_clip_area_and_flush &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_check_and_copy_foreach
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_scr_by_anim
</UL>

<P><STRONG><a name="[428]"></a>_check_and_copy_foreach</STRONG> (Thumb, 142 bytes, Stack size 56 bytes, gt_disp.o(i._check_and_copy_foreach))
<BR><BR>[Stack]<UL><LI>Max Depth = 164 + In Cycle
<LI>Call Chain = _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_reduce
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_get_type
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_cover_screen
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_check_obj_visible_and_copy
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_check_and_copy_foreach
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_check_and_copy_foreach
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_check_and_copy_foreach
</UL>

<P><STRONG><a name="[42b]"></a>_clear_buffer</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, gt_disp.o(i._clear_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _clear_buffer &rArr; _fill_color_hor &rArr; gt_color_fill
</UL>
<BR>[Calls]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fill_color_ver
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fill_color_hor
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_scr_by_anim
</UL>

<P><STRONG><a name="[459]"></a>_create_scr_by_id</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gt_disp.o(i._create_scr_by_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _create_scr_by_id &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_init_func
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_push_scr_only_st
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>

<P><STRONG><a name="[42c]"></a>_fill_color_hor</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, gt_disp.o(i._fill_color_hor))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _fill_color_hor &rArr; gt_color_fill
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memmove
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_fill
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_abs
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_clear_buffer
</UL>

<P><STRONG><a name="[42d]"></a>_fill_color_ver</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gt_disp.o(i._fill_color_ver))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _fill_color_ver &rArr; gt_color_fill
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_clear_buffer
</UL>

<P><STRONG><a name="[497]"></a>_flush_scr_by_anim</STRONG> (Thumb, 502 bytes, Stack size 48 bytes, gt_disp.o(i._flush_scr_by_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_ver
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_hor
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_cover_screen
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_abs
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_check_and_copy_foreach
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_clear_buffer
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_adjust_clip_area_and_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_ref_area
</UL>

<P><STRONG><a name="[498]"></a>_flush_scr_by_direct</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, gt_disp.o(i._flush_scr_by_direct))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = _flush_scr_by_direct &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_fill
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_is_intersect_screen
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_update_area_flush_by_calc_partly_redraw_area
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_check_and_copy_foreach
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_get_bgcolor
</UL>
<BR>[Called By]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_ref_area
</UL>

<P><STRONG><a name="[403]"></a>_gt_disp_check_and_copy_foreach</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, gt_disp.o(i._gt_disp_check_and_copy_foreach))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_visible
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_check_obj_visible_and_copy
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_check_and_copy_foreach
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_scr_by_direct
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_scr_by_anim
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_adjust_clip_area_and_flush
</UL>

<P><STRONG><a name="[63d]"></a>_gt_disp_set_state</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gt_disp.o(i._gt_disp_set_state))
<BR><BR>[Called By]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_ref_area
</UL>

<P><STRONG><a name="[a0]"></a>_old_scr_anim_ready_cb</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gt_disp.o(i._old_scr_anim_ready_cb))
<BR><BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_disp.o(i.gt_disp_load_scr_anim)
</UL>
<P><STRONG><a name="[9f]"></a>_scr_anim_del_ready_cb</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_disp.o(i._scr_anim_del_ready_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _scr_anim_del_ready_cb &rArr; _gt_obj_class_destroy &rArr; _gt_obj_class_destroy_screen &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_disp.o(i.gt_disp_load_scr_anim)
</UL>
<P><STRONG><a name="[a3]"></a>_scr_anim_exec_x_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gt_disp.o(i._scr_anim_exec_x_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = _scr_anim_exec_x_cb &rArr; gt_obj_set_x &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_x
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_disp.o(i.gt_disp_load_scr_anim)
</UL>
<P><STRONG><a name="[a4]"></a>_scr_anim_exec_y_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gt_disp.o(i._scr_anim_exec_y_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = _scr_anim_exec_y_cb &rArr; gt_obj_set_y &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_y
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_disp.o(i.gt_disp_load_scr_anim)
</UL>
<P><STRONG><a name="[a2]"></a>_scr_anim_ready_cb</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gt_disp.o(i._scr_anim_ready_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _scr_anim_ready_cb &rArr; _gt_obj_class_destroy &rArr; _gt_obj_class_destroy_screen &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_set_enabled
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_set_enabled
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_ver
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_hor
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_reload_max_area
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_disp.o(i.gt_disp_load_scr_anim)
</UL>
<P><STRONG><a name="[a1]"></a>_scr_anim_start_cb</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gt_disp.o(i._scr_anim_start_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _scr_anim_start_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_set_enabled
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_set_enabled
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_disp.o(i.gt_disp_load_scr_anim)
</UL>
<P><STRONG><a name="[49a]"></a>_update_area_flush_by_calc_partly_redraw_area</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, gt_disp.o(i._update_area_flush_by_calc_partly_redraw_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _update_area_flush_by_calc_partly_redraw_area &rArr; gt_disp_get_res_ver
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_ver
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_hor
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_flush_scr_by_direct
</UL>

<P><STRONG><a name="[42a]"></a>gt_check_obj_visible_and_copy</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, gt_disp.o(i.gt_check_obj_visible_and_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = gt_check_obj_visible_and_copy &rArr; gt_area_is_intersect_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_visible
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_is_intersect_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_check_and_copy_foreach
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_check_and_copy_foreach
</UL>

<P><STRONG><a name="[46e]"></a>_draw_blend_strikethrough</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, gt_draw.o(i._draw_blend_strikethrough))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = _draw_blend_strikethrough &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
</UL>

<P><STRONG><a name="[470]"></a>_draw_blend_underline</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, gt_draw.o(i._draw_blend_underline))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = _draw_blend_underline &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
</UL>

<P><STRONG><a name="[471]"></a>_draw_text_convertor_split</STRONG> (Thumb, 944 bytes, Stack size 192 bytes, gt_draw.o(i._draw_text_convertor_split))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = _draw_text_convertor_split &rArr; _draw_blend_underline &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset_0
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_type_get
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_one_char_code_len_get
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_word_width_figure_up
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_size_length_by_style
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_one_word_width
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_convertor_data_get
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_code_transform
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend_text
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gray_and_dot_byte_get
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_style_space_y
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_blend_underline
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_blend_strikethrough
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
</UL>

<P><STRONG><a name="[48b]"></a>_filling_by_default_line_mode</STRONG> (Thumb, 226 bytes, Stack size 56 bytes, gt_draw.o(i._filling_by_default_line_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = _filling_by_default_line_mode &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_is_intersect_screen
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_read_img_offset
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
</UL>

<P><STRONG><a name="[48e]"></a>_filling_by_ram_data</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gt_draw.o(i._filling_by_ram_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = _filling_by_ram_data &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
</UL>

<P><STRONG><a name="[48f]"></a>_filling_by_sjpg_file</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, gt_draw.o(i._filling_by_sjpg_file))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = _filling_by_sjpg_file &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_is_intersect_screen
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_decoder_read_line
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
</UL>

<P><STRONG><a name="[5c3]"></a>_get_align_start_x</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gt_draw.o(i._get_align_start_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_align_start_x
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
</UL>

<P><STRONG><a name="[4a0]"></a>_get_align_start_y</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, gt_draw.o(i._get_align_start_y), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_split
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_align_start_y_by_line
</UL>
<BR>[Called By]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
</UL>

<P><STRONG><a name="[4a2]"></a>_get_align_start_y_by_line</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, gt_draw.o(i._get_align_start_y_by_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _get_align_start_y_by_line
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_style_space_y
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_align_start_y
</UL>

<P><STRONG><a name="[475]"></a>_get_style_space_y</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gt_draw.o(i._get_style_space_y))
<BR><BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_align_start_y_by_line
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
</UL>

<P><STRONG><a name="[4d6]"></a>_gt_circ_cont</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gt_draw.o(i._gt_circ_cont))
<BR><BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_get_radius_mask
</UL>

<P><STRONG><a name="[4d5]"></a>_gt_get_radius_mask</STRONG> (Thumb, 824 bytes, Stack size 88 bytes, gt_draw.o(i._gt_get_radius_mask))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _gt_get_radius_mask &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset_0
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_circ_cont
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radius_mask_init
</UL>

<P><STRONG><a name="[4d7]"></a>_gt_get_radius_mask_buf</STRONG> (Thumb, 560 bytes, Stack size 24 bytes, gt_draw.o(i._gt_get_radius_mask_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _gt_get_radius_mask_buf &rArr; gt_memset_0 &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset_0
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[47a]"></a>_gt_gray_and_dot_byte_get</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, gt_draw.o(i._gt_gray_and_dot_byte_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _gt_gray_and_dot_byte_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
</UL>

<P><STRONG><a name="[4fe]"></a>_gt_radius_mask_deinit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gt_draw.o(i._gt_radius_mask_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _gt_radius_mask_deinit &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[4ff]"></a>_gt_radius_mask_init</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, gt_draw.o(i._gt_radius_mask_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _gt_radius_mask_init &rArr; _gt_get_radius_mask &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_copy
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_get_radius_mask
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[529]"></a>_omit_get_font_width</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, gt_draw.o(i._omit_get_font_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _omit_get_font_width &rArr; gt_font_get_one_word_width &rArr; _get_font_style
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_one_char_code_len_get
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_one_word_width
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
</UL>

<P><STRONG><a name="[5bd]"></a>draw_text_multiple_line</STRONG> (Thumb, 2344 bytes, Stack size 288 bytes, gt_draw.o(i.draw_text_multiple_line), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_to_left_lan_get
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_symbol_is_valid_range
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_symbol_get_mask_buf
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_right_to_left_handler
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_split
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_one_char_code_len_get
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_size_length_by_style
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_one_word_width
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_dot
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend_text
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_is_style_cn_or_en
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_font_is_convertor_language
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_font_get_type_group_offset_y
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_black
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gray_and_dot_byte_get
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_style_space_y
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_align_start_y
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_align_start_x
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_blend_underline
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_blend_strikethrough
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[5bc]"></a>draw_text_single_line</STRONG> (Thumb, 2130 bytes, Stack size 264 bytes, gt_draw.o(i.draw_text_single_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = draw_text_single_line &rArr; _draw_text_convertor_split &rArr; _draw_blend_underline &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_to_left_lan_get
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_symbol_is_valid_range
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_symbol_get_mask_buf
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_right_to_left_handler
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_split
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_one_char_code_len_get
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_size_length_by_style
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_one_word_width
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_dot
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend_text
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_is_style_cn_or_en
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_font_is_convertor_language
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_font_get_type_group_offset_y
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_black
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_omit_get_font_width
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gray_and_dot_byte_get
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_style_space_y
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_align_start_y_by_line
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_align_start_x
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_text_convertor_split
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_blend_underline
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_draw_blend_strikethrough
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text
</UL>

<P><STRONG><a name="[5c1]"></a>gt_color_black</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gt_draw.o(i.gt_color_black))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_black
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_single_line
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text_multiple_line
</UL>

<P><STRONG><a name="[49e]"></a>_free_event_recursive</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gt_event.o(i._free_event_recursive))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = _free_event_recursive &rArr;  _free_event_recursive (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_event_recursive
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_remove_all_event_cb
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_event_recursive
</UL>

<P><STRONG><a name="[4cb]"></a>_gt_event_send_kernel</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, gt_event.o(i._gt_event_send_kernel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_bubble_notify
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_parent
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_event_send_kernel
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_event_send_kernel
</UL>

<P><STRONG><a name="[630]"></a>gt_color_black</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gt_graph_base.o(i.gt_color_black))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_color_black &rArr; gt_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_graph_init_rect_attr
</UL>

<P><STRONG><a name="[631]"></a>gt_color_make</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gt_graph_base.o(i.gt_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_black
</UL>

<P><STRONG><a name="[7e]"></a>_gt_img_decoder_built_in_close</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gt_img_decoder.o(i._gt_img_decoder_built_in_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _gt_img_decoder_built_in_close
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_img_decoder.o(i._gt_img_decoder_init)
</UL>
<P><STRONG><a name="[7b]"></a>_gt_img_decoder_built_in_info</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gt_img_decoder.o(i._gt_img_decoder_built_in_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _gt_img_decoder_built_in_info &rArr; gt_fs_open &rArr; gt_fs_get_src_type
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_open
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_img_decoder.o(i._gt_img_decoder_init)
</UL>
<P><STRONG><a name="[7c]"></a>_gt_img_decoder_built_in_open</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gt_img_decoder.o(i._gt_img_decoder_built_in_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _gt_img_decoder_built_in_open &rArr; gt_fs_open &rArr; gt_fs_get_src_type
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_img_decoder.o(i._gt_img_decoder_init)
</UL>
<P><STRONG><a name="[7d]"></a>_gt_img_decoder_built_in_read_line</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gt_img_decoder.o(i._gt_img_decoder_built_in_read_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _gt_img_decoder_built_in_read_line &rArr; gt_fs_read
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_seek
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_img_decoder.o(i._gt_img_decoder_init)
</UL>
<P><STRONG><a name="[517]"></a>_absorb_handler</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, gt_indev.o(i._absorb_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _absorb_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_handler
</UL>

<P><STRONG><a name="[4a7]"></a>_get_scroll_dir</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, gt_indev.o(i._get_scroll_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _get_scroll_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_abs
</UL>
<BR>[Called By]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_indev_home_gesture
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_handler
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_handler
</UL>

<P><STRONG><a name="[4dd]"></a>_gt_indev_handler_button</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, gt_indev.o(i._gt_indev_handler_button))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _gt_indev_handler_button
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tick_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_handler
</UL>

<P><STRONG><a name="[4de]"></a>_gt_indev_handler_keypad</STRONG> (Thumb, 278 bytes, Stack size 48 bytes, gt_indev.o(i._gt_indev_handler_keypad))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = _gt_indev_handler_keypad &rArr; gt_obj_prev_focus_change &rArr; gt_obj_set_focus &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_prev_focus_change
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_next_focus_change
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_untouchability
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_find_clicked_obj_by_focus
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_handler
</UL>

<P><STRONG><a name="[4e2]"></a>_gt_indev_handler_point</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, gt_indev.o(i._gt_indev_handler_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _gt_indev_handler_point &rArr; _indev_pressed_handle &rArr; _indev_scroll_handler &rArr; gt_obj_scroll_to &rArr; gt_anim_del &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_released_handle
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_pressed_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_handler
</UL>

<P><STRONG><a name="[4e3]"></a>_indev_pressed_handle</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, gt_indev.o(i._indev_pressed_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _indev_pressed_handle &rArr; _indev_scroll_handler &rArr; gt_obj_scroll_to &rArr; gt_anim_del &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tick_get
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_untouchability
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_click_point_by_phy_point
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_set_process_point
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_search_active_obj_from_all_layers
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_indev_handler_point
</UL>

<P><STRONG><a name="[4e4]"></a>_indev_released_handle</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, gt_indev.o(i._indev_released_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _indev_released_handle &rArr; _indev_scroll_throw_handler_anim_start &rArr; gt_anim_start &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_untouchability
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_handler_anim_start
</UL>
<BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_indev_handler_point
</UL>

<P><STRONG><a name="[50d]"></a>_indev_scroll_handler</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, gt_indev.o(i._indev_scroll_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _indev_scroll_handler &rArr; gt_obj_scroll_to &rArr; gt_anim_del &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_scroll_ud
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_scroll_lr
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_scroll_vertical
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_indev_home_gesture
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_scroll_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_pressed_handle
</UL>

<P><STRONG><a name="[81]"></a>_indev_scroll_throw_exec_cb</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gt_indev.o(i._indev_scroll_throw_exec_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _indev_scroll_throw_exec_cb &rArr; _indev_scroll_throw_handler &rArr; gt_obj_scroll_to &rArr; gt_anim_del &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_indev.o(i._indev_scroll_throw_handler_anim_start)
</UL>
<P><STRONG><a name="[514]"></a>_indev_scroll_throw_handler</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, gt_indev.o(i._indev_scroll_throw_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _indev_scroll_throw_handler &rArr; gt_obj_scroll_to &rArr; gt_anim_del &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_scroll_snap_y
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_scroll_snap_x
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scroll_predict
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_scroll_vertical
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_scroll_dir
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_absorb_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_exec_cb
</UL>

<P><STRONG><a name="[50e]"></a>_indev_scroll_throw_handler_anim_start</STRONG> (Thumb, 112 bytes, Stack size 104 bytes, gt_indev.o(i._indev_scroll_throw_handler_anim_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _indev_scroll_throw_handler_anim_start &rArr; gt_anim_start &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_start
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_init
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tick_get
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_indev_home_gesture
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_released_handle
</UL>

<P><STRONG><a name="[82]"></a>_indev_scroll_throw_ready_cb</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_indev.o(i._indev_scroll_throw_ready_cb))
<BR>[Address Reference Count : 1]<UL><LI> gt_indev.o(i._indev_scroll_throw_handler_anim_start)
</UL>
<P><STRONG><a name="[50f]"></a>_is_indev_home_gesture</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, gt_indev.o(i._is_indev_home_gesture))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _is_indev_home_gesture &rArr; _get_scroll_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_scroll_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_handler_anim_start
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_handler
</UL>

<P><STRONG><a name="[510]"></a>_is_scroll_vertical</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gt_indev.o(i._is_scroll_vertical))
<BR><BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_handler
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_handler
</UL>

<P><STRONG><a name="[516]"></a>_scroll_predict</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gt_indev.o(i._scroll_predict))
<BR><BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_scroll_throw_handler
</UL>

<P><STRONG><a name="[50a]"></a>_search_active_obj_from_all_layers</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gt_indev.o(i._search_active_obj_from_all_layers))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _search_active_obj_from_all_layers &rArr; gt_find_clicked_obj_by_point &rArr; _gt_obj_foreach_clicked &rArr;  _gt_obj_foreach_clicked (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_layer_top
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_find_clicked_obj_by_point
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_has_showing
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_hided_layer_top_widgets
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_indev_pressed_handle
</UL>

<P><STRONG><a name="[4f4]"></a>_gt_obj_foreach_clicked</STRONG> (Thumb, 206 bytes, Stack size 56 bytes, gt_obj_pos.o(i._gt_obj_foreach_clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + In Cycle
<LI>Call Chain = _gt_obj_foreach_clicked &rArr;  _gt_obj_foreach_clicked (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_visible
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_virtual
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_touch_parent
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_foreach_clicked
</UL>
<BR>[Called By]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_foreach_clicked
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_find_clicked_obj_by_point
</UL>

<P><STRONG><a name="[4f7]"></a>_gt_obj_next_focus_get</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, gt_obj_pos.o(i._gt_obj_next_focus_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20 + In Cycle
<LI>Call Chain = _gt_obj_next_focus_get &rArr;  _gt_obj_next_focus_get (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_next_focus_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_next_focus_get
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_next_focus_change
</UL>

<P><STRONG><a name="[4f8]"></a>_gt_obj_prev_focus_get</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, gt_obj_pos.o(i._gt_obj_prev_focus_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _gt_obj_prev_focus_get &rArr;  _gt_obj_prev_focus_get (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_prev_focus_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_prev_focus_get
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_prev_focus_change
</UL>

<P><STRONG><a name="[21d]"></a>_scroll_by_x</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gt_obj_scroll.o(i._scroll_by_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scroll_by_x &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_set_process_scroll_xy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_obj_scroll.o(i.gt_obj_scroll_to)
</UL>
<P><STRONG><a name="[21e]"></a>_scroll_by_y</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gt_obj_scroll.o(i._scroll_by_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scroll_by_y &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_set_process_scroll_xy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_obj_scroll.o(i.gt_obj_scroll_to)
</UL>
<P><STRONG><a name="[546]"></a>_update_layer_top_widget_area</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, gt_style.o(i._update_layer_top_widget_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_y
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_x
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_update_max_area
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_pos_change
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_move_child_by
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_is_ignore_calc_max_area
</UL>
<BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_y
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_x
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_area
</UL>

<P><STRONG><a name="[502]"></a>_gt_timer_for_each_exec</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, gt_timer.o(i._gt_timer_for_each_exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _gt_timer_for_each_exec &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tick_get
</UL>
<BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_handler
</UL>

<P><STRONG><a name="[229]"></a>_equal_current_id_cb</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gt_scr_stack.o(i._equal_current_id_cb))
<BR>[Address Reference Count : 1]<UL><LI> gt_scr_stack.o(i.gt_scr_stack_has_before)
</UL>
<P><STRONG><a name="[228]"></a>_free_alive_scr_object_cb</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gt_scr_stack.o(i._free_alive_scr_object_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _free_alive_scr_object_cb &rArr; _gt_obj_class_destroy &rArr; _gt_obj_class_destroy_screen &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_scr_stack.o(i.gt_scr_stack_clear)
</UL>
<P><STRONG><a name="[533]"></a>_row_grow_inside</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, gt_layout.o(i._row_grow_inside))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + In Cycle
<LI>Call Chain = _row_grow_inside &rArr;  _row_grow_inside (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_y
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_visible
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_virtual
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_w
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_h
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_layout_row_grow
</UL>

<P><STRONG><a name="[534]"></a>_row_grow_inside_invert</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, gt_layout.o(i._row_grow_inside_invert))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + In Cycle
<LI>Call Chain = _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_y
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_visible
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_virtual
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside_invert
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_w
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_h
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_row_grow_inside_invert
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_layout_row_grow
</UL>

<P><STRONG><a name="[4a4]"></a>_get_cover_dst_area_and_offset_by</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gt_draw_blend.o(i._get_cover_dst_area_and_offset_by))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_cover_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend_text
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend
</UL>

<P><STRONG><a name="[64c]"></a>gt_color_mix</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, gt_draw_blend.o(i.gt_color_mix))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gt_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend_text
</UL>

<P><STRONG><a name="[40a]"></a>_blend_rgb565_with_no_opacity</STRONG> (Thumb, 268 bytes, Stack size 56 bytes, gt_draw_blend_with_rgb565.o(i._blend_rgb565_with_no_opacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _blend_rgb565_with_no_opacity &rArr; gt_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend_with_rgb565_no_opacity
</UL>

<P><STRONG><a name="[40c]"></a>_blend_rgb565_with_opacity</STRONG> (Thumb, 384 bytes, Stack size 56 bytes, gt_draw_blend_with_rgb565.o(i._blend_rgb565_with_opacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _blend_rgb565_with_opacity &rArr; gt_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_mix
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_per_255
</UL>
<BR>[Called By]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_draw_blend_with_rgb565_opacity
</UL>

<P><STRONG><a name="[40b]"></a>gt_color_mix</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, gt_draw_blend_with_rgb565.o(i.gt_color_mix))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gt_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_blend_rgb565_with_opacity
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_blend_rgb565_with_no_opacity
</UL>

<P><STRONG><a name="[439]"></a>_common_sjpg_info</STRONG> (Thumb, 266 bytes, Stack size 200 bytes, gt_sjpg.o(i._common_sjpg_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _common_sjpg_info &rArr; jd_prepare &rArr; create_huffman_tbl
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_seek
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_read
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcmp
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jd_prepare
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_jpg
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_sjpg_info
</UL>

<P><STRONG><a name="[43d]"></a>_common_sjpg_open</STRONG> (Thumb, 502 bytes, Stack size 208 bytes, gt_sjpg.o(i._common_sjpg_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _common_sjpg_open &rArr; jd_prepare &rArr; create_huffman_tbl
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_seek
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_read
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_close
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcmp
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jd_prepare
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sjpg_free
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_sjpg_st
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_jpg
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_sjpg_open
</UL>

<P><STRONG><a name="[22d]"></a>_gt_sjpg_close</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gt_sjpg.o(i._gt_sjpg_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _gt_sjpg_close &rArr; _sjpg_free &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_close
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sjpg_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_sjpg.o(i.gt_sjpg_init)
</UL>
<P><STRONG><a name="[22a]"></a>_gt_sjpg_info</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gt_sjpg.o(i._gt_sjpg_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _gt_sjpg_info &rArr; _common_sjpg_info &rArr; jd_prepare &rArr; create_huffman_tbl
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_open
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_get_ext
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_close
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcmp
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_sjpg.o(i.gt_sjpg_init)
</UL>
<P><STRONG><a name="[22b]"></a>_gt_sjpg_open</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gt_sjpg.o(i._gt_sjpg_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _gt_sjpg_open &rArr; _common_sjpg_open &rArr; jd_prepare &rArr; create_huffman_tbl
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_open
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_sjpg.o(i.gt_sjpg_init)
</UL>
<P><STRONG><a name="[22c]"></a>_gt_sjpg_read_line</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, gt_sjpg.o(i._gt_sjpg_read_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = _gt_sjpg_read_line &rArr; jd_decomp &rArr; mcu_load &rArr; block_idct
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_seek
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jd_prepare
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jd_decomp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_sjpg.o(i.gt_sjpg_init)
</UL>
<P><STRONG><a name="[43b]"></a>_is_jpg</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gt_sjpg.o(i._is_jpg))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _is_jpg &rArr; gt_memcmp &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_open
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_info
</UL>

<P><STRONG><a name="[43e]"></a>_malloc_sjpg_st</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gt_sjpg.o(i._malloc_sjpg_st))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _malloc_sjpg_st &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_open
</UL>

<P><STRONG><a name="[43f]"></a>_sjpg_free</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, gt_sjpg.o(i._sjpg_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _sjpg_free &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_sjpg_close
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_sjpg_open
</UL>

<P><STRONG><a name="[71]"></a>input_func</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gt_sjpg.o(i.input_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = input_func &rArr; gt_fs_read
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_seek
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_read
</UL>
<BR>[Address Reference Count : 3]<UL><LI> gt_sjpg.o(i._gt_sjpg_read_line)
<LI> gt_sjpg.o(i._common_sjpg_info)
<LI> gt_sjpg.o(i._common_sjpg_open)
</UL>
<P><STRONG><a name="[7f]"></a>output_func</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, gt_sjpg.o(i.output_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = output_func &rArr; gt_memcpy &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_sjpg.o(i._gt_sjpg_read_line)
</UL>
<P><STRONG><a name="[58d]"></a>alloc_pool</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, tjpgd.o(i.alloc_pool))
<BR><BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_huffman_tbl
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jd_prepare
</UL>

<P><STRONG><a name="[735]"></a>bitext</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, tjpgd.o(i.bitext))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bitext
</UL>
<BR>[Called By]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_load
</UL>

<P><STRONG><a name="[736]"></a>block_idct</STRONG> (Thumb, 430 bytes, Stack size 36 bytes, tjpgd.o(i.block_idct))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = block_idct
</UL>
<BR>[Called By]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_load
</UL>

<P><STRONG><a name="[58c]"></a>create_huffman_tbl</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, tjpgd.o(i.create_huffman_tbl))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = create_huffman_tbl
</UL>
<BR>[Calls]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_pool
</UL>
<BR>[Called By]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jd_prepare
</UL>

<P><STRONG><a name="[734]"></a>huffext</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, tjpgd.o(i.huffext))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = huffext
</UL>
<BR>[Called By]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_load
</UL>

<P><STRONG><a name="[702]"></a>mcu_load</STRONG> (Thumb, 346 bytes, Stack size 48 bytes, tjpgd.o(i.mcu_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = mcu_load &rArr; block_idct
</UL>
<BR>[Calls]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;huffext
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_idct
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bitext
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jd_decomp
</UL>

<P><STRONG><a name="[703]"></a>mcu_output</STRONG> (Thumb, 782 bytes, Stack size 80 bytes, tjpgd.o(i.mcu_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mcu_output
</UL>
<BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jd_decomp
</UL>

<P><STRONG><a name="[701]"></a>restart</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, tjpgd.o(i.restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = restart
</UL>
<BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jd_decomp
</UL>

<P><STRONG><a name="[42f]"></a>_common_png_info</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, gt_png.o(i._common_png_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _common_png_info &rArr; _is_png_file_type &rArr; gt_fs_read
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_seek
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_read
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_close
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset_0
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_png_file_type
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_32bit_int
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_png_info
</UL>

<P><STRONG><a name="[436]"></a>_common_png_open</STRONG> (Thumb, 220 bytes, Stack size 48 bytes, gt_png.o(i._common_png_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 1076<LI>Call Chain = _common_png_open &rArr; lodepng_decode32 &rArr; lodepng_decode_memory &rArr; lodepng_decode &rArr; decodeGeneric &rArr; postProcessScanlines &rArr; Adam7_deinterlace &rArr; Adam7_getpassvalues
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_error_text
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_decode32
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_png_open
</UL>

<P><STRONG><a name="[434]"></a>_get_32bit_int</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gt_png.o(i._get_32bit_int))
<BR><BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_png_info
</UL>

<P><STRONG><a name="[223]"></a>_gt_png_close</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gt_png.o(i._gt_png_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _gt_png_close &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_close
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_png.o(i.gt_png_init)
</UL>
<P><STRONG><a name="[220]"></a>_gt_png_info</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gt_png.o(i._gt_png_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _gt_png_info &rArr; _common_png_info &rArr; _is_png_file_type &rArr; gt_fs_read
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_open
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_png_file_ext
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_png_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_png.o(i.gt_png_init)
</UL>
<P><STRONG><a name="[221]"></a>_gt_png_open</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, gt_png.o(i._gt_png_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 1100<LI>Call Chain = _gt_png_open &rArr; _common_png_open &rArr; lodepng_decode32 &rArr; lodepng_decode_memory &rArr; lodepng_decode &rArr; decodeGeneric &rArr; postProcessScanlines &rArr; Adam7_deinterlace &rArr; Adam7_getpassvalues
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_open
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_close
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_load_file
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_png_file_type
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_png_file_ext
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_png_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_png.o(i.gt_png_init)
</UL>
<P><STRONG><a name="[222]"></a>_gt_png_read_line</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gt_png.o(i._gt_png_read_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _gt_png_read_line &rArr; gt_memcpy &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_png.o(i.gt_png_init)
</UL>
<P><STRONG><a name="[4f9]"></a>_is_png_file_ext</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gt_png.o(i._is_png_file_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _is_png_file_ext &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_png_open
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_png_info
</UL>

<P><STRONG><a name="[430]"></a>_is_png_file_type</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, gt_png.o(i._is_png_file_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _is_png_file_type &rArr; gt_fs_read
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_seek
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_read
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_png_open
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_common_png_info
</UL>

<P><STRONG><a name="[2ed]"></a>Adam7_deinterlace</STRONG> (Thumb, 328 bytes, Stack size 224 bytes, lodepng.o(i.Adam7_deinterlace))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = Adam7_deinterlace &rArr; Adam7_getpassvalues
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBitOfReversedStream
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBitFromReversedStream
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adam7_getpassvalues
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;postProcessScanlines
</UL>

<P><STRONG><a name="[2ee]"></a>Adam7_getpassvalues</STRONG> (Thumb, 264 bytes, Stack size 36 bytes, lodepng.o(i.Adam7_getpassvalues))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Adam7_getpassvalues
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;postProcessScanlines
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adam7_deinterlace
</UL>

<P><STRONG><a name="[381]"></a>HuffmanTree_cleanup</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lodepng.o(i.HuffmanTree_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HuffmanTree_cleanup &rArr; lodepng_free &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateHuffmanBlock
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateDynamic
</UL>

<P><STRONG><a name="[5e5]"></a>HuffmanTree_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lodepng.o(i.HuffmanTree_init))
<BR><BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateHuffmanBlock
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateDynamic
</UL>

<P><STRONG><a name="[383]"></a>HuffmanTree_makeFromLengths</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, lodepng.o(i.HuffmanTree_makeFromLengths))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HuffmanTree_makeFromLengths &rArr; lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateFixed
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateDynamic
</UL>

<P><STRONG><a name="[385]"></a>HuffmanTree_makeFromLengths2</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, lodepng.o(i.HuffmanTree_makeFromLengths2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_makeTable
</UL>

<P><STRONG><a name="[386]"></a>HuffmanTree_makeTable</STRONG> (Thumb, 472 bytes, Stack size 40 bytes, lodepng.o(i.HuffmanTree_makeTable), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverseBits
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_memset
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_makeFromLengths2
</UL>

<P><STRONG><a name="[394]"></a>LodePNGIText_cleanup</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, lodepng.o(i.LodePNGIText_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LodePNGIText_cleanup &rArr; string_cleanup &rArr; lodepng_free &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_cleanup
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
</UL>
<BR>[Called By]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_info_cleanup
</UL>

<P><STRONG><a name="[396]"></a>LodePNGText_cleanup</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lodepng.o(i.LodePNGText_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LodePNGText_cleanup &rArr; string_cleanup &rArr; lodepng_free &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_cleanup
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
</UL>
<BR>[Called By]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_info_cleanup
</UL>

<P><STRONG><a name="[397]"></a>LodePNGUnknownChunks_cleanup</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lodepng.o(i.LodePNGUnknownChunks_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LodePNGUnknownChunks_cleanup &rArr; lodepng_free &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
</UL>
<BR>[Called By]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_info_cleanup
</UL>

<P><STRONG><a name="[722]"></a>LodePNGUnknownChunks_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lodepng.o(i.LodePNGUnknownChunks_init))
<BR><BR>[Called By]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_info_init
</UL>

<P><STRONG><a name="[758]"></a>addColorBits</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lodepng.o(i.addColorBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = addColorBits
</UL>
<BR>[Called By]<UL><LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rgba8ToPixel
</UL>

<P><STRONG><a name="[6fa]"></a>advanceBits</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lodepng.o(i.advanceBits))
<BR><BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBits
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;huffmanDecodeSymbol
</UL>

<P><STRONG><a name="[55e]"></a>alloc_string</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lodepng.o(i.alloc_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = alloc_string
</UL>
<BR>[Calls]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_add_text_sized
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_add_itext_sized
</UL>

<P><STRONG><a name="[560]"></a>alloc_string_sized</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lodepng.o(i.alloc_string_sized))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = alloc_string_sized &rArr; lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_memcpy
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_add_text_sized
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_add_itext_sized
</UL>

<P><STRONG><a name="[585]"></a>color_tree_cleanup</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lodepng.o(i.color_tree_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + In Cycle
<LI>Call Chain = color_tree_cleanup &rArr;  color_tree_cleanup (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_tree_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_convert
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_tree_cleanup
</UL>

<P><STRONG><a name="[586]"></a>color_tree_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lodepng.o(i.color_tree_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = color_tree_init
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_convert
</UL>

<P><STRONG><a name="[58f]"></a>decodeGeneric</STRONG> (Thumb, 1024 bytes, Stack size 88 bytes, lodepng.o(i.decodeGeneric))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = decodeGeneric &rArr; postProcessScanlines &rArr; Adam7_deinterlace &rArr; Adam7_getpassvalues
</UL>
<BR>[Calls]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_inspect
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_get_raw_size
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_get_bpp
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_type_equals
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_next_const
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_length
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_check_crc
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_append
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zlib_decompress
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_zTXt
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_tRNS
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_tIME
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_tEXt
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_sRGB
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_sBIT
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_pHYs
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_iTXt
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_iCCP
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_gAMA
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_cHRM
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_bKGD
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_PLTE
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;postProcessScanlines
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_pixel_overflow
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_memset
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_memcpy
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_get_raw_size_idat
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_addofl
</UL>
<BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_decode
</UL>

<P><STRONG><a name="[5e7]"></a>ensureBits25</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lodepng.o(i.ensureBits25))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ensureBits25
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateHuffmanBlock
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateDynamic
</UL>

<P><STRONG><a name="[6fd]"></a>ensureBits32</STRONG> (Thumb, 128 bytes, Stack size 20 bytes, lodepng.o(i.ensureBits32))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ensureBits32
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateHuffmanBlock
</UL>

<P><STRONG><a name="[5e6]"></a>ensureBits9</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lodepng.o(i.ensureBits9))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ensureBits9
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_inflatev
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateDynamic
</UL>

<P><STRONG><a name="[71c]"></a>getNumColorChannels</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lodepng.o(i.getNumColorChannels))
<BR><BR>[Called By]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_get_bpp_lct
</UL>

<P><STRONG><a name="[714]"></a>getPixelColorRGBA16</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, lodepng.o(i.getPixelColorRGBA16))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = getPixelColorRGBA16
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_convert
</UL>

<P><STRONG><a name="[5df]"></a>getPixelColorRGBA8</STRONG> (Thumb, 464 bytes, Stack size 40 bytes, lodepng.o(i.getPixelColorRGBA8))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = getPixelColorRGBA8 &rArr; readBitsFromReversedStream
</UL>
<BR>[Calls]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBitsFromReversedStream
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_convert
</UL>

<P><STRONG><a name="[5e1]"></a>getPixelColorsRGB8</STRONG> (Thumb, 418 bytes, Stack size 32 bytes, lodepng.o(i.getPixelColorsRGB8))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = getPixelColorsRGB8 &rArr; readBitsFromReversedStream
</UL>
<BR>[Calls]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBitsFromReversedStream
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_convert
</UL>

<P><STRONG><a name="[5e2]"></a>getPixelColorsRGBA8</STRONG> (Thumb, 650 bytes, Stack size 40 bytes, lodepng.o(i.getPixelColorsRGBA8))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = getPixelColorsRGBA8 &rArr; readBitsFromReversedStream
</UL>
<BR>[Calls]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBitsFromReversedStream
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_convert
</UL>

<P><STRONG><a name="[5e3]"></a>getTreeInflateDynamic</STRONG> (Thumb, 664 bytes, Stack size 80 bytes, lodepng.o(i.getTreeInflateDynamic))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = getTreeInflateDynamic &rArr; HuffmanTree_makeFromLengths &rArr; lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBits
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_memset
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_addofl
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;huffmanDecodeSymbol
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ensureBits9
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ensureBits25
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_makeFromLengths
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_init
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateHuffmanBlock
</UL>

<P><STRONG><a name="[5e9]"></a>getTreeInflateFixed</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, lodepng.o(i.getTreeInflateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = getTreeInflateFixed &rArr; HuffmanTree_makeFromLengths &rArr; lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_makeFromLengths
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateHuffmanBlock
</UL>

<P><STRONG><a name="[5e8]"></a>huffmanDecodeSymbol</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lodepng.o(i.huffmanDecodeSymbol))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = huffmanDecodeSymbol
</UL>
<BR>[Calls]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advanceBits
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateHuffmanBlock
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateDynamic
</UL>

<P><STRONG><a name="[6fb]"></a>inflateHuffmanBlock</STRONG> (Thumb, 406 bytes, Stack size 104 bytes, lodepng.o(i.inflateHuffmanBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = inflateHuffmanBlock &rArr; getTreeInflateDynamic &rArr; HuffmanTree_makeFromLengths &rArr; lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucvector_reserve
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBits
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_memcpy
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;huffmanDecodeSymbol
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateFixed
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateDynamic
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ensureBits32
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ensureBits25
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_init
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_inflatev
</UL>

<P><STRONG><a name="[6fe]"></a>inflateNoCompression</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, lodepng.o(i.inflateNoCompression))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = inflateNoCompression &rArr; ucvector_resize &rArr; ucvector_reserve &rArr; lodepng_realloc &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucvector_resize
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_inflatev
</UL>

<P><STRONG><a name="[708]"></a>lodepng_add_itext_sized</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, lodepng.o(i.lodepng_add_itext_sized))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = lodepng_add_itext_sized &rArr; lodepng_realloc &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_realloc
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_string_sized
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_string
</UL>
<BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_iTXt
</UL>

<P><STRONG><a name="[70b]"></a>lodepng_add_text_sized</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, lodepng.o(i.lodepng_add_text_sized))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = lodepng_add_text_sized &rArr; lodepng_realloc &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_realloc
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_string_sized
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_string
</UL>
<BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_zTXt
</UL>

<P><STRONG><a name="[594]"></a>lodepng_addofl</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lodepng.o(i.lodepng_addofl))
<BR><BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_next_const
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_append
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_pixel_overflow
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_inflatev
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateDynamic
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[70f]"></a>lodepng_color_mode_alloc_palette</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lodepng.o(i.lodepng_color_mode_alloc_palette))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lodepng_color_mode_alloc_palette &rArr; lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_PLTE
</UL>

<P><STRONG><a name="[713]"></a>lodepng_color_mode_equal</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, lodepng.o(i.lodepng_color_mode_equal))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lodepng_color_mode_equal
</UL>
<BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_decode
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_convert
</UL>

<P><STRONG><a name="[382]"></a>lodepng_free</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lodepng.o(i.lodepng_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lodepng_free &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_palette_clear
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_decode
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_clear_icc
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_cleanup
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_zTXt
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_tEXt
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_iTXt
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateFixed
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateDynamic
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_tree_cleanup
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LodePNGUnknownChunks_cleanup
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LodePNGText_cleanup
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LodePNGIText_cleanup
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_makeTable
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_makeFromLengths2
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_cleanup
</UL>

<P><STRONG><a name="[71b]"></a>lodepng_get_bpp_lct</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lodepng.o(i.lodepng_get_bpp_lct))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lodepng_get_bpp_lct
</UL>
<BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNumColorChannels
</UL>
<BR>[Called By]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_get_raw_size
</UL>

<P><STRONG><a name="[5a6]"></a>lodepng_get_raw_size_idat</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lodepng.o(i.lodepng_get_raw_size_idat))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lodepng_get_raw_size_idat
</UL>
<BR>[Called By]<UL><LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unfilter
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[71d]"></a>lodepng_inflatev</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, lodepng.o(i.lodepng_inflatev))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = lodepng_inflatev &rArr; inflateHuffmanBlock &rArr; getTreeInflateDynamic &rArr; HuffmanTree_makeFromLengths &rArr; lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBits
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_mulofl
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_addofl
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateNoCompression
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateHuffmanBlock
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ensureBits9
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_zlib_decompressv
</UL>

<P><STRONG><a name="[384]"></a>lodepng_malloc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lodepng.o(i.lodepng_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_load_file
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_decode
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_convert
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_color_mode_copy
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_zTXt
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_tEXt
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_iTXt
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_iCCP
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_color_mode_alloc_palette
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateFixed
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateDynamic
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_string_sized
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_makeTable
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_makeFromLengths2
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_makeFromLengths
</UL>

<P><STRONG><a name="[561]"></a>lodepng_memcpy</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lodepng.o(i.lodepng_memcpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lodepng_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_convert
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_color_mode_copy
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_zTXt
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_tEXt
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_iTXt
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateNoCompression
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateHuffmanBlock
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPixelColorsRGBA8
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPixelColorsRGB8
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_string_sized
</UL>

<P><STRONG><a name="[387]"></a>lodepng_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lodepng.o(i.lodepng_memset))
<BR><BR>[Called By]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateDynamic
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_tree_init
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_makeTable
</UL>

<P><STRONG><a name="[71e]"></a>lodepng_mulofl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lodepng.o(i.lodepng_mulofl))
<BR><BR>[Called By]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_pixel_overflow
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_inflatev
</UL>

<P><STRONG><a name="[591]"></a>lodepng_pixel_overflow</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, lodepng.o(i.lodepng_pixel_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lodepng_pixel_overflow
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_get_bpp
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_mulofl
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_addofl
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[70c]"></a>lodepng_read32bitInt</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lodepng.o(i.lodepng_read32bitInt))
<BR><BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_inspect
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_length
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_check_crc
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_zlib_decompressv
</UL>

<P><STRONG><a name="[709]"></a>lodepng_realloc</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lodepng.o(i.lodepng_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lodepng_realloc &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_append
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucvector_reserve
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_add_text_sized
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_add_itext_sized
</UL>

<P><STRONG><a name="[55f]"></a>lodepng_strlen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lodepng.o(i.lodepng_strlen))
<BR><BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_chunk_type_equals
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_add_text
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_string
</UL>

<P><STRONG><a name="[725]"></a>lodepng_zlib_decompressv</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, lodepng.o(i.lodepng_zlib_decompressv))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = lodepng_zlib_decompressv &rArr; lodepng_inflatev &rArr; inflateHuffmanBlock &rArr; getTreeInflateDynamic &rArr; HuffmanTree_makeFromLengths &rArr; lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_read32bitInt
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_inflatev
</UL>
<BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zlib_decompress
</UL>

<P><STRONG><a name="[796]"></a>paethPredictor</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lodepng.o(i.paethPredictor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = paethPredictor
</UL>
<BR>[Called By]<UL><LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unfilterScanline
</UL>

<P><STRONG><a name="[5a9]"></a>postProcessScanlines</STRONG> (Thumb, 246 bytes, Stack size 224 bytes, lodepng.o(i.postProcessScanlines))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = postProcessScanlines &rArr; Adam7_deinterlace &rArr; Adam7_getpassvalues
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_get_bpp
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unfilter
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removePaddingBits
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adam7_getpassvalues
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adam7_deinterlace
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[2ef]"></a>readBitFromReversedStream</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lodepng.o(i.readBitFromReversedStream))
<BR><BR>[Called By]<UL><LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removePaddingBits
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBitsFromReversedStream
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adam7_deinterlace
</UL>

<P><STRONG><a name="[5e4]"></a>readBits</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lodepng.o(i.readBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = readBits
</UL>
<BR>[Calls]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advanceBits
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_inflatev
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateHuffmanBlock
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTreeInflateDynamic
</UL>

<P><STRONG><a name="[5e0]"></a>readBitsFromReversedStream</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lodepng.o(i.readBitsFromReversedStream))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = readBitsFromReversedStream
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBitFromReversedStream
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPixelColorsRGBA8
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPixelColorsRGB8
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPixelColorRGBA8
</UL>

<P><STRONG><a name="[595]"></a>readChunk_PLTE</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, lodepng.o(i.readChunk_PLTE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = readChunk_PLTE &rArr; lodepng_color_mode_alloc_palette &rArr; lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_color_mode_alloc_palette
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[597]"></a>readChunk_bKGD</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, lodepng.o(i.readChunk_bKGD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = readChunk_bKGD
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[59e]"></a>readChunk_cHRM</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, lodepng.o(i.readChunk_cHRM))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = readChunk_cHRM
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[59d]"></a>readChunk_gAMA</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lodepng.o(i.readChunk_gAMA))
<BR><BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[5a0]"></a>readChunk_iCCP</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, lodepng.o(i.readChunk_iCCP))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = readChunk_iCCP &rArr; zlib_decompress &rArr; lodepng_zlib_decompressv &rArr; lodepng_inflatev &rArr; inflateHuffmanBlock &rArr; getTreeInflateDynamic &rArr; HuffmanTree_makeFromLengths &rArr; lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_clear_icc
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zlib_decompress
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[59a]"></a>readChunk_iTXt</STRONG> (Thumb, 354 bytes, Stack size 96 bytes, lodepng.o(i.readChunk_iTXt))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = readChunk_iTXt &rArr; zlib_decompress &rArr; lodepng_zlib_decompressv &rArr; lodepng_inflatev &rArr; inflateHuffmanBlock &rArr; getTreeInflateDynamic &rArr; HuffmanTree_makeFromLengths &rArr; lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zlib_decompress
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_memcpy
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_add_itext_sized
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[59c]"></a>readChunk_pHYs</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lodepng.o(i.readChunk_pHYs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = readChunk_pHYs
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[5a1]"></a>readChunk_sBIT</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, lodepng.o(i.readChunk_sBIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = readChunk_sBIT
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[59f]"></a>readChunk_sRGB</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lodepng.o(i.readChunk_sRGB))
<BR><BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[598]"></a>readChunk_tEXt</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, lodepng.o(i.readChunk_tEXt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = readChunk_tEXt &rArr; lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_add_text
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_memcpy
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[59b]"></a>readChunk_tIME</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lodepng.o(i.readChunk_tIME))
<BR><BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[596]"></a>readChunk_tRNS</STRONG> (Thumb, 124 bytes, Stack size 20 bytes, lodepng.o(i.readChunk_tRNS))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = readChunk_tRNS
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[599]"></a>readChunk_zTXt</STRONG> (Thumb, 180 bytes, Stack size 72 bytes, lodepng.o(i.readChunk_zTXt))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = readChunk_zTXt &rArr; zlib_decompress &rArr; lodepng_zlib_decompressv &rArr; lodepng_inflatev &rArr; inflateHuffmanBlock &rArr; getTreeInflateDynamic &rArr; HuffmanTree_makeFromLengths &rArr; lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zlib_decompress
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_memcpy
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_malloc
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_add_text_sized
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[744]"></a>removePaddingBits</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, lodepng.o(i.removePaddingBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = removePaddingBits &rArr; setBitOfReversedStream
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBitOfReversedStream
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readBitFromReversedStream
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;postProcessScanlines
</UL>

<P><STRONG><a name="[388]"></a>reverseBits</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lodepng.o(i.reverseBits), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HuffmanTree_makeTable
</UL>

<P><STRONG><a name="[715]"></a>rgba16ToPixel</STRONG> (Thumb, 138 bytes, Stack size 28 bytes, lodepng.o(i.rgba16ToPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rgba16ToPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_convert
</UL>

<P><STRONG><a name="[716]"></a>rgba8ToPixel</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, lodepng.o(i.rgba8ToPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rgba8ToPixel &rArr; addColorBits
</UL>
<BR>[Calls]<UL><LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addColorBits
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_convert
</UL>

<P><STRONG><a name="[2f0]"></a>setBitOfReversedStream</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, lodepng.o(i.setBitOfReversedStream))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = setBitOfReversedStream
</UL>
<BR>[Called By]<UL><LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removePaddingBits
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adam7_deinterlace
</UL>

<P><STRONG><a name="[395]"></a>string_cleanup</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lodepng.o(i.string_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = string_cleanup &rArr; lodepng_free &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_free
</UL>
<BR>[Called By]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_clear_icc
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LodePNGText_cleanup
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LodePNGIText_cleanup
</UL>

<P><STRONG><a name="[6fc]"></a>ucvector_reserve</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lodepng.o(i.ucvector_reserve))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ucvector_reserve &rArr; lodepng_realloc &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucvector_resize
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateHuffmanBlock
</UL>

<P><STRONG><a name="[6ff]"></a>ucvector_resize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lodepng.o(i.ucvector_resize))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ucvector_resize &rArr; ucvector_reserve &rArr; lodepng_realloc &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucvector_reserve
</UL>
<BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zlib_decompress
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateNoCompression
</UL>

<P><STRONG><a name="[743]"></a>unfilter</STRONG> (Thumb, 88 bytes, Stack size 48 bytes, lodepng.o(i.unfilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = unfilter &rArr; unfilterScanline &rArr; paethPredictor
</UL>
<BR>[Calls]<UL><LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unfilterScanline
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_get_raw_size_idat
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;postProcessScanlines
</UL>

<P><STRONG><a name="[795]"></a>unfilterScanline</STRONG> (Thumb, 1004 bytes, Stack size 88 bytes, lodepng.o(i.unfilterScanline))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = unfilterScanline &rArr; paethPredictor
</UL>
<BR>[Calls]<UL><LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paethPredictor
</UL>
<BR>[Called By]<UL><LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unfilter
</UL>

<P><STRONG><a name="[5a7]"></a>zlib_decompress</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, lodepng.o(i.zlib_decompress))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = zlib_decompress &rArr; lodepng_zlib_decompressv &rArr; lodepng_inflatev &rArr; inflateHuffmanBlock &rArr; getTreeInflateDynamic &rArr; HuffmanTree_makeFromLengths &rArr; lodepng_malloc &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucvector_resize
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lodepng_zlib_decompressv
</UL>
<BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_zTXt
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_iTXt
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readChunk_iCCP
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decodeGeneric
</UL>

<P><STRONG><a name="[4a3]"></a>_get_convertor_string_width</STRONG> (Thumb, 502 bytes, Stack size 136 bytes, gt_font.o(i._get_convertor_string_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _get_convertor_string_width &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset_0
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_type_get
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_one_char_code_len_get
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_word_width_figure_up
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_size_length_by_style
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_convertor_data_get
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_code_transform
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_split
</UL>

<P><STRONG><a name="[4a5]"></a>_get_font_style</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, gt_font.o(i._get_font_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _get_font_style
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_is_style_cn_or_en
</UL>
<BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_one_word_width
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_get_dot
</UL>

<P><STRONG><a name="[4d1]"></a>_gt_font_lang_and_punctuation_split</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, gt_font.o(i._gt_font_lang_and_punctuation_split))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _gt_font_lang_and_punctuation_split &rArr; gt_font_one_char_code_len_get &rArr; _gt_gb_font_one_char_code_len_get
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_one_char_code_len_get
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_is_style_cn_or_en
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_punctuation
</UL>
<BR>[Called By]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_right_to_left_handler
</UL>

<P><STRONG><a name="[4d3]"></a>_gt_font_language_split</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, gt_font.o(i._gt_font_language_split))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _gt_font_language_split &rArr; gt_font_one_char_code_len_get &rArr; _gt_gb_font_one_char_code_len_get
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_one_char_code_len_get
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_is_style_cn_or_en
</UL>
<BR>[Called By]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_right_to_left_handler
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_split
</UL>

<P><STRONG><a name="[4d2]"></a>_is_punctuation</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gt_font.o(i._is_punctuation))
<BR><BR>[Called By]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_right_to_left_handler
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_font_split
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_font_lang_and_punctuation_split
</UL>

<P><STRONG><a name="[41e]"></a>_calc_max_area_recursive</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gt_hal_disp.o(i._calc_max_area_recursive))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = _calc_max_area_recursive &rArr;  _calc_max_area_recursive (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_visible
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_update_max_area
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_virtual
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_is_ignore_calc_max_area
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calc_max_area_recursive
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_reload_max_area
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calc_max_area_recursive
</UL>

<P><STRONG><a name="[4c4]"></a>_gt_disp_area_get_idx</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gt_hal_disp.o(i._gt_disp_area_get_idx))
<BR><BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_append_area
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_get_area
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_area_pop
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_disp_refr_area_push
</UL>

<P><STRONG><a name="[4b9]"></a>_gt_disp_create</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, gt_hal_disp.o(i._gt_disp_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = _gt_disp_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_virtual
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_set_bgcolor
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_set_disp
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_drv_register
</UL>

<P><STRONG><a name="[9e]"></a>_gt_disp_task_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_hal_disp.o(i._gt_disp_task_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = _gt_disp_task_handler &rArr; gt_refr_timer &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_refr_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_hal_disp.o(i.gt_disp_drv_register)
</UL>
<P><STRONG><a name="[22f]"></a>_close_cb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gt_hal_src.o(i._close_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _close_cb &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_hal_src.o(i.gt_src_init)
</UL>
<P><STRONG><a name="[22e]"></a>_open_cb</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, gt_hal_src.o(i._open_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _open_cb &rArr; _gt_hal_fp_init &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_hal_fp_init
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_hal_src.o(i.gt_src_init)
</UL>
<P><STRONG><a name="[230]"></a>_read_cb</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, gt_hal_src.o(i._read_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _read_cb &rArr; gt_memcpy &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_hal_src.o(i.gt_src_init)
</UL>
<P><STRONG><a name="[231]"></a>_seek_cb</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gt_hal_src.o(i._seek_cb))
<BR>[Address Reference Count : 1]<UL><LI> gt_hal_src.o(i.gt_src_init)
</UL>
<P><STRONG><a name="[232]"></a>_tell_cb</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_hal_src.o(i._tell_cb))
<BR>[Address Reference Count : 1]<UL><LI> gt_hal_src.o(i.gt_src_init)
</UL>
<P><STRONG><a name="[23b]"></a>_close_cb</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gt_hal_vf.o(i._close_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _close_cb &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_hal_vf.o(i.gt_vf_init)
</UL>
<P><STRONG><a name="[23a]"></a>_open_cb</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, gt_hal_vf.o(i._open_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _open_cb &rArr; _gt_hal_fp_init &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_vf_get_drv
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_hal_fp_init
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_hal_vf.o(i.gt_vf_init)
</UL>
<P><STRONG><a name="[23c]"></a>_read_cb</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, gt_hal_vf.o(i._read_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _read_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_hal_vf.o(i.gt_vf_init)
</UL>
<P><STRONG><a name="[23e]"></a>_seek_cb</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gt_hal_vf.o(i._seek_cb))
<BR>[Address Reference Count : 1]<UL><LI> gt_hal_vf.o(i.gt_vf_init)
</UL>
<P><STRONG><a name="[23f]"></a>_tell_cb</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gt_hal_vf.o(i._tell_cb))
<BR>[Address Reference Count : 1]<UL><LI> gt_hal_vf.o(i.gt_vf_init)
</UL>
<P><STRONG><a name="[23d]"></a>_write_cb</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gt_hal_vf.o(i._write_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _write_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_hal_vf.o(i.gt_vf_init)
</UL>
<P><STRONG><a name="[4ac]"></a>_gt_anim_calc_path_by_bezier</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, gt_anim.o(i._gt_anim_calc_path_by_bezier))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _gt_anim_calc_path_by_bezier &rArr; gt_bezier3
</UL>
<BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_map
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_bezier3
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_path_overshoot
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_path_ease_out
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_path_ease_in_out
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_path_ease_in
</UL>

<P><STRONG><a name="[4af]"></a>_gt_anim_change_list</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gt_anim.o(i._gt_anim_change_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _gt_anim_change_list &rArr; _gt_timer_set_paused
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_set_paused
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_is_ll_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_start
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_core_init
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_free_task
</UL>

<P><STRONG><a name="[4b3]"></a>_gt_anim_free_task</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gt_anim.o(i._gt_anim_free_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_change_list
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_start
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_del
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_del_by
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_ready_handler
</UL>

<P><STRONG><a name="[99]"></a>_gt_anim_path_bounce</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, gt_anim.o(i._gt_anim_path_bounce))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _gt_anim_path_bounce &rArr; gt_bezier3
</UL>
<BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_map
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_bezier3
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_anim.o(i.gt_anim_set_path_type)
</UL>
<P><STRONG><a name="[95]"></a>_gt_anim_path_ease_in</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gt_anim.o(i._gt_anim_path_ease_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _gt_anim_path_ease_in &rArr; _gt_anim_calc_path_by_bezier &rArr; gt_bezier3
</UL>
<BR>[Calls]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_calc_path_by_bezier
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_anim.o(i.gt_anim_set_path_type)
</UL>
<P><STRONG><a name="[97]"></a>_gt_anim_path_ease_in_out</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gt_anim.o(i._gt_anim_path_ease_in_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _gt_anim_path_ease_in_out &rArr; _gt_anim_calc_path_by_bezier &rArr; gt_bezier3
</UL>
<BR>[Calls]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_calc_path_by_bezier
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_anim.o(i.gt_anim_set_path_type)
</UL>
<P><STRONG><a name="[96]"></a>_gt_anim_path_ease_out</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gt_anim.o(i._gt_anim_path_ease_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _gt_anim_path_ease_out &rArr; _gt_anim_calc_path_by_bezier &rArr; gt_bezier3
</UL>
<BR>[Calls]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_calc_path_by_bezier
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_anim.o(i.gt_anim_set_path_type)
</UL>
<P><STRONG><a name="[94]"></a>_gt_anim_path_linear</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gt_anim.o(i._gt_anim_path_linear))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _gt_anim_path_linear &rArr; gt_map
</UL>
<BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_map
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gt_anim.o(i.gt_anim_init)
<LI> gt_anim.o(i.gt_anim_set_path_type)
</UL>
<P><STRONG><a name="[98]"></a>_gt_anim_path_overshoot</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gt_anim.o(i._gt_anim_path_overshoot))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _gt_anim_path_overshoot &rArr; _gt_anim_calc_path_by_bezier &rArr; gt_bezier3
</UL>
<BR>[Calls]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_calc_path_by_bezier
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_anim.o(i.gt_anim_set_path_type)
</UL>
<P><STRONG><a name="[9a]"></a>_gt_anim_path_step</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gt_anim.o(i._gt_anim_path_step))
<BR>[Address Reference Count : 1]<UL><LI> gt_anim.o(i.gt_anim_set_path_type)
</UL>
<P><STRONG><a name="[4b4]"></a>_gt_anim_ready_handler</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, gt_anim.o(i._gt_anim_ready_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _gt_anim_ready_handler &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_free_task
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_task_handler
</UL>

<P><STRONG><a name="[7a]"></a>_gt_anim_task_handler</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, gt_anim.o(i._gt_anim_task_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _gt_anim_task_handler &rArr; _gt_anim_ready_handler &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tick_get
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tick_elapse
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_gc_is_ll_empty
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_ready_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_anim.o(i._gt_anim_core_init)
</UL>
<P><STRONG><a name="[4b0]"></a>_gt_gc_is_ll_empty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_anim.o(i._gt_gc_is_ll_empty))
<BR><BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_start
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_del
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_del_by
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_task_handler
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_anim_change_list
</UL>

<P><STRONG><a name="[611]"></a>_gt_area_is_outside_area</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, gt_area.o(i._gt_area_is_outside_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _gt_area_is_outside_area
</UL>
<BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_is_intersect_screen
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_cover_screen
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_intersect_screen
</UL>

<P><STRONG><a name="[6f3]"></a>adjust_request_size</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gt_tlsf.o(i.adjust_request_size))
<BR><BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_realloc
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_malloc
</UL>

<P><STRONG><a name="[565]"></a>block_absorb</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gt_tlsf.o(i.block_absorb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = block_absorb &rArr; block_link_next
</UL>
<BR>[Calls]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_free
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
</UL>

<P><STRONG><a name="[573]"></a>block_can_split</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gt_tlsf.o(i.block_can_split))
<BR><BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_realloc
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
</UL>

<P><STRONG><a name="[567]"></a>block_insert</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gt_tlsf.o(i.block_insert))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_realloc
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_free
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_add_pool
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
</UL>

<P><STRONG><a name="[566]"></a>block_link_next</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gt_tlsf.o(i.block_link_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = block_link_next
</UL>
<BR>[Calls]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
</UL>
<BR>[Called By]<UL><LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_add_pool
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb
</UL>

<P><STRONG><a name="[56a]"></a>block_locate_free</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, gt_tlsf.o(i.block_locate_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = block_locate_free &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_free_block
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_insert
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_fls
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_ffs
</UL>
<BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_malloc
</UL>

<P><STRONG><a name="[56e]"></a>block_mark_as_free</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gt_tlsf.o(i.block_mark_as_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = block_mark_as_free &rArr; block_link_next
</UL>
<BR>[Calls]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_free
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
</UL>

<P><STRONG><a name="[56f]"></a>block_mark_as_used</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gt_tlsf.o(i.block_mark_as_used))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = block_mark_as_used
</UL>
<BR>[Calls]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_realloc
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
</UL>

<P><STRONG><a name="[570]"></a>block_merge_next</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gt_tlsf.o(i.block_merge_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_realloc
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_free
</UL>

<P><STRONG><a name="[569]"></a>block_next</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gt_tlsf.o(i.block_next))
<BR><BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_realloc
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next
</UL>

<P><STRONG><a name="[572]"></a>block_prepare_used</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gt_tlsf.o(i.block_prepare_used))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_can_split
</UL>
<BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_malloc
</UL>

<P><STRONG><a name="[571]"></a>block_remove</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, gt_tlsf.o(i.block_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_free_block
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_free
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
</UL>

<P><STRONG><a name="[574]"></a>block_split</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gt_tlsf.o(i.block_split))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = block_split &rArr; block_mark_as_free &rArr; block_link_next
</UL>
<BR>[Calls]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_realloc
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
</UL>

<P><STRONG><a name="[56c]"></a>gt_tlsf_ffs</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gt_tlsf.o(i.gt_tlsf_ffs))
<BR><BR>[Called By]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>

<P><STRONG><a name="[56b]"></a>gt_tlsf_fls</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_tlsf.o(i.gt_tlsf_fls))
<BR><BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_insert
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>

<P><STRONG><a name="[568]"></a>mapping_insert</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gt_tlsf.o(i.mapping_insert))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_tlsf_fls
</UL>
<BR>[Called By]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
</UL>

<P><STRONG><a name="[56d]"></a>remove_free_block</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gt_tlsf.o(i.remove_free_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = remove_free_block
</UL>
<BR>[Called By]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>

<P><STRONG><a name="[6f5]"></a>gt_txt_string_del</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, gt_txt.o(i.gt_txt_string_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = gt_txt_string_del &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_check_char_numb
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_txt_cut
</UL>

<P><STRONG><a name="[80]"></a>_default_equal_cb</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_vector.o(i._default_equal_cb))
<BR>[Address Reference Count : 1]<UL><LI> gt_vector.o(i._gt_vector_create)
</UL>
<P><STRONG><a name="[49f]"></a>_free_item_obj</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gt_vector.o(i._free_item_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _free_item_obj &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_clear_all_items
</UL>

<P><STRONG><a name="[247]"></a>_gt_vector_iterator_has_next</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gt_vector.o(i._gt_vector_iterator_has_next))
<BR>[Address Reference Count : 1]<UL><LI> gt_vector.o(.constdata)
</UL>
<P><STRONG><a name="[249]"></a>_gt_vector_iterator_index</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gt_vector.o(i._gt_vector_iterator_index))
<BR>[Address Reference Count : 1]<UL><LI> gt_vector.o(.constdata)
</UL>
<P><STRONG><a name="[248]"></a>_gt_vector_iterator_next</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gt_vector.o(i._gt_vector_iterator_next))
<BR>[Address Reference Count : 1]<UL><LI> gt_vector.o(.constdata)
</UL>
<P><STRONG><a name="[6eb]"></a>_get_item_top_by_index</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, gt_stack.o(i._get_item_top_by_index))
<BR><BR>[Called By]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_pop
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_stack_peek_by
</UL>

<P><STRONG><a name="[24b]"></a>_btn_deinit_cb</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gt_btn.o(i._btn_deinit_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _btn_deinit_cb &rArr; _gt_vector_free &rArr; _gt_vector_clear_all_items &rArr; _free_item_obj &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_btn.o(.constdata)
</UL>
<P><STRONG><a name="[24c]"></a>_btn_event_cb</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, gt_btn.o(i._btn_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _btn_event_cb &rArr; gt_btn_set_text &rArr; _gt_vector_add_item &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_get_type
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_get_code
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_state
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_press_btn_handler
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_turn_next
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_btn.o(.constdata)
</UL>
<P><STRONG><a name="[24a]"></a>_btn_init_cb</STRONG> (Thumb, 384 bytes, Stack size 128 bytes, gt_btn.o(i._btn_init_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 780<LI>Call Chain = _btn_init_cb &rArr; draw_text &rArr; draw_text_single_line &rArr; _draw_text_convertor_split &rArr; _draw_blend_underline &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_reduce
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_graph_init_rect_attr
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_focus
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_state
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_get_item
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_vector_get_index
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_btn.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>_contents_equal_cb</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gt_btn.o(i._contents_equal_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _contents_equal_cb &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_btn.o(i.gt_btn_create)
</UL>
<P><STRONG><a name="[9c]"></a>_contents_free_cb</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gt_btn.o(i._contents_free_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _contents_free_cb &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_btn.o(i.gt_btn_create)
</UL>
<P><STRONG><a name="[410]"></a>_press_btn_handler</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gt_btn.o(i._press_btn_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _press_btn_handler &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_get_type
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_state
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_state
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btn_event_cb
</UL>

<P><STRONG><a name="[613]"></a>gt_color_hex</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gt_btn.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_color_hex &rArr; gt_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
</UL>

<P><STRONG><a name="[614]"></a>gt_color_make</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gt_btn.o(i.gt_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>

<P><STRONG><a name="[24e]"></a>_deinit_cb</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gt_checkbox.o(i._deinit_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _deinit_cb &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_checkbox.o(.constdata)
</UL>
<P><STRONG><a name="[24f]"></a>_event_cb</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, gt_checkbox.o(i._event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _event_cb &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_get_code
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_state
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_checkbox.o(.constdata)
</UL>
<P><STRONG><a name="[24d]"></a>_init_cb</STRONG> (Thumb, 484 bytes, Stack size 136 bytes, gt_checkbox.o(i._init_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 788<LI>Call Chain = _init_cb &rArr; draw_text &rArr; draw_text_single_line &rArr; _draw_text_convertor_split &rArr; _draw_blend_underline &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_reduce
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_graph_init_rect_attr
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_focus
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_state
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_make
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_checkbox.o(.constdata)
</UL>
<P><STRONG><a name="[51a]"></a>gt_color_hex</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gt_checkbox.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_color_hex &rArr; gt_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
</UL>

<P><STRONG><a name="[519]"></a>gt_color_make</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gt_checkbox.o(i.gt_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_checkbox_create
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
</UL>

<P><STRONG><a name="[251]"></a>_deinit_cb</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gt_clock.o(i._deinit_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _deinit_cb &rArr; _remove_all_next_day_cb &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_remove_all_next_day_cb
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_remove_all_alert_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_clock.o(.constdata)
</UL>
<P><STRONG><a name="[252]"></a>_event_cb</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gt_clock.o(i._event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _event_cb &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_get_code
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_clock.o(.constdata)
</UL>
<P><STRONG><a name="[4a8]"></a>_get_time_str</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, gt_clock.o(i._get_time_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _get_time_str &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memcpy
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memset
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_double_target_ignore_case
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
</UL>

<P><STRONG><a name="[62e]"></a>_go_next_sec</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, gt_clock.o(i._go_next_sec))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _go_next_sec
</UL>
<BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_turn_next_second
</UL>

<P><STRONG><a name="[62f]"></a>_go_prev_sec</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, gt_clock.o(i._go_prev_sec))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _go_prev_sec
</UL>
<BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_turn_next_second
</UL>

<P><STRONG><a name="[9d]"></a>_gt_clock_timer_cb</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gt_clock.o(i._gt_clock_timer_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _gt_clock_timer_cb &rArr; gt_clock_turn_next_second &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_get_user_data
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_clock_turn_next_second
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_clock.o(i.gt_clock_start)
</UL>
<P><STRONG><a name="[250]"></a>_init_cb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gt_clock.o(i._init_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = _init_cb &rArr; draw_focus &rArr; draw_bg &rArr; _gt_radius_mask_init &rArr; _gt_get_radius_mask &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_copy
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_focus
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_time_str
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_clock.o(.constdata)
</UL>
<P><STRONG><a name="[4ab]"></a>_is_double_target_ignore_case</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, gt_clock.o(i._is_double_target_ignore_case))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _is_double_target_ignore_case
</UL>
<BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_time_str
</UL>

<P><STRONG><a name="[45b]"></a>_remove_all_alert_cb</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gt_clock.o(i._remove_all_alert_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _remove_all_alert_cb &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deinit_cb
</UL>

<P><STRONG><a name="[45c]"></a>_remove_all_next_day_cb</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gt_clock.o(i._remove_all_next_day_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _remove_all_next_day_cb &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deinit_cb
</UL>

<P><STRONG><a name="[253]"></a>_event_cb</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gt_group.o(i._event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _event_cb &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_get_code
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_infinite_area
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_group.o(.constdata)
</UL>
<P><STRONG><a name="[47c]"></a>_set_infinite_area</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gt_group.o(i._set_infinite_area))
<BR><BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_group_create
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
</UL>

<P><STRONG><a name="[255]"></a>_deinit_cb</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gt_img.o(i._deinit_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _deinit_cb &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_img.o(.constdata)
</UL>
<P><STRONG><a name="[256]"></a>_event_cb</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gt_img.o(i._event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = _event_cb &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_fs_read_img_wh
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_get_code
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_size_change
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_get_src
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_img.o(.constdata)
</UL>
<P><STRONG><a name="[254]"></a>_init_cb</STRONG> (Thumb, 62 bytes, Stack size 48 bytes, gt_img.o(i._init_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = _init_cb &rArr; draw_focus &rArr; draw_bg &rArr; _gt_radius_mask_init &rArr; _gt_get_radius_mask &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_focus
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_img.o(.constdata)
</UL>
<P><STRONG><a name="[258]"></a>_deinit_cb</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gt_input.o(i._deinit_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _deinit_cb &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_input.o(.constdata)
</UL>
<P><STRONG><a name="[259]"></a>_event_cb</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gt_input.o(i._event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _event_cb &rArr; _input_key_handler &rArr; gt_input_del_value &rArr; gt_txt_cut &rArr; gt_txt_string_del &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_get_code
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_indev_get_key
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_input_key_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_input.o(.constdata)
</UL>
<P><STRONG><a name="[4e8]"></a>_gt_input_cursor_anim</STRONG> (Thumb, 122 bytes, Stack size 56 bytes, gt_input.o(i._gt_input_cursor_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = _gt_input_cursor_anim &rArr; draw_bg &rArr; _gt_radius_mask_init &rArr; _gt_get_radius_mask &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_graph_init_rect_attr
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_init_widget
</UL>

<P><STRONG><a name="[4ea]"></a>_gt_input_init_widget</STRONG> (Thumb, 452 bytes, Stack size 144 bytes, gt_input.o(i._gt_input_init_widget))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = _gt_input_init_widget &rArr; draw_text &rArr; draw_text_single_line &rArr; _draw_text_convertor_split &rArr; _draw_blend_underline &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_reduce
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_graph_init_rect_attr
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_focus
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_reduce
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_cursor_anim
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
</UL>

<P><STRONG><a name="[257]"></a>_init_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_input.o(i._init_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = _init_cb &rArr; _gt_input_init_widget &rArr; draw_text &rArr; draw_text_single_line &rArr; _draw_text_convertor_split &rArr; _draw_blend_underline &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_init_widget
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_input.o(.constdata)
</UL>
<P><STRONG><a name="[481]"></a>_input_key_handler</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, gt_input.o(i._input_key_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _input_key_handler &rArr; gt_input_del_value &rArr; gt_txt_cut &rArr; gt_txt_string_del &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_move_right_pos_cursor
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_move_left_pos_cursor
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_del_value
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_append_value
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_append_char
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
</UL>

<P><STRONG><a name="[4eb]"></a>gt_area_reduce</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gt_input.o(i.gt_area_reduce))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_area_reduce
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_init_widget
</UL>

<P><STRONG><a name="[632]"></a>gt_color_black</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gt_input.o(i.gt_color_black))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_color_black &rArr; gt_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_create
</UL>

<P><STRONG><a name="[4e9]"></a>gt_color_hex</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gt_input.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_color_hex &rArr; gt_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_init_widget
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_input_cursor_anim
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_create
</UL>

<P><STRONG><a name="[633]"></a>gt_color_make</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gt_input.o(i.gt_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_black
</UL>

<P><STRONG><a name="[25b]"></a>_deinit_cb</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gt_input_number.o(i._deinit_cb))
<BR>[Address Reference Count : 1]<UL><LI> gt_input_number.o(.constdata)
</UL>
<P><STRONG><a name="[25c]"></a>_event_cb</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gt_input_number.o(i._event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = _event_cb &rArr; gt_obj_set_size &rArr; gt_obj_size_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_get_code
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_input_number.o(.constdata)
</UL>
<P><STRONG><a name="[25a]"></a>_init_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gt_input_number.o(i._init_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = _init_cb &rArr; draw_focus &rArr; draw_bg &rArr; _gt_radius_mask_init &rArr; _gt_get_radius_mask &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_focus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_input_number.o(.constdata)
</UL>
<P><STRONG><a name="[545]"></a>_update_label_value</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, gt_input_number.o(i._update_label_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _update_label_value &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_value
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_min
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_max
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_fill_zero_front
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_display_integer_length
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_set_display_decimal_length
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_increase
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_decrease
</UL>

<P><STRONG><a name="[25e]"></a>_deinit_cb</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gt_label.o(i._deinit_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _deinit_cb &rArr; _free_auto_scroll_st &rArr; gt_anim_del_by &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_auto_scroll_st
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_label.o(.constdata)
</UL>
<P><STRONG><a name="[25f]"></a>_event_cb</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gt_label.o(i._event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _event_cb &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_get_code
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_label.o(.constdata)
</UL>
<P><STRONG><a name="[45d]"></a>_free_auto_scroll_st</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gt_label.o(i._free_auto_scroll_st))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _free_auto_scroll_st &rArr; gt_anim_del_by &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_del_by
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deinit_cb
</UL>

<P><STRONG><a name="[25d]"></a>_init_cb</STRONG> (Thumb, 380 bytes, Stack size 104 bytes, gt_label.o(i._init_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = _init_cb &rArr; draw_text &rArr; draw_text_single_line &rArr; _draw_text_convertor_split &rArr; _draw_blend_underline &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_reduce
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_focus
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_label.o(.constdata)
</UL>
<P><STRONG><a name="[52e]"></a>_reset_auto_scroll_st</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gt_label.o(i._reset_auto_scroll_st))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _reset_auto_scroll_st &rArr; gt_anim_restart
</UL>
<BR>[Calls]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_restart
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
</UL>

<P><STRONG><a name="[426]"></a>_change_state_by_trigger_mode</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gt_obj.o(i._change_state_by_trigger_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _change_state_by_trigger_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_state
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_trigger_mode
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_state
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_obj_event_cb
</UL>

<P><STRONG><a name="[492]"></a>_find_obj_recursive_by_id</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, gt_obj.o(i._find_obj_recursive_by_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 20 + In Cycle
<LI>Call Chain = _find_obj_recursive_by_id &rArr;  _find_obj_recursive_by_id (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_obj_recursive_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_find_by_id
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_obj_recursive_by_id
</UL>

<P><STRONG><a name="[260]"></a>_init_cb</STRONG> (Thumb, 334 bytes, Stack size 64 bytes, gt_obj.o(i._init_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = _init_cb &rArr; draw_bg &rArr; _gt_radius_mask_init &rArr; _gt_get_radius_mask &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_reduce
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_graph_init_rect_attr
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_state
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_septal_line
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_mask_effect
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_show_bg
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_area_reduce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_obj.o(.constdata)
</UL>
<P><STRONG><a name="[261]"></a>_obj_event_cb</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, gt_obj.o(i._obj_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = _obj_event_cb &rArr; _unmasked_effect_handler &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_get_code
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_mask_effect
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_unmasked_effect_handler
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_change_state_by_trigger_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_obj.o(.constdata)
</UL>
<P><STRONG><a name="[262]"></a>_screen_event_cb</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, gt_obj.o(i._screen_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _screen_event_cb &rArr; gt_obj_scroll_to_y &rArr; gt_obj_scroll_to &rArr; gt_anim_del &rArr; _gt_anim_free_task &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_ver
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_hor
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_get_code
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to_y
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_scroll_to_x
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_screen_scroll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_obj.o(.constdata)
</UL>
<P><STRONG><a name="[53a]"></a>_screen_scroll</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, gt_obj.o(i._screen_scroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = _screen_scroll &rArr; gt_disp_scroll_area_act &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_ver
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_hor
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_scroll_area_act
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_area_max
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_area_act
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_screen_event_cb
</UL>

<P><STRONG><a name="[528]"></a>_unmasked_effect_handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gt_obj.o(i._unmasked_effect_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _unmasked_effect_handler &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_mask_effect
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_obj_event_cb
</UL>

<P><STRONG><a name="[51d]"></a>gt_area_reduce</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gt_obj.o(i.gt_area_reduce))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_area_reduce
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
</UL>

<P><STRONG><a name="[51f]"></a>gt_color_hex</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gt_obj.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_color_hex &rArr; gt_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
</UL>

<P><STRONG><a name="[634]"></a>gt_color_make</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gt_obj.o(i.gt_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_screen_get_bgcolor
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>

<P><STRONG><a name="[3ff]"></a>_add_obj_to_parent</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gt_obj_class.o(i._add_obj_to_parent))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _add_obj_to_parent &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
</UL>

<P><STRONG><a name="[456]"></a>_create_new_screen_obj</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gt_obj_class.o(i._create_new_screen_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _create_new_screen_obj &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_ver
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_res_hor
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_class_create
</UL>

<P><STRONG><a name="[45e]"></a>_destroy_and_free_children</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gt_obj_class.o(i._destroy_and_free_children))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + In Cycle
<LI>Call Chain = _destroy_and_free_children &rArr;  _destroy_and_free_children (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy_self
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_destroy_and_free_children
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_destroy_and_free_children
</UL>

<P><STRONG><a name="[4ec]"></a>_gt_obj_class_destroy_from_parent</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, gt_obj_class.o(i._gt_obj_class_destroy_from_parent))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _gt_obj_class_destroy_from_parent &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memmove
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy
</UL>

<P><STRONG><a name="[4ed]"></a>_gt_obj_class_destroy_screen</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, gt_obj_class.o(i._gt_obj_class_destroy_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _gt_obj_class_destroy_screen &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_memmove
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy
</UL>

<P><STRONG><a name="[45f]"></a>_gt_obj_class_destroy_self</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gt_obj_class.o(i._gt_obj_class_destroy_self))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _gt_obj_class_destroy_self &rArr; gt_obj_remove_all_event_cb &rArr; _free_event_recursive &rArr;  _free_event_recursive (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_remove_all_event_cb
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_indev_remove_want_delate_target
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_obj_class_destroy
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_destroy_and_free_children
</UL>

<P><STRONG><a name="[264]"></a>_deinit_cb</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gt_progress_bar.o(i._deinit_cb))
<BR>[Address Reference Count : 1]<UL><LI> gt_progress_bar.o(.constdata)
</UL>
<P><STRONG><a name="[265]"></a>_event_cb</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, gt_progress_bar.o(i._event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _event_cb &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_get_code
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scroll_dir_ver
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scroll_dir_hor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_progress_bar.o(.constdata)
</UL>
<P><STRONG><a name="[263]"></a>_init_cb</STRONG> (Thumb, 338 bytes, Stack size 80 bytes, gt_progress_bar.o(i._init_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = _init_cb &rArr; draw_focus &rArr; draw_bg &rArr; _gt_radius_mask_init &rArr; _gt_get_radius_mask &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_graph_init_rect_attr
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_focus
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_progress_bar.o(.constdata)
</UL>
<P><STRONG><a name="[483]"></a>_scroll_dir_hor</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gt_progress_bar.o(i._scroll_dir_hor))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _scroll_dir_hor &rArr; gt_progress_bar_set_pos &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_get_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
</UL>

<P><STRONG><a name="[482]"></a>_scroll_dir_ver</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gt_progress_bar.o(i._scroll_dir_ver))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _scroll_dir_ver &rArr; gt_progress_bar_set_pos &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_get_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
</UL>

<P><STRONG><a name="[6d8]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gt_progress_bar.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_create
</UL>

<P><STRONG><a name="[267]"></a>_deinit_cb</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gt_radio.o(i._deinit_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _deinit_cb &rArr; _mem_free &rArr; gt_tlsf_free &rArr; block_merge_next &rArr; block_remove &rArr; remove_free_block
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_radio.o(.constdata)
</UL>
<P><STRONG><a name="[268]"></a>_event_cb</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gt_radio.o(i._event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _event_cb &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_get_code
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_radio_set_selected
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_radio.o(.constdata)
</UL>
<P><STRONG><a name="[4fb]"></a>_gt_radio_init_widget</STRONG> (Thumb, 590 bytes, Stack size 136 bytes, gt_radio.o(i._gt_radio_init_widget))
<BR><BR>[Stack]<UL><LI>Max Depth = 788<LI>Call Chain = _gt_radio_init_widget &rArr; draw_text &rArr; draw_text_single_line &rArr; _draw_text_convertor_split &rArr; _draw_blend_underline &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_reduce
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_graph_init_rect_attr
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_text
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_focus
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_state
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_make
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_cb
</UL>

<P><STRONG><a name="[266]"></a>_init_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gt_radio.o(i._init_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 788<LI>Call Chain = _init_cb &rArr; _gt_radio_init_widget &rArr; draw_text &rArr; draw_text_single_line &rArr; _draw_text_convertor_split &rArr; _draw_blend_underline &rArr; gt_draw_blend &rArr; _get_cover_dst_area_and_offset_by &rArr; gt_area_cover_screen &rArr; _gt_area_is_outside_area
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radio_init_widget
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_radio.o(.constdata)
</UL>
<P><STRONG><a name="[4fc]"></a>gt_color_hex</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gt_radio.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_color_hex &rArr; gt_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radio_init_widget
</UL>

<P><STRONG><a name="[4fd]"></a>gt_color_make</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gt_radio.o(i.gt_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_radio_init_widget
</UL>

<P><STRONG><a name="[26a]"></a>_deinit_cb</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gt_rect.o(i._deinit_cb))
<BR>[Address Reference Count : 1]<UL><LI> gt_rect.o(.constdata)
</UL>
<P><STRONG><a name="[26b]"></a>_event_cb</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gt_rect.o(i._event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _event_cb &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_get_code
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_rect.o(.constdata)
</UL>
<P><STRONG><a name="[269]"></a>_init_cb</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, gt_rect.o(i._init_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = _init_cb &rArr; draw_focus &rArr; draw_bg &rArr; _gt_radius_mask_init &rArr; _gt_get_radius_mask &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_graph_init_rect_attr
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_focus
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_rect.o(.constdata)
</UL>
<P><STRONG><a name="[636]"></a>gt_color_make</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gt_rect.o(i.gt_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_white
</UL>

<P><STRONG><a name="[635]"></a>gt_color_white</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gt_rect.o(i.gt_color_white))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gt_color_white &rArr; gt_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
</UL>

<P><STRONG><a name="[75]"></a>_close_release_cb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gt_dialog.o(i._close_release_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _close_release_cb &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Address Reference Count : 3]<UL><LI> gt_dialog.o(i.gt_dialog_create_issue)
<LI> gt_dialog.o(i._create_cancel_btn)
<LI> gt_dialog.o(i._create_close_btn)
</UL>
<P><STRONG><a name="[440]"></a>_create_anim_handler</STRONG> (Thumb, 88 bytes, Stack size 104 bytes, gt_dialog.o(i._create_anim_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = _create_anim_handler &rArr; gt_obj_child_set_prop &rArr;  gt_obj_child_set_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_start
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_set_path_type
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_anim_init
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_untouchability
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_untouchability
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_show
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
</UL>

<P><STRONG><a name="[446]"></a>_create_cancel_btn</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, gt_dialog.o(i._create_cancel_btn))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = _create_cancel_btn &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_inside
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_radius
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_border
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_border_width
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_cancel_btn_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
</UL>

<P><STRONG><a name="[450]"></a>_create_close_btn</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, gt_dialog.o(i._create_close_btn))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = _create_close_btn &rArr; gt_btn_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_inside
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_text
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_font_color
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_pressed
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_set_color_background
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_btn_create
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_close_btn_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create
</UL>

<P><STRONG><a name="[72]"></a>_dialog_anim_exec_cb</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gt_dialog.o(i._dialog_anim_exec_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = _dialog_anim_exec_cb &rArr; gt_obj_child_set_prop &rArr;  gt_obj_child_set_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_dialog.o(i._create_anim_handler)
</UL>
<P><STRONG><a name="[74]"></a>_dialog_close_anim_ready_cb</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gt_dialog.o(i._dialog_close_anim_ready_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = _dialog_close_anim_ready_cb &rArr; gt_obj_destroy &rArr; gt_obj_child_set_prop &rArr;  gt_obj_child_set_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_destroy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_dialog.o(i._create_anim_handler)
</UL>
<P><STRONG><a name="[73]"></a>_dialog_show_anim_start_cb</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gt_dialog.o(i._dialog_show_anim_start_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _dialog_show_anim_start_cb &rArr; gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_dialog.o(i._create_anim_handler)
</UL>
<P><STRONG><a name="[26d]"></a>_event_cb</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, gt_dialog.o(i._event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = _event_cb &rArr; _create_anim_handler &rArr; gt_obj_child_set_prop &rArr;  gt_obj_child_set_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_get_code
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_title_pos
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_content_pos
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_confirm_btn_pos
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_close_btn_pos
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_cancel_btn_pos
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_anim_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_dialog.o(.constdata)
</UL>
<P><STRONG><a name="[494]"></a>_find_showing_recursive_by_type</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gt_dialog.o(i._find_showing_recursive_by_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = _find_showing_recursive_by_type &rArr;  _find_showing_recursive_by_type (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_visible
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_showing_recursive_by_type
</UL>
<BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_get_active_obj
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_showing_recursive_by_type
</UL>

<P><STRONG><a name="[26c]"></a>_init_cb</STRONG> (Thumb, 78 bytes, Stack size 48 bytes, gt_dialog.o(i._init_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _init_cb &rArr; draw_bg &rArr; _gt_radius_mask_init &rArr; _gt_get_radius_mask &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_graph_init_rect_attr
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_dialog.o(.constdata)
</UL>
<P><STRONG><a name="[448]"></a>_set_cancel_btn_pos</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gt_dialog.o(i._set_cancel_btn_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _set_cancel_btn_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_cancel_btn
</UL>

<P><STRONG><a name="[451]"></a>_set_close_btn_pos</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gt_dialog.o(i._set_close_btn_pos))
<BR><BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_close_btn
</UL>

<P><STRONG><a name="[487]"></a>_set_confirm_btn_pos</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gt_dialog.o(i._set_confirm_btn_pos))
<BR><BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
</UL>

<P><STRONG><a name="[486]"></a>_set_content_pos</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gt_dialog.o(i._set_content_pos))
<BR><BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
</UL>

<P><STRONG><a name="[485]"></a>_set_title_pos</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gt_dialog.o(i._set_title_pos))
<BR><BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_event_cb
</UL>

<P><STRONG><a name="[44a]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gt_dialog.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create_issue
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_dialog_create
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_close_btn
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_cancel_btn
</UL>

<P><STRONG><a name="[404]"></a>_adjust_img_center_line</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gt_status_bar.o(i._adjust_img_center_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = _adjust_img_center_line &rArr; gt_obj_set_pos &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_y
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_x
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_h
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_get_width
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_hor_center_widgets
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_img_obj
</UL>

<P><STRONG><a name="[423]"></a>_change_lab_text</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gt_status_bar.o(i._change_lab_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _change_lab_text &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_child
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
</UL>
<BR>[Called By]<UL><LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_left_change_text
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_right_change_text
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_change_text
</UL>

<P><STRONG><a name="[452]"></a>_create_img_obj</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gt_status_bar.o(i._create_img_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = _create_img_obj &rArr; gt_img_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_inside
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_by_str
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_adjust_img_center_line
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_right_add_icon
</UL>

<P><STRONG><a name="[454]"></a>_create_lab_obj</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, gt_status_bar.o(i._create_lab_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = _create_lab_obj &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_inside
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_h
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_thick_en
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_thick_cn
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_gray
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_numb
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_by_str
</UL>
<BR>[Called By]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_left_add_text
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_add_text
</UL>

<P><STRONG><a name="[26f]"></a>_event_cb</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gt_status_bar.o(i._event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _event_cb &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_get_code
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_status_bar.o(.constdata)
</UL>
<P><STRONG><a name="[453]"></a>_find_by_str</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, gt_status_bar.o(i._find_by_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _find_by_str &rArr; gt_img_get_src
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_get_src
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_get_text
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_find_by
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_add_icon
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_lab_obj
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_create_img_obj
</UL>

<P><STRONG><a name="[493]"></a>_find_obj_recursive_by_type</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, gt_status_bar.o(i._find_obj_recursive_by_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = _find_obj_recursive_by_type &rArr;  _find_obj_recursive_by_type (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_obj_recursive_by_type
</UL>
<BR>[Called By]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_get_obj
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_find_obj_recursive_by_type
</UL>

<P><STRONG><a name="[509]"></a>_hor_center_widgets</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, gt_status_bar.o(i._hor_center_widgets))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = _hor_center_widgets &rArr; _adjust_img_center_line &rArr; gt_obj_set_pos &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_adjust_img_center_line
</UL>
<BR>[Called By]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_resize_part_width
</UL>

<P><STRONG><a name="[26e]"></a>_init_cb</STRONG> (Thumb, 62 bytes, Stack size 48 bytes, gt_status_bar.o(i._init_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _init_cb &rArr; draw_bg &rArr; _gt_radius_mask_init &rArr; _gt_get_radius_mask &rArr; _mem_malloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_graph_init_rect_attr
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt_status_bar.o(.constdata)
</UL>
<P><STRONG><a name="[530]"></a>_resize_part_width</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, gt_status_bar.o(i._resize_part_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = _resize_part_width &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_x
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_layout_row_grow
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_get_w
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_hor_center_widgets
</UL>
<BR>[Called By]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_scale
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_height
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_create
</UL>

<P><STRONG><a name="[544]"></a>_set_font_param_call</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, gt_status_bar.o(i._set_font_param_call))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _set_font_param_call
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_is_type
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_thick_en
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_thick_cn
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_size
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_gray
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_family_fl
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_family_cn
</UL>

<P><STRONG><a name="[524]"></a>_lcd_init</STRONG> (Thumb, 310 bytes, Stack size 8 bytes, bsp_lcd_xmc.o(i._lcd_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _lcd_init &rArr; delay_ms &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_xmc_init
</UL>

<P><STRONG><a name="[548]"></a>_xmc_init</STRONG> (Thumb, 436 bytes, Stack size 120 bytes, bsp_lcd_xmc.o(i._xmc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _xmc_init &rArr; tmr13_init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr13_init
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmc_norsram_timing_default_para_init
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmc_norsram_default_para_init
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmc_nor_sram_timing_config
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmc_nor_sram_init
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmc_nor_sram_enable
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmc_ext_timing_config
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_xmc_init
</UL>

<P><STRONG><a name="[555]"></a>XPT2046_Calculate_CalibrationFactor</STRONG> (Thumb, 444 bytes, Stack size 28 bytes, bsp_xpt2046.o(i.XPT2046_Calculate_CalibrationFactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = XPT2046_Calculate_CalibrationFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt2046_touch_calibrate
</UL>

<P><STRONG><a name="[3f8]"></a>XPT2046_EXTI_Read</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp_xpt2046.o(i.XPT2046_EXTI_Read))
<BR><BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
</UL>
<BR>[Called By]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_read_adc_smooth_xy
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt2046_read_point
</UL>

<P><STRONG><a name="[83]"></a>_xpt2046_read_point</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, bsp_xpt2046.o(i._xpt2046_read_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _xpt2046_read_point &rArr; _xpt_read_adc_smooth_xy &rArr; _xpt_read_adc &rArr; delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_read_adc_smooth_xy
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_EXTI_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_xpt2046.o(i.bsp_xpt2046_init)
</UL>
<P><STRONG><a name="[552]"></a>_xpt2046_touch_calibrate</STRONG> (Thumb, 414 bytes, Stack size 152 bytes, bsp_xpt2046.o(i._xpt2046_touch_calibrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _xpt2046_touch_calibrate &rArr; _xpt_read_adc_smooth_xy &rArr; _xpt_read_adc &rArr; delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_read_adc_smooth_xy
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_Calculate_CalibrationFactor
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_draw_line
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_clear
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_xpt2046_calibrate_or_get_touch_para_with_flash
</UL>

<P><STRONG><a name="[556]"></a>_xpt_pin_reset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_xpt2046.o(i._xpt_pin_reset))
<BR><BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_read_cmd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_read_adc
</UL>

<P><STRONG><a name="[557]"></a>_xpt_pin_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_xpt2046.o(i._xpt_pin_set))
<BR><BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_xpt2046_init
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_read_cmd
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_read_adc
</UL>

<P><STRONG><a name="[558]"></a>_xpt_read_adc</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, bsp_xpt2046.o(i._xpt_read_adc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _xpt_read_adc &rArr; delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_read_cmd
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_pin_set
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_pin_reset
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_read_adc_smooth_xy
</UL>

<P><STRONG><a name="[551]"></a>_xpt_read_adc_smooth_xy</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, bsp_xpt2046.o(i._xpt_read_adc_smooth_xy))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _xpt_read_adc_smooth_xy &rArr; _xpt_read_adc &rArr; delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_read_adc
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_EXTI_Read
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt2046_touch_calibrate
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt2046_read_point
</UL>

<P><STRONG><a name="[559]"></a>_xpt_read_cmd</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, bsp_xpt2046.o(i._xpt_read_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _xpt_read_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_pin_set
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_pin_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_xpt_read_adc
</UL>

<P><STRONG><a name="[242]"></a>_touch_read_reg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touch.o(i._touch_read_reg))
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.touch_init)
</UL>
<P><STRONG><a name="[241]"></a>_touch_write_reg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touch.o(i._touch_write_reg))
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.touch_init)
</UL>
<P><STRONG><a name="[37d]"></a>Freq_to_Pr_Div</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, motor_manage.o(i.Freq_to_Pr_Div))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Freq_to_Pr_Div &rArr; crm_clocks_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorCALIBRRun
</UL>

<P><STRONG><a name="[791]"></a>flipBitsInBytes</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, crc.o(i.flipBitsInBytes))
<BR><BR>[Called By]<UL><LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmc_fillCRC8Table
</UL>

<P><STRONG><a name="[f9]"></a>EnterParam</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_aaamainscreen.o(i.EnterParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = EnterParam &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_aaamainscreen.o(i.gt_init_MainScreen)
</UL>
<P><STRONG><a name="[f8]"></a>EventUpdata</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, activity_aaamainscreen.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = EventUpdata &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judgeIsRunScreen
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_aaamainscreen.o(i.gt_init_MainScreen)
</UL>
<P><STRONG><a name="[fe]"></a>Timer_OneSecond</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, activity_aaamainscreen.o(i.Timer_OneSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Timer_OneSecond &rArr; SoundManage &rArr; WT588F_Send_Data &rArr; delay_us &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_scr
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send_by_id
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmLeve1l
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNewSoundAFlag
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAlarmSoundFlag
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNewSoundAFlag
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentAlarm
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAlarmSoundFlag
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEPLETETimeCountDown
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllAlarm
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmSoundTimeCountDown
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDEPLETEFlag
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmMessage
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAlarmLevel
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundManage
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BattetyStatusAlarm
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BattetyLowAndDepleteAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_aaamainscreen.o(i.gt_init_MainScreen)
</UL>
<P><STRONG><a name="[ff]"></a>Timer_ThirmSec</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, activity_aaamainscreen.o(i.Timer_ThirmSec))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = Timer_ThirmSec &rArr; JudgeInstallTube &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judgeIsRunScreen
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calpressureADandValue
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeInstallTube
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_aaamainscreen.o(i.gt_init_MainScreen)
</UL>
<P><STRONG><a name="[681]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_aaamainscreen.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_MainScreen
</UL>

<P><STRONG><a name="[fb]"></a>mode_select</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_aaamainscreen.o(i.mode_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = mode_select &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_aaamainscreen.o(i.gt_init_MainScreen)
</UL>
<P><STRONG><a name="[fc]"></a>rect4_0_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_aaamainscreen.o(i.rect4_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = rect4_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_aaamainscreen.o(i.gt_init_MainScreen)
</UL>
<P><STRONG><a name="[fd]"></a>rect5_0_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_aaamainscreen.o(i.rect5_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = rect5_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_aaamainscreen.o(i.gt_init_MainScreen)
</UL>
<P><STRONG><a name="[fa]"></a>rect6_0_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_aaamainscreen.o(i.rect6_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = rect6_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_aaamainscreen.o(i.gt_init_MainScreen)
</UL>
<P><STRONG><a name="[88]"></a>OneMin</STRONG> (Thumb, 58 bytes, Stack size 56 bytes, headbar_view.o(i.OneMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = OneMin &rArr; gt_status_bar_right_change_text &rArr; _change_lab_text &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_right_change_text
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_get
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> headbar_view.o(i.create_headevent)
</UL>
<P><STRONG><a name="[87]"></a>OneSecond</STRONG> (Thumb, 426 bytes, Stack size 72 bytes, headbar_view.o(i.OneSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = OneSecond &rArr; gt_status_bar_custom_add_text &rArr; _create_lab_obj &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_color
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_bg_color
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_change_text
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_change_icon
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_add_text
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_add_icon
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAlarmLevel
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> headbar_view.o(i.create_headevent)
</UL>
<P><STRONG><a name="[3b9]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, headbar_view.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneSecond
</UL>

<P><STRONG><a name="[b5]"></a>BrandDown</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, activity_brandchioce.o(i.BrandDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = BrandDown &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineInfusionNode_six_ById
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrandShowpage
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_brandchioce.o(i.gt_init_BrandChoice)
</UL>
<P><STRONG><a name="[31a]"></a>BrandShowpage</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, activity_brandchioce.o(i.BrandShowpage))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = BrandShowpage &rArr; gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrandUp
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrandDown
</UL>

<P><STRONG><a name="[b6]"></a>BrandUp</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, activity_brandchioce.o(i.BrandUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = BrandUp &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineInfusionNode_six_ById
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrandShowpage
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_brandchioce.o(i.gt_init_BrandChoice)
</UL>
<P><STRONG><a name="[b4]"></a>Choice</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, activity_brandchioce.o(i.Choice))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = Choice &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTheTubeNodeName
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineInfusionNodeByPosit
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_brandchioce.o(i.gt_init_BrandChoice)
</UL>
<P><STRONG><a name="[66a]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_brandchioce.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice
</UL>

<P><STRONG><a name="[b8]"></a>Choice</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, activity_brandchoice2.o(i.Choice))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = Choice &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineInfusionNodeByPosit
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_brandchoice2.o(i.gt_init_BrandChoice2)
</UL>
<P><STRONG><a name="[b9]"></a>Down</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, activity_brandchoice2.o(i.Down))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Down &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineInfusionNode_six_ById
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_brandchoice2.o(i.gt_init_BrandChoice2)
</UL>
<P><STRONG><a name="[b7]"></a>EventUpdata</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, activity_brandchoice2.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = EventUpdata &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_brandchoice2.o(i.gt_init_BrandChoice2)
</UL>
<P><STRONG><a name="[ba]"></a>Up</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, activity_brandchoice2.o(i.Up))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Up &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineInfusionNode_six_ById
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_brandchoice2.o(i.gt_init_BrandChoice2)
</UL>
<P><STRONG><a name="[bb]"></a>back</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_brandchoice2.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_brandchoice2.o(i.gt_init_BrandChoice2)
</UL>
<P><STRONG><a name="[66b]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_brandchoice2.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
</UL>

<P><STRONG><a name="[362]"></a>showpage</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, activity_brandchoice2.o(i.showpage))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = showpage &rArr; gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_BrandChoice2
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
</UL>

<P><STRONG><a name="[bc]"></a>back</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, activity_clearaccumvol.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = back &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_clearaccumvol.o(i.gt_init_ClearAccumVol)
</UL>
<P><STRONG><a name="[bd]"></a>btn1_0_cb</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, activity_clearaccumvol.o(i.btn1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = btn1_0_cb &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearNowcumulant
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_clearaccumvol.o(i.gt_init_ClearAccumVol)
</UL>
<P><STRONG><a name="[66c]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_clearaccumvol.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ClearAccumVol
</UL>

<P><STRONG><a name="[c9]"></a>ChangeDrip</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, activity_dripmode.o(i.ChangeDrip))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeDrip &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmode.o(i.gt_init_DripMode)
</UL>
<P><STRONG><a name="[ca]"></a>ChangeQuantity</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, activity_dripmode.o(i.ChangeQuantity))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeQuantity &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmode.o(i.gt_init_DripMode)
</UL>
<P><STRONG><a name="[c6]"></a>EventUpdata</STRONG> (Thumb, 334 bytes, Stack size 104 bytes, activity_dripmode.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = EventUpdata &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDripModeTheDisplay
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmode.o(i.gt_init_DripMode)
</UL>
<P><STRONG><a name="[cd]"></a>Timer_300mSecond</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, activity_dripmode.o(i.Timer_300mSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = Timer_300mSecond &rArr; btn1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmode.o(i.gt_init_DripMode)
</UL>
<P><STRONG><a name="[cb]"></a>btn1_0_cb</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, activity_dripmode.o(i.btn1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = btn1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDripModeMessageToFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmode.o(i.gt_init_DripMode)
</UL>
<P><STRONG><a name="[cc]"></a>btn2_0_cb</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, activity_dripmode.o(i.btn2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = btn2_0_cb &rArr; gt_disp_stack_load_scr &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmode.o(i.gt_init_DripMode)
</UL>
<P><STRONG><a name="[675]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_dripmode.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripMode
</UL>

<P><STRONG><a name="[c8]"></a>img1_0_cb</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, activity_dripmode.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmode.o(i.gt_init_DripMode)
</UL>
<P><STRONG><a name="[c7]"></a>one_sec_timer</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, activity_dripmode.o(i.one_sec_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = one_sec_timer &rArr; TMC2226_MotorStop &rArr; motor_init &rArr; delay_ms &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoOperFunctionTimeCountDown
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmode.o(i.gt_init_DripMode)
</UL>
<P><STRONG><a name="[e8]"></a>BolusModeQuantity</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, activity_generalbolus.o(i.BolusModeQuantity))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = BolusModeQuantity &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_generalbolus.o(i.gt_init_GeneralBolus)
</UL>
<P><STRONG><a name="[e7]"></a>BolusModeSpeed</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, activity_generalbolus.o(i.BolusModeSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = BolusModeSpeed &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_generalbolus.o(i.gt_init_GeneralBolus)
</UL>
<P><STRONG><a name="[e4]"></a>EventUpdata</STRONG> (Thumb, 344 bytes, Stack size 112 bytes, activity_generalbolus.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = EventUpdata &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSpeedModeTheDisplay
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_generalbolus.o(i.gt_init_GeneralBolus)
</UL>
<P><STRONG><a name="[e3]"></a>KEY_EVENT</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, activity_generalbolus.o(i.KEY_EVENT))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = KEY_EVENT &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_judge_obj_exists
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_generalbolus.o(i.gt_init_GeneralBolus)
</UL>
<P><STRONG><a name="[e5]"></a>Timer_OneSecond</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, activity_generalbolus.o(i.Timer_OneSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = Timer_OneSecond &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_generalbolus.o(i.gt_init_GeneralBolus)
</UL>
<P><STRONG><a name="[e9]"></a>btn1_0_cb</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, activity_generalbolus.o(i.btn1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = btn1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_judge_obj_exists
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_generalbolus.o(i.gt_init_GeneralBolus)
</UL>
<P><STRONG><a name="[67e]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_generalbolus.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolus
</UL>

<P><STRONG><a name="[e6]"></a>img1_0_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_generalbolus.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_generalbolus.o(i.gt_init_GeneralBolus)
</UL>
<P><STRONG><a name="[ea]"></a>MotorRun</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, activity_generalbolusrun.o(i.MotorRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MotorRun &rArr; CalSpeed &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgressRunSpeed
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSpeed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_generalbolusrun.o(i.gt_init_GeneralBolusRun)
</UL>
<P><STRONG><a name="[ef]"></a>Timer_300mSecond</STRONG> (Thumb, 674 bytes, Stack size 120 bytes, activity_generalbolusrun.o(i.Timer_300mSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = Timer_300mSecond &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnLock
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalCumulant
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_generalbolusrun.o(i.gt_init_GeneralBolusRun)
</UL>
<P><STRONG><a name="[eb]"></a>Timer_OneSecond</STRONG> (Thumb, 326 bytes, Stack size 176 bytes, activity_generalbolusrun.o(i.Timer_OneSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Timer_OneSecond &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSurplusTime
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_generalbolusrun.o(i.gt_init_GeneralBolusRun)
</UL>
<P><STRONG><a name="[ed]"></a>btn1_0_cb</STRONG> (Thumb, 170 bytes, Stack size 48 bytes, activity_generalbolusrun.o(i.btn1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = btn1_0_cb &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_generalbolusrun.o(i.gt_init_GeneralBolusRun)
</UL>
<P><STRONG><a name="[ee]"></a>btn2_0_cb</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, activity_generalbolusrun.o(i.btn2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = btn2_0_cb &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_generalbolusrun.o(i.gt_init_GeneralBolusRun)
</UL>
<P><STRONG><a name="[3e0]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_generalbolusrun.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_GeneralBolusRun
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[63]"></a>run_progress_func</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, activity_generalbolusrun.o(i.run_progress_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = run_progress_func &rArr; gt_obj_set_pos &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_generalbolusrun.o(i.MotorRun)
</UL>
<P><STRONG><a name="[ec]"></a>updata_EVENT</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, activity_generalbolusrun.o(i.updata_EVENT))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = updata_EVENT &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_generalbolusrun.o(i.gt_init_GeneralBolusRun)
</UL>
<P><STRONG><a name="[f1]"></a>Down</STRONG> (Thumb, 268 bytes, Stack size 64 bytes, activity_historyview.o(i.Down))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Down &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_history_info
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_historyview.o(i.gt_init_HistoryView)
</UL>
<P><STRONG><a name="[f2]"></a>Up</STRONG> (Thumb, 264 bytes, Stack size 64 bytes, activity_historyview.o(i.Up))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Up &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_history_info
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_historyview.o(i.gt_init_HistoryView)
</UL>
<P><STRONG><a name="[67f]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_historyview.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
</UL>

<P><STRONG><a name="[f0]"></a>img1_0_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_historyview.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_historyview.o(i.gt_init_HistoryView)
</UL>
<P><STRONG><a name="[363]"></a>showpage</STRONG> (Thumb, 260 bytes, Stack size 8 bytes, activity_historyview.o(i.showpage))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = showpage &rArr; gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_HistoryView
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
</UL>

<P><STRONG><a name="[214]"></a>Back</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, activity_keyboard_float.o(i.Back))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = Back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleargHintAlarm
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_float.o(i.gt_init_screen_keyBoard_float)
</UL>
<P><STRONG><a name="[218]"></a>Confirm</STRONG> (Thumb, 166 bytes, Stack size 96 bytes, activity_keyboard_float.o(i.Confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = Confirm &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_prev_scr
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_get_value
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgmentUPAndLowerLimit
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_float.o(i.gt_init_screen_keyBoard_float)
</UL>
<P><STRONG><a name="[217]"></a>DeleteAll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, activity_keyboard_float.o(i.DeleteAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = DeleteAll &rArr; gt_input_set_value &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_float.o(i.gt_init_screen_keyBoard_float)
</UL>
<P><STRONG><a name="[216]"></a>DeleteOne</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, activity_keyboard_float.o(i.DeleteOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DeleteOne &rArr; gt_input_del_value &rArr; gt_txt_cut &rArr; gt_txt_string_del &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_del_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_float.o(i.gt_init_screen_keyBoard_float)
</UL>
<P><STRONG><a name="[215]"></a>InputValue</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, activity_keyboard_float.o(i.InputValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = InputValue &rArr; gt_input_append_value &rArr; gt_txt_ins &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_append_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_float.o(i.gt_init_screen_keyBoard_float)
</UL>
<P><STRONG><a name="[6c0]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_keyboard_float.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_float
</UL>

<P><STRONG><a name="[17a]"></a>Back</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, activity_keyboard_int.o(i.Back))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = Back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_int.o(i.gt_init_Screen_KeyBoard_Int)
</UL>
<P><STRONG><a name="[17e]"></a>Confirm</STRONG> (Thumb, 212 bytes, Stack size 120 bytes, activity_keyboard_int.o(i.Confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = Confirm &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_get_default
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_prev_scr
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_get_value
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_int.o(i.gt_init_Screen_KeyBoard_Int)
</UL>
<P><STRONG><a name="[17d]"></a>DeleteAll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, activity_keyboard_int.o(i.DeleteAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = DeleteAll &rArr; gt_input_set_value &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_int.o(i.gt_init_Screen_KeyBoard_Int)
</UL>
<P><STRONG><a name="[17c]"></a>DeleteOne</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, activity_keyboard_int.o(i.DeleteOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DeleteOne &rArr; gt_input_del_value &rArr; gt_txt_cut &rArr; gt_txt_string_del &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_del_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_int.o(i.gt_init_Screen_KeyBoard_Int)
</UL>
<P><STRONG><a name="[17b]"></a>InputValue</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, activity_keyboard_int.o(i.InputValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = InputValue &rArr; gt_input_append_value &rArr; gt_txt_ins &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_append_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_int.o(i.gt_init_Screen_KeyBoard_Int)
</UL>
<P><STRONG><a name="[696]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_keyboard_int.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Int
</UL>

<P><STRONG><a name="[20f]"></a>Back</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, activity_keyboard_password.o(i.Back))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = Back &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_password.o(i.gt_init_screen_keyBoard_PassWord)
</UL>
<P><STRONG><a name="[213]"></a>Confirm</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, activity_keyboard_password.o(i.Confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = Confirm &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_value
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_get_value
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_password.o(i.gt_init_screen_keyBoard_PassWord)
</UL>
<P><STRONG><a name="[212]"></a>DeleteAll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, activity_keyboard_password.o(i.DeleteAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = DeleteAll &rArr; gt_input_set_value &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_set_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_password.o(i.gt_init_screen_keyBoard_PassWord)
</UL>
<P><STRONG><a name="[211]"></a>DeleteOne</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, activity_keyboard_password.o(i.DeleteOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DeleteOne &rArr; gt_input_del_value &rArr; gt_txt_cut &rArr; gt_txt_string_del &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_del_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_password.o(i.gt_init_screen_keyBoard_PassWord)
</UL>
<P><STRONG><a name="[210]"></a>InputValue</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, activity_keyboard_password.o(i.InputValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = InputValue &rArr; gt_input_append_value &rArr; gt_txt_ins &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_append_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_password.o(i.gt_init_screen_keyBoard_PassWord)
</UL>
<P><STRONG><a name="[6bf]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_keyboard_password.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_screen_keyBoard_PassWord
</UL>

<P><STRONG><a name="[181]"></a>Back</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, activity_keyboard_soft.o(i.Back))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = Back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_soft.o(i.gt_init_Screen_KeyBoard_Soft)
</UL>
<P><STRONG><a name="[180]"></a>Confirm</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, activity_keyboard_soft.o(i.Confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = Confirm &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_judge_obj_exists
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_get_value
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemSettingMessageToFlash
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_soft.o(i.gt_init_Screen_KeyBoard_Soft)
</UL>
<P><STRONG><a name="[182]"></a>DeleteOne</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, activity_keyboard_soft.o(i.DeleteOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DeleteOne &rArr; gt_input_del_value &rArr; gt_txt_cut &rArr; gt_txt_string_del &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_del_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_soft.o(i.gt_init_Screen_KeyBoard_Soft)
</UL>
<P><STRONG><a name="[17f]"></a>Input</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, activity_keyboard_soft.o(i.Input))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Input &rArr; gt_input_append_value &rArr; gt_txt_ins &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_append_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_soft.o(i.gt_init_Screen_KeyBoard_Soft)
</UL>
<P><STRONG><a name="[69e]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_keyboard_soft.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Screen_KeyBoard_Soft
</UL>

<P><STRONG><a name="[1e0]"></a>Confirm</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, activity_keyboard_time.o(i.Confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = Confirm &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_get_prev_scr
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
</UL>
<P><STRONG><a name="[1de]"></a>EventUpdata</STRONG> (Thumb, 98 bytes, Stack size 72 bytes, activity_keyboard_time.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = EventUpdata &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
</UL>
<P><STRONG><a name="[1df]"></a>back</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, activity_keyboard_time.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headvisiable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
</UL>
<P><STRONG><a name="[6b8]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_keyboard_time.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeKeyBoard
</UL>

<P><STRONG><a name="[1e9]"></a>rect10_0_cb</STRONG> (Thumb, 42 bytes, Stack size 56 bytes, activity_keyboard_time.o(i.rect10_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = rect10_0_cb &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
</UL>
<P><STRONG><a name="[1e1]"></a>rect2_0_cb</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, activity_keyboard_time.o(i.rect2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = rect2_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
</UL>
<P><STRONG><a name="[1e2]"></a>rect3_0_cb</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, activity_keyboard_time.o(i.rect3_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = rect3_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
</UL>
<P><STRONG><a name="[1e3]"></a>rect4_0_cb</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, activity_keyboard_time.o(i.rect4_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = rect4_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
</UL>
<P><STRONG><a name="[1e4]"></a>rect5_0_cb</STRONG> (Thumb, 72 bytes, Stack size 64 bytes, activity_keyboard_time.o(i.rect5_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = rect5_0_cb &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_judge_obj_exists
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
</UL>
<P><STRONG><a name="[1e5]"></a>rect6_0_cb</STRONG> (Thumb, 70 bytes, Stack size 64 bytes, activity_keyboard_time.o(i.rect6_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = rect6_0_cb &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_judge_obj_exists
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
</UL>
<P><STRONG><a name="[1e6]"></a>rect7_0_cb</STRONG> (Thumb, 44 bytes, Stack size 56 bytes, activity_keyboard_time.o(i.rect7_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = rect7_0_cb &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
</UL>
<P><STRONG><a name="[1e7]"></a>rect8_0_cb</STRONG> (Thumb, 42 bytes, Stack size 56 bytes, activity_keyboard_time.o(i.rect8_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = rect8_0_cb &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
</UL>
<P><STRONG><a name="[1e8]"></a>rect9_0_cb</STRONG> (Thumb, 44 bytes, Stack size 56 bytes, activity_keyboard_time.o(i.rect9_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = rect9_0_cb &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_keyboard_time.o(i.gt_init_TimeKeyBoard)
</UL>
<P><STRONG><a name="[131]"></a>EnterBWMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_modeselect.o(i.EnterBWMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = EnterBWMode &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_modeselect.o(i.gt_init_ModeSelect)
</UL>
<P><STRONG><a name="[133]"></a>EnterDripMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_modeselect.o(i.EnterDripMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = EnterDripMode &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_modeselect.o(i.gt_init_ModeSelect)
</UL>
<P><STRONG><a name="[134]"></a>EnterDrugLibrary</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_modeselect.o(i.EnterDrugLibrary))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = EnterDrugLibrary &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_modeselect.o(i.gt_init_ModeSelect)
</UL>
<P><STRONG><a name="[12f]"></a>EnterSpeedMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_modeselect.o(i.EnterSpeedMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = EnterSpeedMode &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_modeselect.o(i.gt_init_ModeSelect)
</UL>
<P><STRONG><a name="[132]"></a>EnterSquenceMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_modeselect.o(i.EnterSquenceMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = EnterSquenceMode &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_modeselect.o(i.gt_init_ModeSelect)
</UL>
<P><STRONG><a name="[130]"></a>EnterTimeMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_modeselect.o(i.EnterTimeMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = EnterTimeMode &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_modeselect.o(i.gt_init_ModeSelect)
</UL>
<P><STRONG><a name="[12e]"></a>KEY_EVENT</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, activity_modeselect.o(i.KEY_EVENT))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = KEY_EVENT &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_turn
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepStop
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepStart
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_modeselect.o(i.gt_init_ModeSelect)
</UL>
<P><STRONG><a name="[135]"></a>back</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, activity_modeselect.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = back &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_modeselect.o(i.gt_init_ModeSelect)
</UL>
<P><STRONG><a name="[68a]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_modeselect.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ModeSelect
</UL>

<P><STRONG><a name="[13a]"></a>Confirm</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, activity_nightsetting.o(i.Confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = Confirm &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemSettingMessageToFlash
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_nightsetting.o(i.gt_init_NightSetting)
</UL>
<P><STRONG><a name="[139]"></a>End_Time</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, activity_nightsetting.o(i.End_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = End_Time &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_nightsetting.o(i.gt_init_NightSetting)
</UL>
<P><STRONG><a name="[138]"></a>Start_Time</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, activity_nightsetting.o(i.Start_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = Start_Time &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_nightsetting.o(i.gt_init_NightSetting)
</UL>
<P><STRONG><a name="[136]"></a>back</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_nightsetting.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = back &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_nightsetting.o(i.gt_init_NightSetting)
</UL>
<P><STRONG><a name="[68b]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_nightsetting.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_NightSetting
</UL>

<P><STRONG><a name="[137]"></a>openflag</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, activity_nightsetting.o(i.openflag))
<BR>[Address Reference Count : 1]<UL><LI> activity_nightsetting.o(i.gt_init_NightSetting)
</UL>
<P><STRONG><a name="[13b]"></a>Back</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, activity_paramsetting1.o(i.Back))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = Back &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting1.o(i.gt_init_ParamSetting1)
</UL>
<P><STRONG><a name="[13d]"></a>BlockPressure</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_paramsetting1.o(i.BlockPressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = BlockPressure &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting1.o(i.gt_init_ParamSetting1)
</UL>
<P><STRONG><a name="[13c]"></a>BrandChange</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_paramsetting1.o(i.BrandChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = BrandChange &rArr; gt_disp_stack_load_scr &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting1.o(i.gt_init_ParamSetting1)
</UL>
<P><STRONG><a name="[140]"></a>DownPage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_paramsetting1.o(i.DownPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = DownPage &rArr; gt_disp_stack_load_scr &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting1.o(i.gt_init_ParamSetting1)
</UL>
<P><STRONG><a name="[13e]"></a>PressureUnitChange</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_paramsetting1.o(i.PressureUnitChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = PressureUnitChange &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting1.o(i.gt_init_ParamSetting1)
</UL>
<P><STRONG><a name="[13f]"></a>UpPage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_paramsetting1.o(i.UpPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = UpPage &rArr; gt_disp_stack_load_scr &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting1.o(i.gt_init_ParamSetting1)
</UL>
<P><STRONG><a name="[68c]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_paramsetting1.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting1
</UL>

<P><STRONG><a name="[145]"></a>AccumBubble</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, activity_paramsetting2.o(i.AccumBubble))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = AccumBubble &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting2.o(i.gt_init_ParamSetting2)
</UL>
<P><STRONG><a name="[144]"></a>BubbleSize</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_paramsetting2.o(i.BubbleSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = BubbleSize &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting2.o(i.gt_init_ParamSetting2)
</UL>
<P><STRONG><a name="[143]"></a>ChangKVO</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, activity_paramsetting2.o(i.ChangKVO))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = ChangKVO &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting2.o(i.gt_init_ParamSetting2)
</UL>
<P><STRONG><a name="[147]"></a>DownPage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_paramsetting2.o(i.DownPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = DownPage &rArr; gt_disp_stack_load_scr &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting2.o(i.gt_init_ParamSetting2)
</UL>
<P><STRONG><a name="[141]"></a>EventUpdata</STRONG> (Thumb, 106 bytes, Stack size 72 bytes, activity_paramsetting2.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = EventUpdata &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting2.o(i.gt_init_ParamSetting2)
</UL>
<P><STRONG><a name="[146]"></a>UpPage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_paramsetting2.o(i.UpPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = UpPage &rArr; gt_disp_stack_load_scr &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting2.o(i.gt_init_ParamSetting2)
</UL>
<P><STRONG><a name="[142]"></a>back</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, activity_paramsetting2.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = back &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting2.o(i.gt_init_ParamSetting2)
</UL>
<P><STRONG><a name="[68d]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_paramsetting2.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting2
</UL>

<P><STRONG><a name="[14c]"></a>AutoLockTime</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, activity_paramsetting3.o(i.AutoLockTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = AutoLockTime &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting3.o(i.gt_init_ParamSetting3)
</UL>
<P><STRONG><a name="[14f]"></a>AutoLockTime_state</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, activity_paramsetting3.o(i.AutoLockTime_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = AutoLockTime_state &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting3.o(i.gt_init_ParamSetting3)
</UL>
<P><STRONG><a name="[14b]"></a>DownPage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_paramsetting3.o(i.DownPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = DownPage &rArr; gt_disp_stack_load_scr &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting3.o(i.gt_init_ParamSetting3)
</UL>
<P><STRONG><a name="[148]"></a>EventUpdata</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, activity_paramsetting3.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = EventUpdata &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting3.o(i.gt_init_ParamSetting3)
</UL>
<P><STRONG><a name="[14e]"></a>NearFinishTime</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, activity_paramsetting3.o(i.NearFinishTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = NearFinishTime &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting3.o(i.gt_init_ParamSetting3)
</UL>
<P><STRONG><a name="[151]"></a>NearFinishTime_state</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, activity_paramsetting3.o(i.NearFinishTime_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = NearFinishTime_state &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting3.o(i.gt_init_ParamSetting3)
</UL>
<P><STRONG><a name="[14d]"></a>NoOperateTime</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, activity_paramsetting3.o(i.NoOperateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = NoOperateTime &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting3.o(i.gt_init_ParamSetting3)
</UL>
<P><STRONG><a name="[150]"></a>NoOperateTime_state</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, activity_paramsetting3.o(i.NoOperateTime_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = NoOperateTime_state &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting3.o(i.gt_init_ParamSetting3)
</UL>
<P><STRONG><a name="[14a]"></a>UpPage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_paramsetting3.o(i.UpPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = UpPage &rArr; gt_disp_stack_load_scr &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting3.o(i.gt_init_ParamSetting3)
</UL>
<P><STRONG><a name="[149]"></a>back</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, activity_paramsetting3.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = back &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting3.o(i.gt_init_ParamSetting3)
</UL>
<P><STRONG><a name="[68e]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_paramsetting3.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting3
</UL>

<P><STRONG><a name="[344]"></a>CreatePage1</STRONG> (Thumb, 624 bytes, Stack size 24 bytes, activity_pressurenumsel.o(i.CreatePage1))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = CreatePage1 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_opa
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_inside
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_bubble_notify
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_radius
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_fill
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_color_border
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_border
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_set_bg_color
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_rect_create
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureNumSel
</UL>

<P><STRONG><a name="[5e]"></a>PressureLevelChange</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, activity_pressurenumsel.o(i.PressureLevelChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = PressureLevelChange &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurenumsel.o(i.CreatePage1)
</UL>
<P><STRONG><a name="[167]"></a>back</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_pressurenumsel.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurenumsel.o(i.gt_init_PressureNumSel)
</UL>
<P><STRONG><a name="[34a]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_pressurenumsel.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureNumSel
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
</UL>

<P><STRONG><a name="[16a]"></a>Select_bar</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, activity_pressureunit.o(i.Select_bar))
<BR>[Address Reference Count : 1]<UL><LI> activity_pressureunit.o(i.gt_init_PressureUnit)
</UL>
<P><STRONG><a name="[16c]"></a>Select_kpa</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, activity_pressureunit.o(i.Select_kpa))
<BR>[Address Reference Count : 1]<UL><LI> activity_pressureunit.o(i.gt_init_PressureUnit)
</UL>
<P><STRONG><a name="[16d]"></a>Select_mmhg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, activity_pressureunit.o(i.Select_mmhg))
<BR>[Address Reference Count : 1]<UL><LI> activity_pressureunit.o(i.gt_init_PressureUnit)
</UL>
<P><STRONG><a name="[16b]"></a>Select_psi</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, activity_pressureunit.o(i.Select_psi))
<BR>[Address Reference Count : 1]<UL><LI> activity_pressureunit.o(i.gt_init_PressureUnit)
</UL>
<P><STRONG><a name="[169]"></a>btn1_0_cb</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, activity_pressureunit.o(i.btn1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = btn1_0_cb &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPressUintString
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressureunit.o(i.gt_init_PressureUnit)
</UL>
<P><STRONG><a name="[692]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_pressureunit.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureUnit
</UL>

<P><STRONG><a name="[168]"></a>img1_0_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_pressureunit.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressureunit.o(i.gt_init_PressureUnit)
</UL>
<P><STRONG><a name="[171]"></a>ChangeRate</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, activity_purge.o(i.ChangeRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = ChangeRate &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_purge.o(i.gt_init_Purge)
</UL>
<P><STRONG><a name="[170]"></a>EnterPurgeRun</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_purge.o(i.EnterPurgeRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = EnterPurgeRun &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_purge.o(i.gt_init_Purge)
</UL>
<P><STRONG><a name="[16e]"></a>EventUpdata</STRONG> (Thumb, 46 bytes, Stack size 56 bytes, activity_purge.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = EventUpdata &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_purge.o(i.gt_init_Purge)
</UL>
<P><STRONG><a name="[16f]"></a>back</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, activity_purge.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_purge.o(i.gt_init_Purge)
</UL>
<P><STRONG><a name="[693]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_purge.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Purge
</UL>

<P><STRONG><a name="[173]"></a>MotorRun</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, activity_purgerun.o(i.MotorRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MotorRun &rArr; CalSpeed &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgressRunSpeed
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSpeed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_purgerun.o(i.gt_init_PurgeRun)
</UL>
<P><STRONG><a name="[174]"></a>Stop</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, activity_purgerun.o(i.Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = Stop &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_purgerun.o(i.gt_init_PurgeRun)
</UL>
<P><STRONG><a name="[172]"></a>Timer_OneSecond</STRONG> (Thumb, 298 bytes, Stack size 96 bytes, activity_purgerun.o(i.Timer_OneSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Timer_OneSecond &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedInfusionTubeFallOff_P
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_purgerun.o(i.gt_init_PurgeRun)
</UL>
<P><STRONG><a name="[3e2]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_purgerun.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeRun
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[64]"></a>run_progress_func</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, activity_purgerun.o(i.run_progress_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = run_progress_func &rArr; gt_obj_set_pos &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_purgerun.o(i.MotorRun)
</UL>
<P><STRONG><a name="[177]"></a>Confirm</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, activity_purgesizesetting.o(i.Confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = Confirm &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_purgesizesetting.o(i.gt_init_PurgeSizeSetting)
</UL>
<P><STRONG><a name="[175]"></a>back</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_purgesizesetting.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_purgesizesetting.o(i.gt_init_PurgeSizeSetting)
</UL>
<P><STRONG><a name="[694]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_purgesizesetting.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PurgeSizeSetting
</UL>

<P><STRONG><a name="[176]"></a>purgesizechange</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, activity_purgesizesetting.o(i.purgesizechange))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = purgesizechange &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_purgesizesetting.o(i.gt_init_PurgeSizeSetting)
</UL>
<P><STRONG><a name="[192]"></a>BolusModeQuantity</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, activity_seqbolus.o(i.BolusModeQuantity))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = BolusModeQuantity &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqbolus.o(i.gt_init_SeqBolus)
</UL>
<P><STRONG><a name="[191]"></a>BolusModeSpeed</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, activity_seqbolus.o(i.BolusModeSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = BolusModeSpeed &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqbolus.o(i.gt_init_SeqBolus)
</UL>
<P><STRONG><a name="[18f]"></a>EventUpdata</STRONG> (Thumb, 344 bytes, Stack size 112 bytes, activity_seqbolus.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = EventUpdata &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSpeedModeTheDisplay
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqbolus.o(i.gt_init_SeqBolus)
</UL>
<P><STRONG><a name="[18e]"></a>KEY_EVENT</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, activity_seqbolus.o(i.KEY_EVENT))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = KEY_EVENT &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqbolus.o(i.gt_init_SeqBolus)
</UL>
<P><STRONG><a name="[6a2]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_seqbolus.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolus
</UL>

<P><STRONG><a name="[190]"></a>img1_0_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_seqbolus.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqbolus.o(i.gt_init_SeqBolus)
</UL>
<P><STRONG><a name="[193]"></a>run</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, activity_seqbolus.o(i.run))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = run &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqbolus.o(i.gt_init_SeqBolus)
</UL>
<P><STRONG><a name="[194]"></a>MotorRun</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, activity_seqbolusrun.o(i.MotorRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MotorRun &rArr; CalSpeed &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgressRunSpeed
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSpeed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqbolusrun.o(i.gt_init_SeqBolusRun)
</UL>
<P><STRONG><a name="[199]"></a>Timer_300mSecond</STRONG> (Thumb, 600 bytes, Stack size 120 bytes, activity_seqbolusrun.o(i.Timer_300mSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = Timer_300mSecond &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_invalid_area
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnLock
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalCumulant
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqbolusrun.o(i.gt_init_SeqBolusRun)
</UL>
<P><STRONG><a name="[195]"></a>Timer_OneSecond</STRONG> (Thumb, 354 bytes, Stack size 176 bytes, activity_seqbolusrun.o(i.Timer_OneSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Timer_OneSecond &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNerDoneFlag
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedinfusionNeaeTimeAlarm
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSurplusTime
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqbolusrun.o(i.gt_init_SeqBolusRun)
</UL>
<P><STRONG><a name="[197]"></a>btn1_0_cb</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, activity_seqbolusrun.o(i.btn1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = btn1_0_cb &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqbolusrun.o(i.gt_init_SeqBolusRun)
</UL>
<P><STRONG><a name="[198]"></a>btn2_0_cb</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, activity_seqbolusrun.o(i.btn2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = btn2_0_cb &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqbolusrun.o(i.gt_init_SeqBolusRun)
</UL>
<P><STRONG><a name="[3e5]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_seqbolusrun.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqBolusRun
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[65]"></a>run_progress_func</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, activity_seqbolusrun.o(i.run_progress_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = run_progress_func &rArr; gt_obj_set_pos &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqbolusrun.o(i.MotorRun)
</UL>
<P><STRONG><a name="[196]"></a>updata_EVENT</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, activity_seqbolusrun.o(i.updata_EVENT))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = updata_EVENT &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqbolusrun.o(i.gt_init_SeqBolusRun)
</UL>
<P><STRONG><a name="[19e]"></a>Add</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, activity_seqmode.o(i.Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Add &rArr; gt_input_number_increase &rArr; _update_label_value &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_increase
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_get_value
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmode.o(i.gt_init_SeqMode)
</UL>
<P><STRONG><a name="[60]"></a>ChangeQuantity</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, activity_seqmode.o(i.ChangeQuantity))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeQuantity &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 2]<UL><LI> activity_seqmode.o(i.CreatePage1)
<LI> activity_seqmode.o(i.CreatePage2)
</UL>
<P><STRONG><a name="[355]"></a>CreatePage1</STRONG> (Thumb, 2272 bytes, Stack size 40 bytes, activity_seqmode.o(i.CreatePage1))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = CreatePage1 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
</UL>

<P><STRONG><a name="[35b]"></a>CreatePage2</STRONG> (Thumb, 1648 bytes, Stack size 40 bytes, activity_seqmode.o(i.CreatePage2))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = CreatePage2 &rArr; gt_label_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_size
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_set_src
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_img_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_fl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_en
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_family_cn
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_color
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_font_align
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_create
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
</UL>

<P><STRONG><a name="[19f]"></a>Del</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, activity_seqmode.o(i.Del))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Del &rArr; gt_input_number_decrease &rArr; _update_label_value &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_get_value
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_decrease
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmode.o(i.gt_init_SeqMode)
</UL>
<P><STRONG><a name="[19a]"></a>EventUpdata</STRONG> (Thumb, 1958 bytes, Stack size 168 bytes, activity_seqmode.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = EventUpdata &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_get_value
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSpeedModeTheDisplay
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;total_time
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmode.o(i.gt_init_SeqMode)
</UL>
<P><STRONG><a name="[3bd]"></a>PageShow</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, activity_seqmode.o(i.PageShow))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = PageShow &rArr; gt_obj_child_set_prop &rArr;  gt_obj_child_set_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_child_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Up
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Down
</UL>

<P><STRONG><a name="[61]"></a>Page_Down</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, activity_seqmode.o(i.Page_Down))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = Page_Down &rArr; showpage &rArr; gt_obj_set_pos &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageShow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmode.o(i.CreatePage1)
</UL>
<P><STRONG><a name="[62]"></a>Page_Up</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, activity_seqmode.o(i.Page_Up))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = Page_Up &rArr; showpage &rArr; gt_obj_set_pos &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageShow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmode.o(i.CreatePage2)
</UL>
<P><STRONG><a name="[19c]"></a>Run</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, activity_seqmode.o(i.Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = Run &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_get_value
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSeqModeMessageToFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmode.o(i.gt_init_SeqMode)
</UL>
<P><STRONG><a name="[5f]"></a>SpeedChange</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, activity_seqmode.o(i.SpeedChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = SpeedChange &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 2]<UL><LI> activity_seqmode.o(i.CreatePage1)
<LI> activity_seqmode.o(i.CreatePage2)
</UL>
<P><STRONG><a name="[1a0]"></a>Timer_300mSecond</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, activity_seqmode.o(i.Timer_300mSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = Timer_300mSecond &rArr; Run &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmode.o(i.gt_init_SeqMode)
</UL>
<P><STRONG><a name="[356]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_seqmode.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage2
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatePage1
</UL>

<P><STRONG><a name="[19b]"></a>img1_0_cb</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, activity_seqmode.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmode.o(i.gt_init_SeqMode)
</UL>
<P><STRONG><a name="[19d]"></a>purge</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, activity_seqmode.o(i.purge))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = purge &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmode.o(i.gt_init_SeqMode)
</UL>
<P><STRONG><a name="[2f3]"></a>showpage</STRONG> (Thumb, 930 bytes, Stack size 40 bytes, activity_seqmode.o(i.showpage))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = showpage &rArr; gt_obj_set_pos &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;total_time
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqMode
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Up
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Page_Down
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add
</UL>

<P><STRONG><a name="[371]"></a>total_time</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, activity_seqmode.o(i.total_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = total_time
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventUpdata
</UL>

<P><STRONG><a name="[1a1]"></a>MotorRun</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, activity_seqmoderun.o(i.MotorRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MotorRun &rArr; CalSpeed &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgressRunSpeed
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSpeed
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutSpeed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmoderun.o(i.gt_init_SeqModeRun)
</UL>
<P><STRONG><a name="[1a7]"></a>Timer_300mSecond</STRONG> (Thumb, 700 bytes, Stack size 88 bytes, activity_seqmoderun.o(i.Timer_300mSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = Timer_300mSecond &rArr; btn2_0_cb &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnLock
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalCumulant
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutSpeed
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn2_0_cb
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmoderun.o(i.gt_init_SeqModeRun)
</UL>
<P><STRONG><a name="[1a2]"></a>Timer_OneSecond</STRONG> (Thumb, 828 bytes, Stack size 192 bytes, activity_seqmoderun.o(i.Timer_OneSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Timer_OneSecond &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnLock
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNerDoneFlag
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockNewAFlag
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockTimeCountDown
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedinfusionNeaeTimeAlarm
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedInfusionUpBlock
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSurplusTime
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutSpeed
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmoderun.o(i.gt_init_SeqModeRun)
</UL>
<P><STRONG><a name="[1a3]"></a>bolus</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, activity_seqmoderun.o(i.bolus))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = bolus &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmLeve12
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmoderun.o(i.gt_init_SeqModeRun)
</UL>
<P><STRONG><a name="[1a4]"></a>btn2_0_cb</STRONG> (Thumb, 338 bytes, Stack size 32 bytes, activity_seqmoderun.o(i.btn2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = btn2_0_cb &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSeqModeMessageToFlash
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmoderun.o(i.gt_init_SeqModeRun)
</UL>
<P><STRONG><a name="[3e8]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_seqmoderun.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SeqModeRun
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[66]"></a>run_progress_func</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, activity_seqmoderun.o(i.run_progress_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = run_progress_func &rArr; gt_obj_set_pos &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmoderun.o(i.MotorRun)
</UL>
<P><STRONG><a name="[1a5]"></a>svg1_0_cb</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, activity_seqmoderun.o(i.svg1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = svg1_0_cb &rArr; gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmoderun.o(i.gt_init_SeqModeRun)
</UL>
<P><STRONG><a name="[1a6]"></a>svg2_0_cb</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, activity_seqmoderun.o(i.svg2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = svg2_0_cb &rArr; gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnLock
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_seqmoderun.o(i.gt_init_SeqModeRun)
</UL>
<P><STRONG><a name="[1b5]"></a>ChangeQuantity</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, activity_speedmode.o(i.ChangeQuantity))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeQuantity &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedmode.o(i.gt_init_SpeedMode)
</UL>
<P><STRONG><a name="[1b1]"></a>EventUpdata</STRONG> (Thumb, 376 bytes, Stack size 112 bytes, activity_speedmode.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = EventUpdata &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSpeedModeTheDisplay
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedmode.o(i.gt_init_SpeedMode)
</UL>
<P><STRONG><a name="[1b4]"></a>SpeedChange</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, activity_speedmode.o(i.SpeedChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = SpeedChange &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedmode.o(i.gt_init_SpeedMode)
</UL>
<P><STRONG><a name="[1b8]"></a>Timer_300mSecond</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, activity_speedmode.o(i.Timer_300mSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = Timer_300mSecond &rArr; btn1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedmode.o(i.gt_init_SpeedMode)
</UL>
<P><STRONG><a name="[1b6]"></a>btn1_0_cb</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, activity_speedmode.o(i.btn1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = btn1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpeedModeMessageToFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedmode.o(i.gt_init_SpeedMode)
</UL>
<P><STRONG><a name="[6af]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_speedmode.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedMode
</UL>

<P><STRONG><a name="[1b3]"></a>img1_0_cb</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, activity_speedmode.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedmode.o(i.gt_init_SpeedMode)
</UL>
<P><STRONG><a name="[1b2]"></a>one_sec_timer</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, activity_speedmode.o(i.one_sec_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = one_sec_timer &rArr; TMC2226_MotorStop &rArr; motor_init &rArr; delay_ms &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoOperFunctionTimeCountDown
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedmode.o(i.gt_init_SpeedMode)
</UL>
<P><STRONG><a name="[1b7]"></a>purge</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, activity_speedmode.o(i.purge))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = purge &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedmode.o(i.gt_init_SpeedMode)
</UL>
<P><STRONG><a name="[1c7]"></a>Confirm</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, activity_systemdatatimesetting.o(i.Confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = Confirm &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemSettingMessageToFlash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting)
</UL>
<P><STRONG><a name="[1c6]"></a>DataFormat</STRONG> (Thumb, 84 bytes, Stack size 64 bytes, activity_systemdatatimesetting.o(i.DataFormat))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = DataFormat &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting)
</UL>
<P><STRONG><a name="[1c5]"></a>DataSetting</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, activity_systemdatatimesetting.o(i.DataSetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = DataSetting &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting)
</UL>
<P><STRONG><a name="[1c1]"></a>EventUpdata</STRONG> (Thumb, 176 bytes, Stack size 72 bytes, activity_systemdatatimesetting.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = EventUpdata &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_set
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemSettingMessageToFlash
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting)
</UL>
<P><STRONG><a name="[1c4]"></a>TimeFormatSetting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, activity_systemdatatimesetting.o(i.TimeFormatSetting))
<BR>[Address Reference Count : 1]<UL><LI> activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting)
</UL>
<P><STRONG><a name="[1c3]"></a>TimeSetting</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, activity_systemdatatimesetting.o(i.TimeSetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = TimeSetting &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting)
</UL>
<P><STRONG><a name="[1c2]"></a>back</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, activity_systemdatatimesetting.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = back &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemSettingMessageToFlash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemdatatimesetting.o(i.gt_init_SystemDataTimeSetting)
</UL>
<P><STRONG><a name="[6b2]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_systemdatatimesetting.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemDataTimeSetting
</UL>

<P><STRONG><a name="[1cb]"></a>Select_Chinese</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, activity_systemlanguagesetting.o(i.Select_Chinese))
<BR>[Address Reference Count : 1]<UL><LI> activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting)
</UL>
<P><STRONG><a name="[1cd]"></a>Select_Chinese2</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, activity_systemlanguagesetting.o(i.Select_Chinese2))
<BR>[Address Reference Count : 1]<UL><LI> activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting)
</UL>
<P><STRONG><a name="[1cc]"></a>Select_English</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, activity_systemlanguagesetting.o(i.Select_English))
<BR>[Address Reference Count : 1]<UL><LI> activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting)
</UL>
<P><STRONG><a name="[1ce]"></a>Select_Portuguese</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, activity_systemlanguagesetting.o(i.Select_Portuguese))
<BR>[Address Reference Count : 1]<UL><LI> activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting)
</UL>
<P><STRONG><a name="[1ca]"></a>Select_Spanish</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, activity_systemlanguagesetting.o(i.Select_Spanish))
<BR>[Address Reference Count : 1]<UL><LI> activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting)
</UL>
<P><STRONG><a name="[1c9]"></a>btn1_0_cb</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, activity_systemlanguagesetting.o(i.btn1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = btn1_0_cb &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemSettingMessageToFlash
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting)
</UL>
<P><STRONG><a name="[6b3]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_systemlanguagesetting.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemLanguageSetting
</UL>

<P><STRONG><a name="[1c8]"></a>img1_0_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_systemlanguagesetting.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemlanguagesetting.o(i.gt_init_SystemLanguageSetting)
</UL>
<P><STRONG><a name="[1cf]"></a>EventUpdata</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, activity_systemsetting1.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = EventUpdata &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemSettingMessageToFlash
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemsetting1.o(i.gt_init_SystemSetting1)
</UL>
<P><STRONG><a name="[1d2]"></a>NextPage</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_systemsetting1.o(i.NextPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = NextPage &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemsetting1.o(i.gt_init_SystemSetting1)
</UL>
<P><STRONG><a name="[1d1]"></a>UpPage</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_systemsetting1.o(i.UpPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = UpPage &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemsetting1.o(i.gt_init_SystemSetting1)
</UL>
<P><STRONG><a name="[1d0]"></a>back</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, activity_systemsetting1.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = back &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemsetting1.o(i.gt_init_SystemSetting1)
</UL>
<P><STRONG><a name="[1d7]"></a>bedchange</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, activity_systemsetting1.o(i.bedchange))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = bedchange &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemsetting1.o(i.gt_init_SystemSetting1)
</UL>
<P><STRONG><a name="[1d3]"></a>btn1_0_cb</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, activity_systemsetting1.o(i.btn1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = btn1_0_cb &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_get_value
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_decrease
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588F_Send_Data
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemSettingMessageToFlash
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemsetting1.o(i.gt_init_SystemSetting1)
</UL>
<P><STRONG><a name="[1d4]"></a>btn2_0_cb</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, activity_systemsetting1.o(i.btn2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = btn2_0_cb &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_increase
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_get_value
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588F_Send_Data
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemSettingMessageToFlash
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemsetting1.o(i.gt_init_SystemSetting1)
</UL>
<P><STRONG><a name="[1d5]"></a>btn3_0_cb</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, activity_systemsetting1.o(i.btn3_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = btn3_0_cb &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_increase
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_get_value
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_period_value_get
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_channel_value_set
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemSettingMessageToFlash
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemsetting1.o(i.gt_init_SystemSetting1)
</UL>
<P><STRONG><a name="[1d6]"></a>btn4_0_cb</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, activity_systemsetting1.o(i.btn4_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = btn4_0_cb &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_get_value
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_input_number_decrease
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_period_value_get
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_channel_value_set
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemSettingMessageToFlash
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemsetting1.o(i.gt_init_SystemSetting1)
</UL>
<P><STRONG><a name="[6b6]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_systemsetting1.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting1
</UL>

<P><STRONG><a name="[1da]"></a>DownPage</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_systemsetting2.o(i.DownPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = DownPage &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemsetting2.o(i.gt_init_SystemSetting2)
</UL>
<P><STRONG><a name="[1d9]"></a>UpPage</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_systemsetting2.o(i.UpPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = UpPage &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemsetting2.o(i.gt_init_SystemSetting2)
</UL>
<P><STRONG><a name="[1db]"></a>ViewHistory</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_systemsetting2.o(i.ViewHistory))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ViewHistory &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemsetting2.o(i.gt_init_SystemSetting2)
</UL>
<P><STRONG><a name="[1dc]"></a>ViewVersion</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_systemsetting2.o(i.ViewVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ViewVersion &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemsetting2.o(i.gt_init_SystemSetting2)
</UL>
<P><STRONG><a name="[1d8]"></a>back</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, activity_systemsetting2.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = back &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemsetting2.o(i.gt_init_SystemSetting2)
</UL>
<P><STRONG><a name="[6b7]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_systemsetting2.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemSetting2
</UL>

<P><STRONG><a name="[1dd]"></a>nightmode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_systemsetting2.o(i.nightmode))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = nightmode &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemsetting2.o(i.gt_init_SystemSetting2)
</UL>
<P><STRONG><a name="[1ee]"></a>ChangeQuantity</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, activity_timemode.o(i.ChangeQuantity))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeQuantity &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_timemode.o(i.gt_init_TimeMode)
</UL>
<P><STRONG><a name="[1ed]"></a>ChangeTime</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, activity_timemode.o(i.ChangeTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeTime &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_timemode.o(i.gt_init_TimeMode)
</UL>
<P><STRONG><a name="[1ea]"></a>EventUpdata</STRONG> (Thumb, 310 bytes, Stack size 88 bytes, activity_timemode.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = EventUpdata &rArr; __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTimeModeTheDisplay
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_timemode.o(i.gt_init_TimeMode)
</UL>
<P><STRONG><a name="[1ef]"></a>Run</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, activity_timemode.o(i.Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = Run &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteTimeModeMessageToFlash
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_timemode.o(i.gt_init_TimeMode)
</UL>
<P><STRONG><a name="[1f1]"></a>Timer_300mSecond</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, activity_timemode.o(i.Timer_300mSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = Timer_300mSecond &rArr; Run &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at32_up_button_state
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_timemode.o(i.gt_init_TimeMode)
</UL>
<P><STRONG><a name="[6b9]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_timemode.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_TimeMode
</UL>

<P><STRONG><a name="[1ec]"></a>img1_0_cb</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, activity_timemode.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_timemode.o(i.gt_init_TimeMode)
</UL>
<P><STRONG><a name="[1eb]"></a>one_sec_timer</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, activity_timemode.o(i.one_sec_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = one_sec_timer &rArr; TMC2226_MotorStop &rArr; motor_init &rArr; delay_ms &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoOperFunctionTimeCountDown
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_timemode.o(i.gt_init_TimeMode)
</UL>
<P><STRONG><a name="[1f0]"></a>purge</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, activity_timemode.o(i.purge))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = purge &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_timemode.o(i.gt_init_TimeMode)
</UL>
<P><STRONG><a name="[6ba]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_version.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Version
</UL>

<P><STRONG><a name="[1f2]"></a>img1_0_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_version.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_version.o(i.gt_init_Version)
</UL>
<P><STRONG><a name="[a6]"></a>Back</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, activity_accuracycalibrate1.o(i.Back))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = Back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_accuracycalibrate1.o(i.gt_init_AccuracyCalibrate1)
</UL>
<P><STRONG><a name="[a7]"></a>Run</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_accuracycalibrate1.o(i.Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = Run &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_accuracycalibrate1.o(i.gt_init_AccuracyCalibrate1)
</UL>
<P><STRONG><a name="[665]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_accuracycalibrate1.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate1
</UL>

<P><STRONG><a name="[a8]"></a>Back</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, activity_accuracycalibrate2.o(i.Back))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = Back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_accuracycalibrate2.o(i.gt_init_AccuracyCalibrate2)
</UL>
<P><STRONG><a name="[a9]"></a>clock1_0_cb</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, activity_accuracycalibrate2.o(i.clock1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = clock1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_accuracycalibrate2.o(i.gt_init_AccuracyCalibrate2)
</UL>
<P><STRONG><a name="[666]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_accuracycalibrate2.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2
</UL>

<P><STRONG><a name="[ac]"></a>ChangeLiquid1</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, activity_accuracycalibrate2_1.o(i.ChangeLiquid1))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeLiquid1 &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_accuracycalibrate2_1.o(i.gt_init_AccuracyCalibrate2_1)
</UL>
<P><STRONG><a name="[ad]"></a>ChangeLiquid2</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, activity_accuracycalibrate2_1.o(i.ChangeLiquid2))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeLiquid2 &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_accuracycalibrate2_1.o(i.gt_init_AccuracyCalibrate2_1)
</UL>
<P><STRONG><a name="[ae]"></a>Confirm</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, activity_accuracycalibrate2_1.o(i.Confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = Confirm &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeInfusionTubeListToFlash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_accuracycalibrate2_1.o(i.gt_init_AccuracyCalibrate2_1)
</UL>
<P><STRONG><a name="[aa]"></a>EventUpdata</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, activity_accuracycalibrate2_1.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = EventUpdata &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_accuracycalibrate2_1.o(i.gt_init_AccuracyCalibrate2_1)
</UL>
<P><STRONG><a name="[ab]"></a>back</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_accuracycalibrate2_1.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_accuracycalibrate2_1.o(i.gt_init_AccuracyCalibrate2_1)
</UL>
<P><STRONG><a name="[667]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_accuracycalibrate2_1.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate2_1
</UL>

<P><STRONG><a name="[b0]"></a>Back</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, activity_accuracycalibrate3.o(i.Back))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = Back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_accuracycalibrate3.o(i.gt_init_AccuracyCalibrate3)
</UL>
<P><STRONG><a name="[b1]"></a>Confirm</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, activity_accuracycalibrate3.o(i.Confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = Confirm &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeInfusionTubeListToFlash
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineInfusionNodeByPosit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_accuracycalibrate3.o(i.gt_init_AccuracyCalibrate3)
</UL>
<P><STRONG><a name="[af]"></a>EventUpdata</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, activity_accuracycalibrate3.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EventUpdata &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_accuracycalibrate3.o(i.gt_init_AccuracyCalibrate3)
</UL>
<P><STRONG><a name="[b2]"></a>Input</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, activity_accuracycalibrate3.o(i.Input))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = Input &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_accuracycalibrate3.o(i.gt_init_AccuracyCalibrate3)
</UL>
<P><STRONG><a name="[668]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_accuracycalibrate3.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate3
</UL>

<P><STRONG><a name="[103]"></a>AccuracyCalibrate</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, activity_maintenance1_1.o(i.AccuracyCalibrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = AccuracyCalibrate &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_1.o(i.gt_init_Maintenance1_1)
</UL>
<P><STRONG><a name="[102]"></a>ChangeMaxSpeed</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, activity_maintenance1_1.o(i.ChangeMaxSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = ChangeMaxSpeed &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_1.o(i.gt_init_Maintenance1_1)
</UL>
<P><STRONG><a name="[100]"></a>EventUpdata</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, activity_maintenance1_1.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = EventUpdata &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemMaintainMessageToFlash
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_1.o(i.gt_init_Maintenance1_1)
</UL>
<P><STRONG><a name="[104]"></a>PressureCalibrate</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, activity_maintenance1_1.o(i.PressureCalibrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = PressureCalibrate &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_1.o(i.gt_init_Maintenance1_1)
</UL>
<P><STRONG><a name="[101]"></a>back</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, activity_maintenance1_1.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = back &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_1.o(i.gt_init_Maintenance1_1)
</UL>
<P><STRONG><a name="[106]"></a>down</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance1_1.o(i.down))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = down &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_1.o(i.gt_init_Maintenance1_1)
</UL>
<P><STRONG><a name="[682]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_maintenance1_1.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_1
</UL>

<P><STRONG><a name="[105]"></a>up</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance1_1.o(i.up))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = up &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_1.o(i.gt_init_Maintenance1_1)
</UL>
<P><STRONG><a name="[669]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_accuracycalibrate4.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_AccuracyCalibrate4
</UL>

<P><STRONG><a name="[b3]"></a>img1_0_cb</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, activity_accuracycalibrate4.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_judge_obj_exists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_accuracycalibrate4.o(i.gt_init_AccuracyCalibrate4)
</UL>
<P><STRONG><a name="[c2]"></a>btn1_0_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_deletehistory.o(i.btn1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = btn1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_deletehistory.o(i.gt_init_DeleteHistory)
</UL>
<P><STRONG><a name="[c3]"></a>btn2_0_cb</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, activity_deletehistory.o(i.btn2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = btn2_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;destroyHistoryList
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_deletehistory.o(i.gt_init_DeleteHistory)
</UL>
<P><STRONG><a name="[66d]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_deletehistory.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteHistory
</UL>

<P><STRONG><a name="[c5]"></a>btn1_0_cb</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, activity_doseunit.o(i.btn1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = btn1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_group_get_active_obj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_doseunit.o(i.gt_init_DoseUnit)
</UL>
<P><STRONG><a name="[66e]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_doseunit.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
</UL>

<P><STRONG><a name="[c4]"></a>img1_0_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_doseunit.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_doseunit.o(i.gt_init_DoseUnit)
</UL>
<P><STRONG><a name="[da]"></a>Choice</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, activity_drugchoice.o(i.Choice))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = Choice &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_judge_obj_exists
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTheDrugNodeName
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineDrugNodeByPosit
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_drugchoice.o(i.gt_init_DrugChoice)
</UL>
<P><STRONG><a name="[d9]"></a>Down</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, activity_drugchoice.o(i.Down))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Down &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineDrugNode_four_ById
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_drugchoice.o(i.gt_init_DrugChoice)
</UL>
<P><STRONG><a name="[d8]"></a>Up</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, activity_drugchoice.o(i.Up))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Up &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineDrugNode_four_ById
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_drugchoice.o(i.gt_init_DrugChoice)
</UL>
<P><STRONG><a name="[67b]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_drugchoice.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
</UL>

<P><STRONG><a name="[d7]"></a>img1_0_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_drugchoice.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_drugchoice.o(i.gt_init_DrugChoice)
</UL>
<P><STRONG><a name="[366]"></a>showpage</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, activity_drugchoice.o(i.showpage))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = showpage &rArr; gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugChoice
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
</UL>

<P><STRONG><a name="[e0]"></a>Confirm</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, activity_drugunit.o(i.Confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = Confirm &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_group_get_active_obj
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_drugunit.o(i.gt_init_DrugUnit)
</UL>
<P><STRONG><a name="[df]"></a>back</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_drugunit.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_drugunit.o(i.gt_init_DrugUnit)
</UL>
<P><STRONG><a name="[67c]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_drugunit.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugUnit
</UL>

<P><STRONG><a name="[10c]"></a>ChangeAlarm</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_maintenance1_2.o(i.ChangeAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = ChangeAlarm &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemMaintainMessageToFlash
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_2.o(i.gt_init_Maintenance1_2)
</UL>
<P><STRONG><a name="[107]"></a>back</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, activity_maintenance1_2.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = back &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_2.o(i.gt_init_Maintenance1_2)
</UL>
<P><STRONG><a name="[683]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_maintenance1_2.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_2
</UL>

<P><STRONG><a name="[108]"></a>rect4_0_cb</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_maintenance1_2.o(i.rect4_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = rect4_0_cb &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemMaintainMessageToFlash
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_2.o(i.gt_init_Maintenance1_2)
</UL>
<P><STRONG><a name="[109]"></a>rect5_0_cb</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_maintenance1_2.o(i.rect5_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = rect5_0_cb &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemMaintainMessageToFlash
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_2.o(i.gt_init_Maintenance1_2)
</UL>
<P><STRONG><a name="[10a]"></a>svg1_0_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance1_2.o(i.svg1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = svg1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_2.o(i.gt_init_Maintenance1_2)
</UL>
<P><STRONG><a name="[10b]"></a>svg2_0_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance1_2.o(i.svg2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = svg2_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_2.o(i.gt_init_Maintenance1_2)
</UL>
<P><STRONG><a name="[112]"></a>AddBrand</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, activity_maintenance1_3.o(i.AddBrand))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = AddBrand &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowInfusionListNum
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_3.o(i.gt_init_Maintenance1_3)
</UL>
<P><STRONG><a name="[113]"></a>DelBrand</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, activity_maintenance1_3.o(i.DelBrand))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = DelBrand &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowInfusionListNum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_3.o(i.gt_init_Maintenance1_3)
</UL>
<P><STRONG><a name="[685]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_maintenance1_3.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_3
</UL>

<P><STRONG><a name="[10e]"></a>img1_0_cb</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, activity_maintenance1_3.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_3.o(i.gt_init_Maintenance1_3)
</UL>
<P><STRONG><a name="[111]"></a>rect2_0_cb</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, activity_maintenance1_3.o(i.rect2_0_cb))
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_3.o(i.gt_init_Maintenance1_3)
</UL>
<P><STRONG><a name="[10f]"></a>svg1_0_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance1_3.o(i.svg1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = svg1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_3.o(i.gt_init_Maintenance1_3)
</UL>
<P><STRONG><a name="[110]"></a>svg2_0_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance1_3.o(i.svg2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = svg2_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_3.o(i.gt_init_Maintenance1_3)
</UL>
<P><STRONG><a name="[10d]"></a>update</STRONG> (Thumb, 104 bytes, Stack size 216 bytes, activity_maintenance1_3.o(i.update))
<BR><BR>[Stack]<UL><LI>Max Depth = 992<LI>Call Chain = update &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddInfusionNode
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_3.o(i.gt_init_Maintenance1_3)
</UL>
<P><STRONG><a name="[118]"></a>AddDrug</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, activity_maintenance1_4.o(i.AddDrug))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = AddDrug &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowDrugListNum
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_4.o(i.gt_init_Maintenance1_4)
</UL>
<P><STRONG><a name="[119]"></a>DeleteDrug</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, activity_maintenance1_4.o(i.DeleteDrug))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = DeleteDrug &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNowDrugListNum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_4.o(i.gt_init_Maintenance1_4)
</UL>
<P><STRONG><a name="[114]"></a>EventUpdata</STRONG> (Thumb, 104 bytes, Stack size 264 bytes, activity_maintenance1_4.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040<LI>Call Chain = EventUpdata &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDrugNode
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_4.o(i.gt_init_Maintenance1_4)
</UL>
<P><STRONG><a name="[11a]"></a>ExportHistory</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance1_4.o(i.ExportHistory))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ExportHistory &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_4.o(i.gt_init_Maintenance1_4)
</UL>
<P><STRONG><a name="[686]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_maintenance1_4.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_4
</UL>

<P><STRONG><a name="[115]"></a>img1_0_cb</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, activity_maintenance1_4.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_4.o(i.gt_init_Maintenance1_4)
</UL>
<P><STRONG><a name="[116]"></a>svg1_0_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance1_4.o(i.svg1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = svg1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_4.o(i.gt_init_Maintenance1_4)
</UL>
<P><STRONG><a name="[117]"></a>svg2_0_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance1_4.o(i.svg2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = svg2_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_4.o(i.gt_init_Maintenance1_4)
</UL>
<P><STRONG><a name="[122]"></a>AccuracyCalibrate</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, activity_maintenance2_1.o(i.AccuracyCalibrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = AccuracyCalibrate &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance2_1.o(i.gt_init_Maintenance2_1)
</UL>
<P><STRONG><a name="[123]"></a>PressureCalibrate</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, activity_maintenance2_1.o(i.PressureCalibrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = PressureCalibrate &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance2_1.o(i.gt_init_Maintenance2_1)
</UL>
<P><STRONG><a name="[124]"></a>SystemCheck</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance2_1.o(i.SystemCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = SystemCheck &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance2_1.o(i.gt_init_Maintenance2_1)
</UL>
<P><STRONG><a name="[121]"></a>back</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, activity_maintenance2_1.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = back &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance2_1.o(i.gt_init_Maintenance2_1)
</UL>
<P><STRONG><a name="[126]"></a>down</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance2_1.o(i.down))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = down &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance2_1.o(i.gt_init_Maintenance2_1)
</UL>
<P><STRONG><a name="[688]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_maintenance2_1.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
</UL>

<P><STRONG><a name="[125]"></a>up</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance2_1.o(i.up))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = up &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance2_1.o(i.gt_init_Maintenance2_1)
</UL>
<P><STRONG><a name="[12c]"></a>ChangeSeriesNumber</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, activity_maintenance2_2.o(i.ChangeSeriesNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeSeriesNumber &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance2_2.o(i.gt_init_Maintenance2_2)
</UL>
<P><STRONG><a name="[12d]"></a>Delete_History</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance2_2.o(i.Delete_History))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = Delete_History &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance2_2.o(i.gt_init_Maintenance2_2)
</UL>
<P><STRONG><a name="[127]"></a>EventUpdata</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, activity_maintenance2_2.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = EventUpdata &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance2_2.o(i.gt_init_Maintenance2_2)
</UL>
<P><STRONG><a name="[129]"></a>SensorAD</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance2_2.o(i.SensorAD))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = SensorAD &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance2_2.o(i.gt_init_Maintenance2_2)
</UL>
<P><STRONG><a name="[128]"></a>back</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, activity_maintenance2_2.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = back &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance2_2.o(i.gt_init_Maintenance2_2)
</UL>
<P><STRONG><a name="[12b]"></a>down</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, activity_maintenance2_2.o(i.down))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = down &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance2_2.o(i.gt_init_Maintenance2_2)
</UL>
<P><STRONG><a name="[689]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_maintenance2_2.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_2
</UL>

<P><STRONG><a name="[12a]"></a>up</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, activity_maintenance2_2.o(i.up))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = up &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance2_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance2_2.o(i.gt_init_Maintenance2_2)
</UL>
<P><STRONG><a name="[179]"></a>Back</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_restorefactory.o(i.Back))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = Back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_restorefactory.o(i.gt_init_RestoreFactory)
</UL>
<P><STRONG><a name="[178]"></a>Confirm</STRONG> (Thumb, 76 bytes, Stack size 112 bytes, activity_restorefactory.o(i.Confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Confirm &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bpr_reset
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_restorefactory.o(i.gt_init_RestoreFactory)
</UL>
<P><STRONG><a name="[695]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_restorefactory.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_RestoreFactory
</UL>

<P><STRONG><a name="[1f5]"></a>ChangeBody</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, activity_weightmode.o(i.ChangeBody))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeBody &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode.o(i.gt_init_WeightMode)
</UL>
<P><STRONG><a name="[1f7]"></a>ChangeLiquid</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, activity_weightmode.o(i.ChangeLiquid))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeLiquid &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode.o(i.gt_init_WeightMode)
</UL>
<P><STRONG><a name="[1f6]"></a>ChangeMedicine</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, activity_weightmode.o(i.ChangeMedicine))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeMedicine &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode.o(i.gt_init_WeightMode)
</UL>
<P><STRONG><a name="[1f3]"></a>EventUpdata</STRONG> (Thumb, 182 bytes, Stack size 72 bytes, activity_weightmode.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = EventUpdata &rArr; UpdateWeightModeTheDisplay &rArr; DOSEUintComeToConversion &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWeightModeTheDisplay
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode.o(i.gt_init_WeightMode)
</UL>
<P><STRONG><a name="[1fb]"></a>Next</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_weightmode.o(i.Next))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = Next &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode.o(i.gt_init_WeightMode)
</UL>
<P><STRONG><a name="[1f9]"></a>Purge1</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, activity_weightmode.o(i.Purge1))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = Purge1 &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode.o(i.gt_init_WeightMode)
</UL>
<P><STRONG><a name="[1f8]"></a>Run</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, activity_weightmode.o(i.Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = Run &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWeightModeMessageToFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode.o(i.gt_init_WeightMode)
</UL>
<P><STRONG><a name="[1fc]"></a>Timer_300mSecond</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, activity_weightmode.o(i.Timer_300mSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = Timer_300mSecond &rArr; Run &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode.o(i.gt_init_WeightMode)
</UL>
<P><STRONG><a name="[1fa]"></a>btn3_0_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_weightmode.o(i.btn3_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = btn3_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode.o(i.gt_init_WeightMode)
</UL>
<P><STRONG><a name="[6bb]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_weightmode.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode
</UL>

<P><STRONG><a name="[1f4]"></a>img1_0_cb</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, activity_weightmode.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode.o(i.gt_init_WeightMode)
</UL>
<P><STRONG><a name="[20a]"></a>ChangeDoseSpeed</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, activity_weightmoderun.o(i.ChangeDoseSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = ChangeDoseSpeed &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmLeve12
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmoderun.o(i.gt_init_WeightModeRun)
</UL>
<P><STRONG><a name="[206]"></a>EventUpdata</STRONG> (Thumb, 288 bytes, Stack size 72 bytes, activity_weightmoderun.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = EventUpdata &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWeightModeMessageToFlash
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWeightModeTheDisplay
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmoderun.o(i.gt_init_WeightModeRun)
</UL>
<P><STRONG><a name="[207]"></a>MotorRun</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, activity_weightmoderun.o(i.MotorRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MotorRun &rArr; CalSpeed &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgressRunSpeed
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSpeed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmoderun.o(i.gt_init_WeightModeRun)
</UL>
<P><STRONG><a name="[20b]"></a>Pause</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, activity_weightmoderun.o(i.Pause))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = Pause &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWeightModeMessageToFlash
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmoderun.o(i.gt_init_WeightModeRun)
</UL>
<P><STRONG><a name="[20e]"></a>Timer_300mSecond</STRONG> (Thumb, 576 bytes, Stack size 88 bytes, activity_weightmoderun.o(i.Timer_300mSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = Timer_300mSecond &rArr; Pause &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnLock
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalCumulant
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pause
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmoderun.o(i.gt_init_WeightModeRun)
</UL>
<P><STRONG><a name="[208]"></a>Timer_OneSecond</STRONG> (Thumb, 548 bytes, Stack size 176 bytes, activity_weightmoderun.o(i.Timer_OneSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Timer_OneSecond &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnLock
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNerDoneFlag
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockNewAFlag
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockTimeCountDown
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedinfusionNeaeTimeAlarm
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedInfusionUpBlock
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSurplusTime
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmoderun.o(i.gt_init_WeightModeRun)
</UL>
<P><STRONG><a name="[209]"></a>bolus</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, activity_weightmoderun.o(i.bolus))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = bolus &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmLeve12
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmoderun.o(i.gt_init_WeightModeRun)
</UL>
<P><STRONG><a name="[3e9]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_weightmoderun.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightModeRun
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[67]"></a>run_progress_func</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, activity_weightmoderun.o(i.run_progress_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = run_progress_func &rArr; gt_obj_set_pos &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmoderun.o(i.MotorRun)
</UL>
<P><STRONG><a name="[20c]"></a>svg1_0_cb</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, activity_weightmoderun.o(i.svg1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = svg1_0_cb &rArr; gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmoderun.o(i.gt_init_WeightModeRun)
</UL>
<P><STRONG><a name="[20d]"></a>svg2_0_cb</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, activity_weightmoderun.o(i.svg2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = svg2_0_cb &rArr; gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnLock
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmoderun.o(i.gt_init_WeightModeRun)
</UL>
<P><STRONG><a name="[1ff]"></a>ChangeDoseSpeed</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, activity_weightmode2.o(i.ChangeDoseSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeDoseSpeed &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode2.o(i.gt_init_WeightMode2)
</UL>
<P><STRONG><a name="[200]"></a>ChangeWQuantity</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, activity_weightmode2.o(i.ChangeWQuantity))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeWQuantity &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode2.o(i.gt_init_WeightMode2)
</UL>
<P><STRONG><a name="[204]"></a>DoseUintChange</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, activity_weightmode2.o(i.DoseUintChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = DoseUintChange &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DoseUnit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode2.o(i.gt_init_WeightMode2)
</UL>
<P><STRONG><a name="[1fd]"></a>EventUpdata</STRONG> (Thumb, 314 bytes, Stack size 88 bytes, activity_weightmode2.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = EventUpdata &rArr; __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWeightModeTheDisplay
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode2.o(i.gt_init_WeightMode2)
</UL>
<P><STRONG><a name="[205]"></a>Timer_300mSecond</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, activity_weightmode2.o(i.Timer_300mSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = Timer_300mSecond &rArr; btn1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn1_0_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode2.o(i.gt_init_WeightMode2)
</UL>
<P><STRONG><a name="[203]"></a>UpPage</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_weightmode2.o(i.UpPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = UpPage &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode2.o(i.gt_init_WeightMode2)
</UL>
<P><STRONG><a name="[201]"></a>btn1_0_cb</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, activity_weightmode2.o(i.btn1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = btn1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWeightModeMessageToFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode2.o(i.gt_init_WeightMode2)
</UL>
<P><STRONG><a name="[202]"></a>btn2_0_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_weightmode2.o(i.btn2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = btn2_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode2.o(i.gt_init_WeightMode2)
</UL>
<P><STRONG><a name="[6bd]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_weightmode2.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_WeightMode2
</UL>

<P><STRONG><a name="[1fe]"></a>img1_0_cb</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, activity_weightmode2.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_weightmode2.o(i.gt_init_WeightMode2)
</UL>
<P><STRONG><a name="[159]"></a>Confirm</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_pressurecalibrate1.o(i.Confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = Confirm &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurecalibrate1.o(i.gt_init_PressureCalibrate1)
</UL>
<P><STRONG><a name="[158]"></a>back</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_pressurecalibrate1.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurecalibrate1.o(i.gt_init_PressureCalibrate1)
</UL>
<P><STRONG><a name="[690]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_pressurecalibrate1.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate1
</UL>

<P><STRONG><a name="[164]"></a>AD120</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, activity_pressurecalibrate2.o(i.AD120))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = AD120 &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
</UL>
<P><STRONG><a name="[15c]"></a>Confirm</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, activity_pressurecalibrate2.o(i.Confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = Confirm &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_judge_obj_exists
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeInfusionTubeListToFlash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
</UL>
<P><STRONG><a name="[15a]"></a>EventUpdata</STRONG> (Thumb, 230 bytes, Stack size 72 bytes, activity_pressurecalibrate2.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = EventUpdata &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
</UL>
<P><STRONG><a name="[165]"></a>P120</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, activity_pressurecalibrate2.o(i.P120))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = P120 &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
</UL>
<P><STRONG><a name="[161]"></a>P40</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, activity_pressurecalibrate2.o(i.P40))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = P40 &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
</UL>
<P><STRONG><a name="[163]"></a>P70</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, activity_pressurecalibrate2.o(i.P70))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = P70 &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
</UL>
<P><STRONG><a name="[15e]"></a>Pause</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, activity_pressurecalibrate2.o(i.Pause))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Pause &rArr; TMC2226_MotorStop &rArr; motor_init &rArr; delay_ms &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
</UL>
<P><STRONG><a name="[15d]"></a>Run</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, activity_pressurecalibrate2.o(i.Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Run &rArr; TMC2226_MotorRun &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
</UL>
<P><STRONG><a name="[166]"></a>Timer_ThirmSec</STRONG> (Thumb, 30 bytes, Stack size 56 bytes, activity_pressurecalibrate2.o(i.Timer_ThirmSec))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Timer_ThirmSec &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
</UL>
<P><STRONG><a name="[15f]"></a>ad0</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, activity_pressurecalibrate2.o(i.ad0))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ad0 &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
</UL>
<P><STRONG><a name="[160]"></a>ad40</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, activity_pressurecalibrate2.o(i.ad40))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ad40 &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
</UL>
<P><STRONG><a name="[162]"></a>ad70</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, activity_pressurecalibrate2.o(i.ad70))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ad70 &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
</UL>
<P><STRONG><a name="[15b]"></a>back</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, activity_pressurecalibrate2.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_judge_obj_exists
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_pressurecalibrate2.o(i.gt_init_PressureCalibrate2)
</UL>
<P><STRONG><a name="[691]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_pressurecalibrate2.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_PressureCalibrate2
</UL>

<P><STRONG><a name="[8a]"></a>btn_callback</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, activity_logo.o(i.btn_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = btn_callback &rArr; gt_status_bar_right_add_icon &rArr; _create_img_obj &rArr; gt_img_create &rArr; gt_obj_class_create &rArr; gt_layout_row_grow &rArr; _row_grow_inside_invert &rArr;  _row_grow_inside_invert (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_color
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_bg_color
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_right_add_icon
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNoOperFunctionTimeAlarm
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleargHintAlarm
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearLowAlarm
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmSoundSwitch
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(i.exitlogo)
</UL>
<P><STRONG><a name="[f7]"></a>exitlogo</STRONG> (Thumb, 496 bytes, Stack size 64 bytes, activity_logo.o(i.exitlogo))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = exitlogo &rArr; gt_disp_stack_load_scr &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_add_event_cb
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_set_home_scr_id
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_scr_stack_register_id_list
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_show_bg
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_scale
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_height
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_thick_en
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_thick_cn
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_size
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_gray
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_family_fl
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_family_cn
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_font_color
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_set_bg_color
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_left_add_text
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_find_by
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_add_text
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_custom_add_icon
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_status_bar_create
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_on
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_off
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588F_Send_Data
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepStop
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepStart
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_logo.o(i.gt_init_Logo)
</UL>
<P><STRONG><a name="[584]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_logo.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Logo
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitlogo
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_callback
</UL>

<P><STRONG><a name="[d2]"></a>ChangeDrip</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, activity_dripmoderun.o(i.ChangeDrip))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeDrip &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmLeve12
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmoderun.o(i.gt_init_DripModeRun)
</UL>
<P><STRONG><a name="[ce]"></a>EventUpdata</STRONG> (Thumb, 212 bytes, Stack size 72 bytes, activity_dripmoderun.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = EventUpdata &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDripModeMessageToFlash
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDripModeTheDisplay
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmoderun.o(i.gt_init_DripModeRun)
</UL>
<P><STRONG><a name="[cf]"></a>MotorRun</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, activity_dripmoderun.o(i.MotorRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MotorRun &rArr; CalSpeed &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgressRunSpeed
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSpeed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmoderun.o(i.gt_init_DripModeRun)
</UL>
<P><STRONG><a name="[d6]"></a>Timer_300mSecond</STRONG> (Thumb, 576 bytes, Stack size 88 bytes, activity_dripmoderun.o(i.Timer_300mSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = Timer_300mSecond &rArr; back &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnLock
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalCumulant
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmoderun.o(i.gt_init_DripModeRun)
</UL>
<P><STRONG><a name="[d0]"></a>Timer_OneSecond</STRONG> (Thumb, 564 bytes, Stack size 176 bytes, activity_dripmoderun.o(i.Timer_OneSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Timer_OneSecond &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnLock
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNerDoneFlag
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockNewAFlag
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockTimeCountDown
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedinfusionNeaeTimeAlarm
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedInfusionUpBlock
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSurplusTime
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmoderun.o(i.gt_init_DripModeRun)
</UL>
<P><STRONG><a name="[d3]"></a>back</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, activity_dripmoderun.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = back &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDripModeMessageToFlash
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmoderun.o(i.gt_init_DripModeRun)
</UL>
<P><STRONG><a name="[d1]"></a>bolus</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, activity_dripmoderun.o(i.bolus))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = bolus &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmLeve12
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmoderun.o(i.gt_init_DripModeRun)
</UL>
<P><STRONG><a name="[3ea]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_dripmoderun.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DripModeRun
</UL>

<P><STRONG><a name="[68]"></a>run_progress_func</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, activity_dripmoderun.o(i.run_progress_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = run_progress_func &rArr; gt_obj_set_pos &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmoderun.o(i.MotorRun)
</UL>
<P><STRONG><a name="[d4]"></a>svg1_0_cb</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, activity_dripmoderun.o(i.svg1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = svg1_0_cb &rArr; gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmoderun.o(i.gt_init_DripModeRun)
</UL>
<P><STRONG><a name="[d5]"></a>svg2_0_cb</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, activity_dripmoderun.o(i.svg2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = svg2_0_cb &rArr; gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnLock
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_dripmoderun.o(i.gt_init_DripModeRun)
</UL>
<P><STRONG><a name="[1ac]"></a>ChangeSpeed</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, activity_speedandtimemoderun.o(i.ChangeSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeSpeed &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmLeve12
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
</UL>
<P><STRONG><a name="[1a8]"></a>EventUpdata</STRONG> (Thumb, 250 bytes, Stack size 72 bytes, activity_speedandtimemoderun.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = EventUpdata &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_judge_obj_exists
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteTimeModeMessageToFlash
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpeedModeMessageToFlash
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSpeedModeTheDisplay
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
</UL>
<P><STRONG><a name="[1a9]"></a>MotorRun</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, activity_speedandtimemoderun.o(i.MotorRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = MotorRun &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgressRunSpeed
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSpeed
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
</UL>
<P><STRONG><a name="[1b0]"></a>Timer_300mSecond</STRONG> (Thumb, 896 bytes, Stack size 96 bytes, activity_speedandtimemoderun.o(i.Timer_300mSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = Timer_300mSecond &rArr; back &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnLock
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedInfusionDownBlock_AD
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalCumulant
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
</UL>
<P><STRONG><a name="[1aa]"></a>Timer_OneSecond</STRONG> (Thumb, 564 bytes, Stack size 176 bytes, activity_speedandtimemoderun.o(i.Timer_OneSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Timer_OneSecond &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnLock
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNerDoneFlag
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockNewAFlag
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockTimeCountDown
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedinfusionNeaeTimeAlarm
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedInfusionUpBlock
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSurplusTime
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
</UL>
<P><STRONG><a name="[1ad]"></a>back</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, activity_speedandtimemoderun.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = back &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_judge_obj_exists
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteTimeModeMessageToFlash
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSpeedModeMessageToFlash
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_300mSecond
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
</UL>
<P><STRONG><a name="[1ab]"></a>bolus</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, activity_speedandtimemoderun.o(i.bolus))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = bolus &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoLockTime
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmLeve12
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
</UL>
<P><STRONG><a name="[3eb]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_speedandtimemoderun.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SpeedAndTimeModeRun
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[69]"></a>run_progress_func</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, activity_speedandtimemoderun.o(i.run_progress_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = run_progress_func &rArr; gt_obj_set_pos &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedandtimemoderun.o(i.MotorRun)
</UL>
<P><STRONG><a name="[1ae]"></a>svg1_0_cb</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, activity_speedandtimemoderun.o(i.svg1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = svg1_0_cb &rArr; gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
</UL>
<P><STRONG><a name="[1af]"></a>svg2_0_cb</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, activity_speedandtimemoderun.o(i.svg2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = svg2_0_cb &rArr; gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnLock
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLockFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_speedandtimemoderun.o(i.gt_init_SpeedAndTimeModeRun)
</UL>
<P><STRONG><a name="[e2]"></a>btn1_0_cb</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, activity_exporthistory.o(i.btn1_0_cb))
<BR>[Address Reference Count : 1]<UL><LI> activity_exporthistory.o(i.gt_init_ExportHistory)
</UL>
<P><STRONG><a name="[67d]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_exporthistory.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ExportHistory
</UL>

<P><STRONG><a name="[e1]"></a>img1_0_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_exporthistory.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_exporthistory.o(i.gt_init_ExportHistory)
</UL>
<P><STRONG><a name="[156]"></a>ChangeDrips</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, activity_paramsetting4.o(i.ChangeDrips))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeDrips &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting4.o(i.gt_init_ParamSetting4)
</UL>
<P><STRONG><a name="[155]"></a>DownPage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_paramsetting4.o(i.DownPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = DownPage &rArr; gt_disp_stack_load_scr &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting4.o(i.gt_init_ParamSetting4)
</UL>
<P><STRONG><a name="[152]"></a>EventUpdata</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, activity_paramsetting4.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = EventUpdata &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDripModeMessageToFlash
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting4.o(i.gt_init_ParamSetting4)
</UL>
<P><STRONG><a name="[154]"></a>UpPage</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_paramsetting4.o(i.UpPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = UpPage &rArr; gt_disp_stack_load_scr &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting4.o(i.gt_init_ParamSetting4)
</UL>
<P><STRONG><a name="[153]"></a>back</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, activity_paramsetting4.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = back &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_paramsetting4.o(i.gt_init_ParamSetting4)
</UL>
<P><STRONG><a name="[68f]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_paramsetting4.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_ParamSetting4
</UL>

<P><STRONG><a name="[1bd]"></a>btn1_0_cb</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, activity_systemcheck.o(i.btn1_0_cb))
<BR>[Address Reference Count : 1]<UL><LI> activity_systemcheck.o(i.gt_init_SystemCheck)
</UL>
<P><STRONG><a name="[1be]"></a>btn1_1_cb</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, activity_systemcheck.o(i.btn1_1_cb))
<BR>[Address Reference Count : 1]<UL><LI> activity_systemcheck.o(i.gt_init_SystemCheck)
</UL>
<P><STRONG><a name="[1bf]"></a>btn1_2_cb</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, activity_systemcheck.o(i.btn1_2_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = btn1_2_cb &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemcheck.o(i.gt_init_SystemCheck)
</UL>
<P><STRONG><a name="[1c0]"></a>btn2_0_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_systemcheck.o(i.btn2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = btn2_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_systemcheck.o(i.gt_init_SystemCheck)
</UL>
<P><STRONG><a name="[6b1]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_systemcheck.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SystemCheck
</UL>

<P><STRONG><a name="[11f]"></a>DateAndTime</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, activity_maintenance1_5.o(i.DateAndTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = DateAndTime &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_set_obj_title
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_5.o(i.gt_init_Maintenance1_5)
</UL>
<P><STRONG><a name="[687]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_maintenance1_5.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Maintenance1_5
</UL>

<P><STRONG><a name="[11b]"></a>img1_0_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance1_5.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_5.o(i.gt_init_Maintenance1_5)
</UL>
<P><STRONG><a name="[120]"></a>language</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance1_5.o(i.language))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = language &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_5.o(i.gt_init_Maintenance1_5)
</UL>
<P><STRONG><a name="[11e]"></a>rect2_0_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance1_5.o(i.rect2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = rect2_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_5.o(i.gt_init_Maintenance1_5)
</UL>
<P><STRONG><a name="[11c]"></a>svg1_0_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance1_5.o(i.svg1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = svg1_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_5.o(i.gt_init_Maintenance1_5)
</UL>
<P><STRONG><a name="[11d]"></a>svg2_0_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, activity_maintenance1_5.o(i.svg2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = svg2_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_maintenance1_5.o(i.gt_init_Maintenance1_5)
</UL>
<P><STRONG><a name="[21a]"></a>Confirm</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, activity_shutdown.o(i.Confirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = Confirm &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_shutdown.o(i.gt_init_shutdown)
</UL>
<P><STRONG><a name="[21b]"></a>StandbyBegin</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, activity_shutdown.o(i.StandbyBegin))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = StandbyBegin &rArr; not_first_start_write_history_info &rArr; history_write_to_flash &rArr; spiflash_write &rArr; spiflash_write_nocheck &rArr; spiflash_page_write &rArr; spiflash_wait_busy &rArr; spiflash_read_sr1 &rArr; spi_byte_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;not_first_start_write_history_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_shutdown.o(i.gt_init_shutdown)
</UL>
<P><STRONG><a name="[219]"></a>back</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_shutdown.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_shutdown.o(i.gt_init_shutdown)
</UL>
<P><STRONG><a name="[185]"></a>AD_U</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, activity_sensormonitor.o(i.AD_U))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = AD_U &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_sensormonitor.o(i.gt_init_SensorMonitor)
</UL>
<P><STRONG><a name="[189]"></a>AgainstRun</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, activity_sensormonitor.o(i.AgainstRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = AgainstRun &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_sensormonitor.o(i.gt_init_SensorMonitor)
</UL>
<P><STRONG><a name="[18c]"></a>BEEP_detection</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, activity_sensormonitor.o(i.BEEP_detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = BEEP_detection &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepStop
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepStart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_sensormonitor.o(i.gt_init_SensorMonitor)
</UL>
<P><STRONG><a name="[183]"></a>EventUpdata</STRONG> (Thumb, 156 bytes, Stack size 72 bytes, activity_sensormonitor.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = EventUpdata &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_speed2force
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemMaintainMessageToFlash
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_sensormonitor.o(i.gt_init_SensorMonitor)
</UL>
<P><STRONG><a name="[18b]"></a>LED_detection</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, activity_sensormonitor.o(i.LED_detection))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = LED_detection &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_on
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_sensormonitor.o(i.gt_init_SensorMonitor)
</UL>
<P><STRONG><a name="[188]"></a>Pause</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, activity_sensormonitor.o(i.Pause))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Pause &rArr; TMC2226_MotorStop &rArr; motor_init &rArr; delay_ms &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_sensormonitor.o(i.gt_init_SensorMonitor)
</UL>
<P><STRONG><a name="[18a]"></a>RTLrun</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, activity_sensormonitor.o(i.RTLrun))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = RTLrun &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_sensormonitor.o(i.gt_init_SensorMonitor)
</UL>
<P><STRONG><a name="[18d]"></a>Timer_ThirmSec</STRONG> (Thumb, 440 bytes, Stack size 88 bytes, activity_sensormonitor.o(i.Timer_ThirmSec))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Timer_ThirmSec &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_optocoupler_signal
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_sensormonitor.o(i.gt_init_SensorMonitor)
</UL>
<P><STRONG><a name="[187]"></a>ad0_change</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, activity_sensormonitor.o(i.ad0_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ad0_change &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_sensormonitor.o(i.gt_init_SensorMonitor)
</UL>
<P><STRONG><a name="[186]"></a>back</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, activity_sensormonitor.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_off
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepStop
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_sensormonitor.o(i.gt_init_SensorMonitor)
</UL>
<P><STRONG><a name="[6a1]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_sensormonitor.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_SensorMonitor
</UL>

<P><STRONG><a name="[184]"></a>rect2_0_cb</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, activity_sensormonitor.o(i.rect2_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = rect2_0_cb &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_sensormonitor.o(i.gt_init_SensorMonitor)
</UL>
<P><STRONG><a name="[dd]"></a>Down</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, activity_drugdelete.o(i.Down))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Down &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineDrugNode_four_ById
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_drugdelete.o(i.gt_init_DrugDelete)
</UL>
<P><STRONG><a name="[dc]"></a>Up</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, activity_drugdelete.o(i.Up))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Up &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineDrugNode_four_ById
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_drugdelete.o(i.gt_init_DrugDelete)
</UL>
<P><STRONG><a name="[78]"></a>back</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, activity_drugdelete.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = back &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_drugdelete.o(i._dialog3_init)
</UL>
<P><STRONG><a name="[46c]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_drugdelete.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog3_init
</UL>

<P><STRONG><a name="[db]"></a>img1_0_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_drugdelete.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_drugdelete.o(i.gt_init_DrugDelete)
</UL>
<P><STRONG><a name="[368]"></a>showpage</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, activity_drugdelete.o(i.showpage))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = showpage &rArr; gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DrugDelete
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drugaffirm
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
</UL>

<P><STRONG><a name="[f3]"></a>MotorRun</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, activity_kvorun.o(i.MotorRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MotorRun &rArr; CalSpeed &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_create
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgressRunSpeed
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowcumulant
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalSpeed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_kvorun.o(i.gt_init_KVORun)
</UL>
<P><STRONG><a name="[f6]"></a>Timer_300mSecond</STRONG> (Thumb, 422 bytes, Stack size 80 bytes, activity_kvorun.o(i.Timer_300mSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Timer_300mSecond &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorRun
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedInfusionDownBlock_AD
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgeINjection
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNowAlarmLeve12
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalCumulant
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalAccumulativeBubble
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_kvorun.o(i.gt_init_KVORun)
</UL>
<P><STRONG><a name="[f4]"></a>Timer_OneSecond</STRONG> (Thumb, 344 bytes, Stack size 96 bytes, activity_kvorun.o(i.Timer_OneSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Timer_OneSecond &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_pos
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_progress_bar_set_color_act
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedYesNoAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressureConversion
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedInfusionUpBlock
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedInfusionTubeFallOff_P
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_color_hex
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_kvorun.o(i.gt_init_KVORun)
</UL>
<P><STRONG><a name="[f5]"></a>back</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, activity_kvorun.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_gt_timer_del
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMC2226_MotorStop
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearHighAlarm
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNowcumulant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_kvorun.o(i.gt_init_KVORun)
</UL>
<P><STRONG><a name="[3ec]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_kvorun.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_KVORun
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_OneSecond
</UL>

<P><STRONG><a name="[6a]"></a>run_progress_func</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, activity_kvorun.o(i.run_progress_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = run_progress_func &rArr; gt_obj_set_pos &rArr; gt_obj_set_area &rArr; _update_layer_top_widget_area &rArr; gt_obj_pos_change &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_pos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_kvorun.o(i.MotorRun)
</UL>
<P><STRONG><a name="[89]"></a>btn_callback</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dialog1.o(i.btn_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = btn_callback &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dialog1.o(i.dialog1_create)
</UL>
<P><STRONG><a name="[5b2]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, dialog1.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog1_create
</UL>

<P><STRONG><a name="[c0]"></a>Down</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, activity_deletebrand.o(i.Down))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Down &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineInfusionNode_six_ById
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_deletebrand.o(i.gt_init_DeleteBrand)
</UL>
<P><STRONG><a name="[c1]"></a>Up</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, activity_deletebrand.o(i.Up))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Up &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fineInfusionNode_six_ById
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showpage
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_deletebrand.o(i.gt_init_DeleteBrand)
</UL>
<P><STRONG><a name="[76]"></a>back</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, activity_deletebrand.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = back &rArr; gt_event_send &rArr; _gt_event_send_kernel &rArr;  _gt_event_send_kernel (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_deletebrand.o(i._dialog2_init)
</UL>
<P><STRONG><a name="[461]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_deletebrand.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dialog2_init
</UL>

<P><STRONG><a name="[be]"></a>img1_0_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_deletebrand.o(i.img1_0_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = img1_0_cb &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_deletebrand.o(i.gt_init_DeleteBrand)
</UL>
<P><STRONG><a name="[31f]"></a>showpage</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, activity_deletebrand.o(i.showpage))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = showpage &rArr; gt_obj_set_visible &rArr; gt_disp_invalid_area &rArr; _gt_disp_refr_append_area &rArr; gt_area_join
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_obj_set_visible
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_DeleteBrand
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Brandaffirm
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Up
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Down
</UL>

<P><STRONG><a name="[1bb]"></a>ChangeTime</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, activity_standby.o(i.ChangeTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = ChangeTime &rArr; gt_disp_stack_load_scr_anim &rArr; gt_disp_stack_load_scr_anim_st &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_load_scr_anim
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_standby.o(i.gt_init_Standby)
</UL>
<P><STRONG><a name="[1b9]"></a>EventUpdata</STRONG> (Thumb, 76 bytes, Stack size 64 bytes, activity_standby.o(i.EventUpdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = EventUpdata &rArr; gt_label_set_text &rArr; _mem_realloc &rArr; gt_tlsf_realloc &rArr; gt_tlsf_malloc &rArr; block_prepare_used &rArr; block_insert &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteParamSettingMessageToFlash
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_standby.o(i.gt_init_Standby)
</UL>
<P><STRONG><a name="[1bc]"></a>back</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_standby.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = back &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_standby.o(i.gt_init_Standby)
</UL>
<P><STRONG><a name="[6b0]"></a>gt_color_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, activity_standby.o(i.gt_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gt_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_init_Standby
</UL>

<P><STRONG><a name="[1ba]"></a>one_sec_timer</STRONG> (Thumb, 132 bytes, Stack size 72 bytes, activity_standby.o(i.one_sec_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = one_sec_timer &rArr; gt_disp_stack_go_back &rArr; gt_disp_load_scr_anim &rArr; gt_disp_ref_area &rArr; _flush_scr_by_anim &rArr; _gt_disp_check_and_copy_foreach &rArr; _check_and_copy_foreach &rArr;  _check_and_copy_foreach (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_disp_stack_go_back
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt_label_set_text
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNerDoneFlag
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNerDoneFlag
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAlarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddAlarm
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JudgedinfusionNeaeTimeAlarm
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_standby.o(i.gt_init_Standby)
</UL>
<P><STRONG><a name="[157]"></a>Timer_ThirmSec</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, activity_poweroff.o(i.Timer_ThirmSec))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Timer_ThirmSec &rArr; vtaskmanage &rArr; save_infusion_and_drug_to_flash &rArr; writeInfusionTubeListToFlash &rArr; flash_write &rArr; flash_write_nocheck &rArr; flash_halfword_program &rArr; flash_spim_operation_wait_for
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vtaskmanage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> activity_poweroff.o(i.gt_init_PowerOff)
</UL>
<P><STRONG><a name="[746]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[74a]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, tasks.o(i.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvAddNewTaskToReadyList
</UL>
<BR>[Calls]<UL><LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[74e]"></a>prvDeleteTCB</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tasks.o(i.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[243]"></a>prvIdleTask</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvIdleTask &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[750]"></a>prvInitialiseNewTask</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, tasks.o(i.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
</UL>
<BR>[Called By]<UL><LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[7c4]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[754]"></a>prvHeapInit</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, heap_4.o(i.prvHeapInit))
<BR><BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[755]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, heap_4.o(i.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[240]"></a>prvTaskExitError</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[7a6]"></a>usbd_get_descriptor</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, usbd_sdr.o(i.usbd_get_descriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = usbd_get_descriptor &rArr; usbd_ctrl_send &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_unsupport
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_device_request
</UL>

<P><STRONG><a name="[7a7]"></a>usbd_set_configuration</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, usbd_sdr.o(i.usbd_set_configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = usbd_set_configuration &rArr; usbd_ctrl_send_status &rArr; usbd_ept_send &rArr; usb_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_unsupport
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ctrl_send_status
</UL>
<BR>[Called By]<UL><LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_device_request
</UL>

<P><STRONG><a name="[2c3]"></a>ASCIIOffset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt_gui_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_GetASCII
</UL>

<P><STRONG><a name="[2c0]"></a>GBKOffset</STRONG> (Thumb, 242 bytes, Stack size 0 bytes, gt_gui_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_GetChinese
</UL>

<P><STRONG><a name="[2c4]"></a>LatinUnicodeALL</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, gt_gui_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_GetLatin
</UL>

<P><STRONG><a name="[2c8]"></a>MD5Decode</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gt_gui_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Transform
</UL>

<P><STRONG><a name="[2be]"></a>MD5Encode</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gt_gui_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MD5Encode
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Final
</UL>

<P><STRONG><a name="[2ba]"></a>MD5Final</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gt_gui_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = MD5Final &rArr; MD5Update &rArr; MD5Transform
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Update
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Encode
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Font_Init
</UL>

<P><STRONG><a name="[2b8]"></a>MD5Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gt_gui_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MD5Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Font_Init
</UL>

<P><STRONG><a name="[2bd]"></a>MD5Transform</STRONG> (Thumb, 1864 bytes, Stack size 360 bytes, gt_gui_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = MD5Transform
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Decode
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Update
</UL>

<P><STRONG><a name="[2b9]"></a>MD5Update</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, gt_gui_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = MD5Update &rArr; MD5Transform
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Transform
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT_Font_Init
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Final
</UL>

<P><STRONG><a name="[49b]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3fa]"></a>_printf_core</STRONG> (Thumb, 1704 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsnprintf
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[52c]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[52b]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[70]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsnprintf)
</UL>
<P><STRONG><a name="[6f]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL>
<P><STRONG><a name="[2df]"></a>_local_sscanf</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>

<P><STRONG><a name="[2e6]"></a>_fp_value</STRONG> (Thumb, 296 bytes, Stack size 64 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
